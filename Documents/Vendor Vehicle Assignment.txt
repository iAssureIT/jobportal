Required Vehicle
Sedan Car
From 30th April
To    5th May 


Sedan Cars Availability

Photo			Brand 	Model 	Number					Driver		Insurance  	PUC  				Permit 			Tax  			 		Availability 		Action
																										Validity 		Validity 		Validity 		Validity 			In Duration

[  ]			Maruti	Ciaz 		MH-12-AB-1234 	Anil 			31-12-2020  31-12-2020 	31-12-2020 	31-12-2020 		Available 			[Assign]
													White 					Jagtap

[  ]			Maruti  Dezire  MH-12-AB-3456 	Anil 			31-12-2020  31-12-2020 	31-12-2020 	31-12-2020 		Available 			[Assign]
													Red 	 					Jagtap

[  ]			Maruti	Ciaz 		MH-12-AB-1234 	Anil 			31-12-2020  31-12-2020 	31-12-2020 	31-12-2020 		Available 			[Assign]
													White 					Jagtap



[  ]			Maruti  Dezire  MH-12-AB-3456 	Anil 			31-12-2020  31-12-2020 	31-12-2020 	31-12-2020 		Booked 					[Cancel 
													Red 	 					Jagtap 																											TripID: 1234		 Assign]

[  ]			Maruti	Ciaz 		MH-12-AB-1234 	Anil 			31-12-2020  31-12-2020 	31-12-2020 	31-12-2020 		Booked 					[Cancel 
													Red 	 					Jagtap 																											TripID: 1234		 Assign]

[  ]			Maruti  Dezire  MH-12-AB-3456 	Anil 			31-12-2020  31-12-2020 	31-12-2020 	31-12-2020 		Booked 					[Cancel 
													Red 	 					Jagtap 																											TripID: 1234		 Assign]



[  ]			Maruti	Ciaz 		MH-12-AB-1234 	Anil 			01-05-2020  31-12-2020 	31-12-2020 	31-12-2020 		Not Ready 			 
													White 					Jagtap 																											{Insurance Issue}

[  ]			Maruti  Dezire  MH-12-AB-3456 	Anil 			31-12-2020  04-05-2020 	31-12-2020 	31-12-2020 		Not Ready 			
													Red 	 					Jagtap 																										  {PUC Issue}
								






VehicleMasters
VehicleDriverMappings 
BookingMasters


Input 
{ VehicleCatg: Sedan, fromDate: 30-04-2020, toDate: 05-05-2020, companyID: xxx, }


VehicleMasters
	.find({companyID: companyID, VehicleCatg: "Sedan"})
	.then( validVehicles => {
		let vehicleIDArray = validVehicles.map(({ vehicleID }) => vehicleID );

		VehicleDriverMappings
			.find({vehicleID in vehicleIDArray}) 
			.then(vehDrivers =>{
				Add Driver info for each vehicle in validVehicles;

				BookingMasters
					.find({vehicleID in vehicleIDArray, (bfd < dfd) && (btd < dfd) OR (bfd > dtd) && (btd > dtd), status not IN ["Cancelled by User", "Cancelled By Vendor", "Cancelled By Admin"] }) 
					.then(bookedVehiclesID =>{
						Mark Status of all bookedVehiclesIDs as "Booked" in validVehicles;

						App Validity Checks
						if(insuranceValidity > toDate, pucValidity > toDate, permitValidity > toDate, taxValidity > toDate){
								Mark Status of all Invalid Vehicles as "Not Ready" in validVehicles;			
						}

						res.status(200).json(validVehicles);
					})
					.catch(err => {
					})

			})
			.catch(err => {

			})
	})
	.catch(err => {

	})









D	            30 + + + + 5  


V1  25 + + + + + 1  

V2	          30 + + + + 5  

V3  	             2 + + + + 7

V4               1 

V5		             2 3



	dfd 	dtd

	bfd   btd


	(bfd < dfd) && (btd < dfd)
		OR
	(bfd > dtd) && (btd > dtd)











