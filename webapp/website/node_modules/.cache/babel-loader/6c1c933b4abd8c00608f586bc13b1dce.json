{"ast":null,"code":"var _jsxFileName = \"/home/mani/projects/jobportal/webapp/candidateportal/src/systemSecurity/ConfirmOtp.js\";\nimport React, { Component } from 'react';\nimport swal from 'sweetalert';\nimport $ from \"jquery\";\nimport jQuery from 'jquery';\nimport axios from 'axios';\nimport './ConfirmOtp.css';\n\nclass ConfirmOtp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMessage: false\n    };\n  }\n\n  componentDidMount() {\n    //==================================\n    var userid = this.props.match.params.userID;\n    console.log('userid==', userid);\n    axios.get('/api/users/get/' + userid).then(response => {\n      console.log('userInfo==', response.data);\n      this.setState({\n        // companyID : comId,\n        // companyName : response.data.companyName,\n        // vendor_Id : response.data._id,\n        'firstName': response.data.firstname,\n        'lastName': response.data.lastname,\n        'contactNo': response.data.mobile,\n        'phone': response.data.mobile,\n        'email': response.data.email,\n        \"companyID\": response.data.companyID,\n        \"company_Id\": response.data._id,\n        \"companyName\": response.data.companyName,\n        \"userId\": userid\n      }, () => {\n        axios.get('/api/entitymaster/getCompany/' + this.state.companyID).then(response => {\n          console.log('companyName==', response.data);\n          this.setState({\n            companyName: response.data.companyName,\n            vendor_Id: response.data._id\n          });\n        }).catch(error => {});\n      });\n    }).catch(error => {});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var formValues = {\n      OTP: this.state.OTP\n    };\n    console.log(\"formValues=\", formValues);\n  }\n\n  handleChange(event) {\n    var fieldValue = event.currentTarget.value; // console.log(\"fieldValue\",fieldValue);\n\n    var fieldKey = event.currentTarget.name;\n    console.log(\"fieldKey\", fieldKey);\n    this.setState({\n      [fieldKey]: fieldValue\n    });\n  }\n\n  confirmOTP(event) {\n    event.preventDefault();\n    var url = this.props.match.params;\n    var formValues = {\n      \"user_ID\": this.props.match.params.userID,\n      \"emailOTP\": parseInt(this.refs.emailotp.value),\n      \"status\": \"Active\"\n    }; //========person master===============\n\n    var contactDetailspersonmaster = {\n      'firstName': this.state.firstName,\n      'lastName': this.state.lastName,\n      'contactNo': this.state.contactNo,\n      'phone': this.state.phone,\n      'email': this.state.email,\n      \"companyID\": this.state.companyID,\n      \"company_Id\": this.state.company_Id,\n      \"companyName\": this.state.companyName,\n      \"type\": \"employee\",\n      \"entityType\": \"vendor\",\n      \"userId\": this.props.match.params.userID,\n      \"status\": \"Active\"\n    };\n    console.log(\"mastercontactDetailspersonmaster\", contactDetailspersonmaster);\n    var formValues = {\n      'entityID': this.state.vendor_Id,\n      'contactDetails': {\n        'firstName': this.state.firstName,\n        'lastName': this.state.lastName,\n        'phone': this.state.phone,\n        'email': this.state.email,\n        'departmentName': this.state.departmentName,\n        'designationName': this.state.designationName\n      }\n    }; //====================================\n\n    axios.get('/api/auth/get/checkemailotp/usingID/' + this.props.match.params.userID + '/' + this.refs.emailotp.value).then(response => {\n      if (response.data.message == 'SUCCESS') {\n        swal('OTP Verified Successfully.');\n        var url = localStorage.getItem('previousUrl');\n\n        if (url == 'forgotpassword') {\n          localStorage.removeItem(\"previousUrl\");\n          this.props.history.push('/reset-pwd/' + this.props.match.params.userID);\n        } else {\n          localStorage.removeItem(\"previousUrl\");\n          this.props.history.push('/login'); //================================\n\n          axios.post('/api/personmaster/post', contactDetailspersonmaster).then(response => {\n            console.log('in result Res data==>>>', response.data);\n            axios.patch('/api/entitymaster/patch/addContact', formValues).then(response => {\n              console.log('in result Res data==>>>', response.data);\n            }).catch(error => {});\n          }).catch(error => {}); //================================\n        }\n      } else {\n        swal('Please enter valid OTP.');\n      }\n    }).catch(error => {\n      swal(error.response.data.message);\n    });\n  }\n\n  inputEffect(event) {\n    event.preventDefault();\n\n    if ($(event.target).val() != \"\") {\n      $(event.target).addClass(\"has-content\");\n    } else {\n      $(event.target).removeClass(\"has-content\");\n    }\n  }\n\n  resendOtp(event) {\n    document.getElementById(\"resendOtpBtn\").innerHTML = 'Please wait...';\n    const userid = this.props.match.params.userID;\n    var formValues = {\n      \"emailSubject\": \"Email Verification\",\n      \"emailContent\": \"As part of our registration process, we screen every new profile to ensure its credibility by validating email provided by user. While screening the profile, we verify that details put in by user are correct and genuine.\"\n    };\n    axios.patch('/api/auth/patch/setsendemailotpusingID/' + userid, formValues).then(response => {\n      document.getElementById(\"resendOtpBtn\").innerHTML = 'Resend OTP';\n      swal(\"OTP send to your registered email ID.\");\n    }).catch(error => {\n      swal(\" Failed to resent OTP\");\n      document.getElementById(\"resendOtpBtn\").innerHTML = 'Resend OTP';\n    });\n  }\n\n  Closepagealert(event) {\n    event.preventDefault();\n    $(\".toast-error\").html('');\n    $(\".toast-success\").html('');\n    $(\".toast-info\").html('');\n    $(\".toast-warning\").html('');\n    $(\".toast-error\").removeClass('toast');\n    $(\".toast-success\").removeClass('toast');\n    $(\".toast-info\").removeClass('toast');\n    $(\".toast-warning\").removeClass('toast');\n  }\n\n  render() {\n    var resendOtpWrap = \"resendOtpWrap resendOtpWrapcss\";\n    var mobileEmail = 'Mobile Number';\n    var resendOtp = \"\";\n    return React.createElement(\"section\", {\n      className: \"container-fluid confirmOTPWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"confirmOTP col-lg-4 col-lg-offset-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"confirmOTPTitle col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Confirm OTP\"), React.createElement(\"hr\", {\n      className: \"confirmOTPHr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"confirmOTPSentence col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"We have sent you an OTP to your registered email address. Please enter your OTP below\"), React.createElement(\"div\", {\n      className: \"col-lg-12 form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-addon confirmOTPInputIcon1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-envelope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"emailAddress\",\n      name: \"emailAddress\",\n      placeholder: \"Email Address\",\n      value: this.state.emailAddress,\n      onChange: this.handleChange.bind(this),\n      className: \"form-control confirmOTPInputBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-lg-12 confirmOTPLinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Found your Password? \\xA0\", React.createElement(\"a\", {\n      className: \"confirmOTPSignIn\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Sign In\"))), React.createElement(\"div\", {\n      className: \"col-lg-12 buttonWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn col-lg-12 buttonConfirmOTP\",\n      onClick: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Resend OTP\")), React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn col-lg-12 buttonConfirmOTP\",\n      onClick: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Confirm OTP\")))))));\n  }\n\n}\n\nexport default ConfirmOtp;","map":{"version":3,"sources":["/home/mani/projects/jobportal/webapp/candidateportal/src/systemSecurity/ConfirmOtp.js"],"names":["React","Component","swal","$","jQuery","axios","ConfirmOtp","constructor","props","state","showMessage","componentDidMount","userid","match","params","userID","console","log","get","then","response","data","setState","firstname","lastname","mobile","email","companyID","_id","companyName","vendor_Id","catch","error","handleSubmit","event","preventDefault","formValues","OTP","handleChange","fieldValue","currentTarget","value","fieldKey","name","confirmOTP","url","parseInt","refs","emailotp","contactDetailspersonmaster","firstName","lastName","contactNo","phone","company_Id","departmentName","designationName","message","localStorage","getItem","removeItem","history","push","post","patch","inputEffect","target","val","addClass","removeClass","resendOtp","document","getElementById","innerHTML","Closepagealert","html","render","resendOtpWrap","mobileEmail","emailAddress","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport swal from 'sweetalert';\nimport $ from \"jquery\";\nimport jQuery from 'jquery';\nimport axios from 'axios';\nimport './ConfirmOtp.css';\n\nclass ConfirmOtp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMessage: false\n    }\n  }\n  componentDidMount() {\n    \n    //==================================\n    var userid = this.props.match.params.userID;\n    console.log('userid==',userid)  \n\n    axios.get('/api/users/get/'+userid)\n    .then((response) => {\n      console.log('userInfo==',response.data)\n\n      this.setState({\n              // companyID : comId,\n              // companyName : response.data.companyName,\n              // vendor_Id : response.data._id,\n              'firstName'       : response.data.firstname,\n              'lastName'        : response.data.lastname,\n              'contactNo'       : response.data.mobile,\n              'phone'           : response.data.mobile,\n              'email'           : response.data.email,\n              \"companyID\"       : response.data.companyID,\n              \"company_Id\"      : response.data._id,\n              \"companyName\"     : response.data.companyName,\n              \"userId\"          : userid,\n            },()=>{\n\n                axios.get('/api/entitymaster/getCompany/'+this.state.companyID)\n                .then((response) => {\n                  console.log('companyName==',response.data)\n\n                  this.setState({\n                          companyName : response.data.companyName,\n                          vendor_Id : response.data._id,\n                        })\n                })\n                .catch((error) => {\n                })\n            })\n    })\n    .catch((error) => {\n    })\n\n  }\n  handleSubmit(event){\n    event.preventDefault();\n    var formValues={\n      \n      OTP : this.state.OTP,\n      \n    }\n    console.log(\"formValues=\",formValues);\n  }\n\n  handleChange(event){\n      var fieldValue=event.currentTarget.value;\n      // console.log(\"fieldValue\",fieldValue);\n       var fieldKey=event.currentTarget.name;\n       console.log(\"fieldKey\",fieldKey);\n      this.setState({\n        [fieldKey]:fieldValue\n      });\n  }\n  confirmOTP(event) {\n    event.preventDefault();\n    var url = this.props.match.params;\n    var formValues = {\n      \"user_ID\": this.props.match.params.userID,\n      \"emailOTP\": parseInt(this.refs.emailotp.value),\n      \"status\": \"Active\"\n    }\n    //========person master===============\n\n      var contactDetailspersonmaster   = {\n                            \n          'firstName'       : this.state.firstName,\n          'lastName'        : this.state.lastName,\n          'contactNo'       : this.state.contactNo,\n          'phone'           : this.state.phone,\n          'email'           : this.state.email,\n          \"companyID\"       : this.state.companyID,\n          \"company_Id\"      : this.state.company_Id,\n          \"companyName\"     : this.state.companyName,\n          \"type\"            : \"employee\",\n          \"entityType\"      : \"vendor\",\n          \"userId\"          : this.props.match.params.userID,\n          \"status\"          : \"Active\",\n      }\n    console.log(\"mastercontactDetailspersonmaster\",contactDetailspersonmaster)\n      var formValues = {\n        'entityID'            : this.state.vendor_Id,\n        'contactDetails'        : {\n          'firstName'                 : this.state.firstName,\n          'lastName'                  : this.state.lastName,\n          'phone'                 : this.state.phone,\n          'email'                 : this.state.email,\n          'departmentName'          : this.state.departmentName,\n          'designationName'         : this.state.designationName,\n          \n         \n        }\n      }\n      //====================================\n    \n      axios.get('/api/auth/get/checkemailotp/usingID/' + this.props.match.params.userID + '/' + this.refs.emailotp.value)\n        .then((response) => {\n\n          if (response.data.message == 'SUCCESS') {\n            swal('OTP Verified Successfully.');\n            var url = localStorage.getItem('previousUrl');\n            if (url == 'forgotpassword') {\n              localStorage.removeItem(\"previousUrl\");\n              this.props.history.push('/reset-pwd/' + this.props.match.params.userID);\n            } else {\n              localStorage.removeItem(\"previousUrl\");\n              this.props.history.push('/login');\n              //================================\n\n                axios.post('/api/personmaster/post', contactDetailspersonmaster)\n                .then((response) => {\n\n                  console.log('in result Res data==>>>', response.data);\n                  axios.patch('/api/entitymaster/patch/addContact' ,formValues)\n\n                          .then((response) => {\n                            console.log('in result Res data==>>>', response.data);\n\n                          })\n                          .catch((error) => {})\n                })\n                .catch((error) => {})\n              \n            //================================\n            }\n          } else {\n            swal('Please enter valid OTP.');\n          }\n        })\n        .catch((error) => {\n          swal(error.response.data.message);\n        })\n    \n\n  }\n  inputEffect(event) {\n    event.preventDefault();\n    if ($(event.target).val() != \"\") {\n      $(event.target).addClass(\"has-content\");\n    } else {\n      $(event.target).removeClass(\"has-content\");\n    }\n  }\n  resendOtp(event) {\n    document.getElementById(\"resendOtpBtn\").innerHTML = 'Please wait...';\n    const userid = this.props.match.params.userID;\n    var formValues = {\n      \"emailSubject\": \"Email Verification\",\n      \"emailContent\": \"As part of our registration process, we screen every new profile to ensure its credibility by validating email provided by user. While screening the profile, we verify that details put in by user are correct and genuine.\",\n    }\n    axios.patch('/api/auth/patch/setsendemailotpusingID/' + userid, formValues)\n      .then((response) => {\n        document.getElementById(\"resendOtpBtn\").innerHTML = 'Resend OTP';\n        swal(\"OTP send to your registered email ID.\");\n      })\n      .catch((error) => {\n        swal(\" Failed to resent OTP\");\n        document.getElementById(\"resendOtpBtn\").innerHTML = 'Resend OTP';\n      })\n  }\n  Closepagealert(event) {\n    event.preventDefault();\n    $(\".toast-error\").html('');\n    $(\".toast-success\").html('');\n    $(\".toast-info\").html('');\n    $(\".toast-warning\").html('');\n    $(\".toast-error\").removeClass('toast');\n    $(\".toast-success\").removeClass('toast');\n    $(\".toast-info\").removeClass('toast');\n    $(\".toast-warning\").removeClass('toast');\n\n  }\n  render() {\n\n    var resendOtpWrap = \"resendOtpWrap resendOtpWrapcss\";\n    var mobileEmail = 'Mobile Number';\n    var resendOtp = \"\";\n\n    return (\n      <section className=\"container-fluid confirmOTPWrapper\">\n                <div className=\"confirmOTP col-lg-4 col-lg-offset-4\">\n                  <form>\n                    <div className=\"confirmOTPTitle col-lg-12\">Confirm OTP\n                    </div>\n\n                    <hr className=\"confirmOTPHr\"/>\n\n                    <div className=\"confirmOTPSentence col-lg-12\">\n                         We have sent you an OTP to your registered email address.\n                        Please enter your OTP below\n\n                    </div>\n\n                    <div className=\"col-lg-12 form-group\" >\n                        <div className=\"input-group\">\n                            <span className=\"input-group-addon confirmOTPInputIcon1\"><i className=\"fa fa-envelope\"></i></span>\n                            <input type=\"email\" id=\"emailAddress\" name=\"emailAddress\" placeholder=\"Email Address\" value={this.state.emailAddress} onChange={this.handleChange.bind(this)} className=\"form-control confirmOTPInputBox\"/>\n                        </div>\n                    </div>\n\n\n                    <div className=\"col-lg-12 confirmOTPLinks\">\n                        Found your Password? &nbsp;\n                        <a className=\"confirmOTPSignIn\" href=\"#\"><u>Sign In</u></a>\n                    </div>\n                    \n                    \n                     \n                    <div className=\"col-lg-12 buttonWrapper\">\n                      <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                            <button className=\"btn col-lg-12 buttonConfirmOTP\" onClick={this.handleSubmit.bind(this)}>Resend OTP</button>\n                        </div>\n\n                        <div className=\"col-lg-6\">\n                            <button className=\"btn col-lg-12 buttonConfirmOTP\" onClick={this.handleSubmit.bind(this)}>Confirm OTP</button>\n                        </div>\n                      </div>\n                            \n                    </div>\n                  </form> \n\n                </div>\n         </section>\n\n      \n    );\n  }\n}\nexport default ConfirmOtp;"]},"metadata":{},"sourceType":"module"}