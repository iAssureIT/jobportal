{"ast":null,"code":"var _jsxFileName = \"/home/mani/projects/jobportal/webapp/employerportal/src/coreadmin/userManagement/UM/CreateUser.js\";\nimport PhoneInput from 'react-phone-input-2';\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport jQuery from 'jquery';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/js/modal.js';\nimport './userManagement.css';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nconst formValid = formerrors => {\n  let valid = true;\n  Object.values(formerrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  return valid;\n};\n\nconst nameRegex = RegExp(/^[A-za-z']+( [A-Za-z']+)*$/);\nconst mobileRegex = RegExp(/^[0-9][0-9]{9}$/);\nconst emailRegex = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\nclass CreateUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initMap = () => {\n      this.setState({\n        gmapsLoaded: true\n      });\n    };\n\n    this.handleChangePlaces = address => {\n      var array = {\n        cityName: address\n      };\n      this.setState({\n        cityName: address,\n        tripArray: array\n      });\n    };\n\n    this.handleSelectLocation = address => {\n      console.log(address);\n      geocodeByAddress(address).then(results => {\n        for (var i = 0; i < results[0].address_components.length; i++) {\n          for (var b = 0; b < results[0].address_components[i].types.length; b++) {\n            switch (results[0].address_components[i].types[b]) {\n              case 'sublocality_level_1':\n                var area = results[0].address_components[i].long_name;\n                break;\n\n              case 'sublocality_level_2':\n                var area = results[0].address_components[i].long_name;\n                break;\n\n              case 'locality':\n                var city = results[0].address_components[i].long_name;\n                break;\n\n              case 'administrative_area_level_1':\n                var state = results[0].address_components[i].long_name;\n                break;\n            }\n          }\n        }\n\n        console.log(\"state===>>>>\", state);\n        this.setState({\n          states: state\n        });\n      }).catch(error => console.error('Error', error));\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => this.setState({\n        'fromLatLng': latLng\n      })).catch(error => console.error('Error', error));\n      var array = {\n        cityName: address\n      };\n      console.log(\"address===>>>>\", address);\n      this.setState({\n        cityName: address ? address.split(\",\")[0] : \"\",\n        tripArray: array\n      });\n    };\n\n    this.state = {\n      show: true,\n      office: null,\n      allPosts: null,\n      gmapsLoaded: false,\n      firstname: \"\",\n      lastname: \"\",\n      signupEmail: \"\",\n      mobile: \"\",\n      companyName: \"\",\n      role: \"-- Select --\",\n      department: \"-- Select --\",\n      designation: \"-- Select --\",\n      cityName: \"\",\n      states: \"\",\n      workLocation: \"\",\n      formValues: \"\",\n      adminRolesListData: [],\n      formerrors: {\n        firstname: \"\",\n        companyID: \"\",\n        lastname: \"\",\n        signupEmail: \"\",\n        mobile: \"\",\n        role: \"\"\n      },\n      'buttonType': 'Register User'\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getEntityLocation(companyId) {\n    console.log(\"getEntityLocation\", companyId);\n    axios.get('/api/entitymaster/getCompany/' + companyId).then(response => {\n      console.log(\"response.data[0]==>\", response.data.locations);\n      this.setState({\n        corporateLocationArray: response.data.locations\n      }, () => {});\n    }).catch(error => {});\n  }\n\n  handleChange(event) {\n    const datatype = event.target.getAttribute('data-text');\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    if (name === 'role') {\n      var e = document.getElementById(\"role\");\n      var rolesentityname = e.options[e.selectedIndex].id;\n      console.log(\"rolesentityname==>\", rolesentityname);\n      this.setState({\n        rolesentityname: rolesentityname\n      });\n    }\n\n    let formerrors = this.state.formerrors;\n    this.setState({\n      [name]: event.target.value\n    }, () => {\n      if (name == 'companyID') {\n        axios.get('/api/entitymaster/get/one/companyName/' + this.state.companyID).then(response => {\n          this.getEntityLocation(this.state.companyID);\n          var companyName = response.data.companyName;\n\n          if (companyName == null) {\n            this.setState({\n              companyName: \"No Company Available\"\n            });\n          } else {\n            this.setState({\n              companyName: companyName\n            });\n          }\n        }).catch(function (error) {});\n      }\n    });\n\n    switch (datatype) {\n      case 'firstname':\n        formerrors.firstname = nameRegex.test(value) && value.length > 0 ? '' : \"Please Enter Valid Name\";\n        break;\n\n      case 'lastname':\n        formerrors.lastname = nameRegex.test(value) && value.length > 0 ? '' : \"Please Enter Valid Name\";\n        break;\n\n      case 'mobile':\n        formerrors.mobile = mobileRegex.test(value) && value.length > 0 ? '' : \"Please enter a valid Contact Number\";\n        break;\n\n      case 'signupEmail':\n        formerrors.signupEmail = emailRegex.test(value) && value.length > 0 ? \"\" : \"Please enter a valid Email ID\";\n        break;\n\n      case 'role':\n        formerrors.role = value !== \"--select--\" ? \"\" : \"Please select role\";\n        break;\n\n      case 'department':\n        formerrors.department = value !== \"--select--\" ? \"\" : \"Please select department\";\n        break;\n\n      case 'designation':\n        formerrors.designation = value !== \"--select--\" ? \"\" : \"Please select designation\";\n        break;\n\n      case 'city':\n        formerrors.city = value !== \"--select--\" ? \"\" : \"Please select city\";\n        break;\n\n      case 'state':\n        formerrors.state = value !== \"--select--\" ? \"\" : \"Please select state\";\n        break;\n\n      case 'centerName':\n        formerrors.role = value !== \"--select--\" ? \"\" : \"Please select Center\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formerrors,\n      [name]: value\n    });\n  }\n\n  validation() {\n    $.validator.addMethod(\"regxA1\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid first name\");\n    $.validator.addMethod(\"regxA2\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid last name\");\n    $.validator.addMethod(\"regxEmail\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid email ID\");\n    $.validator.addMethod(\"regxmobile\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid mobile number\");\n    $.validator.addMethod(\"regxcompanyID\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid company ID\");\n    $.validator.addMethod(\"regxRole\", function (value, element, arg) {\n      return arg !== value;\n    }, \"Please select the role\");\n    $.validator.addMethod(\"regxdesignation\", function (value, element, arg) {\n      return arg !== value;\n    }, \"Please select the Designation\");\n    $.validator.addMethod(\"regxdepartment\", function (value, element, arg) {\n      return arg !== value;\n    }, \"Please select the Department\");\n    $.validator.addMethod(\"regxcity\", function (value, element, arg) {\n      return arg !== value;\n    }, \"Please select the City\");\n    $.validator.addMethod(\"regxstate\", function (value, element, arg) {\n      return arg !== value;\n    }, \"Please select the state\");\n    jQuery.validator.setDefaults({\n      debug: true,\n      success: \"valid\"\n    });\n    $(\"#userInfo\").validate({\n      rules: {\n        firstname: {\n          required: true,\n          regxA1: /^[A-Za-z][A-Za-z0-9\\-\\s]/\n        },\n        lastname: {\n          required: true,\n          regxA2: /^[A-Za-z][A-Za-z0-9\\-\\s]/\n        },\n        signupEmail: {\n          required: true,\n          regxEmail: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/\n        },\n        mobile: {\n          required: true,\n          regxmobile: /^(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/\n        },\n        companyID: {\n          required: true,\n          regxcompanyID: /[a-zA-Z0-9]/\n        },\n        role: {\n          required: true,\n          regxRole: \"--Select--\"\n        },\n        department: {\n          required: true,\n          regxdepartment: \"--Select--\"\n        },\n        designation: {\n          required: true,\n          regxdesignation: \"--Select--\"\n        },\n        city: {\n          required: true,\n          regxA2: /^[A-Za-z][A-Za-z0-9\\-\\s]/\n        }\n      },\n      errorPlacement: function (error, element) {\n        if (element.attr(\"name\") === \"firstname\") {\n          error.insertAfter(\"#firstname\");\n        }\n\n        if (element.attr(\"name\") === \"lastname\") {\n          error.insertAfter(\"#lastname\");\n        }\n\n        if (element.attr(\"name\") === \"signupEmail\") {\n          error.insertAfter(\"#signupEmail\");\n        }\n\n        if (element.attr(\"name\") === \"mobile\") {\n          error.insertAfter(\"#mobile\");\n        }\n\n        if (element.attr(\"name\") === \"companyID\") {\n          error.insertAfter(\"#companyID\");\n        }\n\n        if (element.attr(\"name\") === \"role\") {\n          error.insertAfter(\"#role\");\n        }\n\n        if (element.attr(\"name\") === \"department\") {\n          error.insertAfter(\"#department\");\n        }\n\n        if (element.attr(\"name\") === \"designation\") {\n          error.insertAfter(\"#designation\");\n        }\n\n        if (element.attr(\"name\") === \"city\") {\n          error.insertAfter(\"#city\");\n        }\n      }\n    });\n  } // getGoogleAPIKey(){\n  //       axios.get(\"/api/projectSettings/get/GOOGLE\",)\n  //       .then((response) => {\n  //           this.setState({\n  //               googleAPIKey : response.data.googleapikey\n  //           },()=>{\n  //               window.initMap = this.initMap\n  //               const gmapScriptEl = document.createElement(`script`)\n  //               gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=`+this.state.googleAPIKey+`&libraries=places&callback=initMap`\n  //               document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl)\n  //           });\n  //       })\n  //       .catch((error) =>{\n  //           swal(error)\n  //       })\n  //   }\n\n\n  componentDidMount() {\n    // this.getGoogleAPIKey()\n    // const companyIDCreateUser = this.props.companyIDCreateUser;\n    // console.log(\"companyIDcompanyID\",companyIDCreateUser);\n    const user_ID = localStorage.getItem(\"user_ID\");\n    var userDetails = localStorage.getItem('userDetails');\n    var userData = JSON.parse(userDetails);\n    console.log(\"userData = \", userData); // const companyID = parseInt(userData.companyID);\n\n    const companyID = localStorage.getItem(\"companyID\");\n    console.log(\"companyID\", companyID);\n    console.log(\"userData\", userData);\n    this.setState({\n      user_ID: user_ID,\n      companyID: companyID\n    }, () => {\n      axios.get('/api/entitymaster/get/one/companyName/' + this.state.companyID).then(response => {\n        this.getEntityLocation(this.state.companyID);\n        var companyName = response.data.companyName;\n\n        if (companyName == null) {\n          this.setState({\n            companyName: \"No Company Available\"\n          });\n        } else {\n          this.setState({\n            companyName: companyName\n          });\n        }\n      }).catch(function (error) {});\n    });\n    this.validation();\n    this.getDepartment();\n    this.getDesignation();\n    this.getRole();\n    axios.get('/api/companysettings/list').then(res => {\n      const postsdata = res.data;\n      this.setState({\n        allPosts: postsdata\n      });\n      let locationArray = [];\n\n      if (this.state.allPosts !== null) {\n        locationArray = this.state.allPosts.map(function (item) {\n          return item.companyLocationsInfo;\n        });\n      } else {\n        locationArray = \"no data\";\n      }\n\n      this.setState({\n        office: locationArray\n      }); // here for list\n\n      var data = {\n        \"startRange\": this.state.startRange,\n        \"limitRange\": this.state.limitRange,\n        \"companyID\": this.props.companyID\n      };\n      this.props.getData(data);\n    }).catch(error => {});\n  }\n\n  getDepartment() {\n    axios.get(\"/api/departmentmaster/get/list\").then(response => {\n      console.log(\"departmentArray==>\", response.data[0]);\n      this.setState({\n        departmentArray: response.data\n      });\n    }).catch(error => {});\n  }\n\n  getDesignation() {\n    axios.get(\"/api/designationmaster/get/list\").then(response => {\n      // console.log(\"designationArray==>\",response.data)\n      this.setState({\n        designationArray: response.data\n      });\n    }).catch(error => {});\n  }\n\n  createUser(event) {\n    event.preventDefault();\n\n    if ($('#userInfo').valid()) {\n      axios.get('/api/entitymaster/get/one/companyName/' + this.state.companyID).then(response => {\n        var companyName = response.data.companyName;\n        this.setState({\n          companyName: companyName\n        });\n        this.setState(() => {\n          if (companyName === \"No Company Available\") {\n            swal({\n              title: \"\",\n              text: \"Company ID \" + this.state.companyID + \" is not valid Company ID\"\n            });\n          } else {\n            console.log('this.state.role Post==>>>', this.state.role);\n            const formValues = {\n              \"firstname\": this.state.firstname,\n              \"lastname\": this.state.lastname,\n              \"email\": this.state.signupEmail,\n              \"mobNumber\": this.state.mobile.replace(\"-\", \"\"),\n              \"pwd\": \"welcome123\",\n              // \"role\": this.state.role !== \"employee\" ? [\"  employee\",this.state.role] : [\"employee\"],\n              \"role\": this.state.rolesentityname === \"corporate\" ? this.state.role === \"employee\" ? [\"employee\"] : [\"employee\", this.state.role] : [this.state.role],\n              \"department\": this.state.department,\n              \"designation\": this.state.designation,\n              \"cityName\": this.state.cityName,\n              \"states\": this.state.states,\n              \"companyID\": this.state.companyID,\n              \"workLocation\": this.state.workLocation,\n              \"companyName\": companyName,\n              \"status\": this.state.role === \"corporateadmin\" || this.state.role === \"vendoradmin\" ? \"active\" : \"blocked\"\n            };\n            console.log('userid Post==>>>', formValues);\n\n            if (this.state.firstname !== \"\" && this.state.companyName !== \"\" && this.state.lastname !== \"\" && this.state.signupEmail && this.state.mobile) {\n              axios.post('/api/auth/post/signup/user', formValues).then(res => {\n                // console.log('userid Post==>>>', res.data.ID)\n                if (res.data.message === 'Email Id already exits.') {\n                  swal({\n                    title: \"Please enter mandatory fields\",\n                    text: res.data.message\n                  });\n                  this.setState({\n                    show: false,\n                    'buttonType': 'Register User'\n                  });\n                } else {\n                  // var sendData = {\n                  //   \"event\": \"Contact Created\", //Event Name\n                  //   \"toUser_id\": res.data.ID, //To user_id(ref:users)\n                  //   \"toUserRole\":\"employee\",\n                  //   \"company_id\": this.state.corporate_Id, //company_id(ref:entitymaster)\n                  //   \"otherAdminRole\":'corporateadmin',\n                  //   \"variables\": {\n                  //     'EmployeeName': this.state.firstname + ' ' + this.state.lastname,\n                  //     'Password': \"Welcome@123\",\n                  //     'mobileNo': this.state.mobile,\n                  //     'email': this.state.signupEmail\n                  //   }\n                  // }\n                  // axios.post('/api/masternotifications/post/sendNotification', sendData)\n                  //   .then((res) => {\n                  //     // console.log('sendDataToUser in result==>>>', res.data.type)\n                  //   })\n                  //   .catch((error) => { console.log('notification error: ', error) })\n                  var sendData = {\n                    \"event\": \"Event2\",\n                    //Event Name\n                    \"toUser_id\": res.data._id,\n                    //To user_id(ref:users)\n                    \"toUserRole\": \"employee\",\n                    \"company_id\": this.state.corporate_Id,\n                    //company_id(ref:entitymaster)\n                    \"otherAdminRole\": 'corporateadmin',\n                    \"variables\": {\n                      'EmployeeName': this.state.firstname + ' ' + this.state.lastname,\n                      'Password': \"welcome123\",\n                      'mobileNo': this.state.mobile,\n                      'email': this.state.signupEmail // 'sendUrl': this.state.url+\"/login\",\n\n                    }\n                  };\n                  console.log('sendData: ', sendData);\n                  axios.post('/api/masternotifications/post/sendNotification', sendData).then(res => {\n                    console.log('sendDataToUser in result==>>>', res.data);\n                  }).catch(error => {\n                    console.log('notification error: ', error);\n                  });\n                  var contactDetailspersonmaster = {\n                    'firstName': this.state.firstname,\n                    'lastName': this.state.lastname,\n                    'contactNo': this.state.mobile.replace(\"-\", \"\"),\n                    'phone': this.state.mobile.replace(\"-\", \"\"),\n                    'email': this.state.signupEmail,\n                    \"departmentName\": this.state.department,\n                    \"designationName\": this.state.designation,\n\n                    /*  \"cityName\"        : this.state.cityName,\n                      \"states\"          : this.state.states,*/\n                    \"address\": [{\n                      \"city\": this.state.cityName,\n                      \"state\": this.state.states\n                    }],\n                    \"companyID\": this.state.companyID,\n                    \"company_Id\": this.state.corporate_Id,\n                    \"companyName\": companyName,\n                    \"type\": this.state.rolesentityname === \"corporate\" ? \"employee\" : null || this.state.rolesentityname === \"vendor\" ? \"driver\" : null,\n                    \"entityType\": this.state.rolesentityname,\n                    \"userId\": res.data.ID,\n                    \"status\": \"Active\"\n                  };\n\n                  if (contactDetailspersonmaster.type == \"driver\" || \"employee\" || \"guest\") {\n                    axios.post('/api/personmaster/post', contactDetailspersonmaster).then(response => {\n                      console.log('in result Res data==>>>', response.data);\n                    }).catch(error => {});\n                  }\n\n                  swal(\" \", \"User added successfully! \\n Email Id: \" + this.state.signupEmail + \"\\n Default Password: \" + \"Welcome@123\");\n                  var data = {\n                    \"startRange\": this.state.startRange,\n                    \"limitRange\": this.state.limitRange,\n                    \"companyID\": this.props.companyID\n                  };\n                  this.props.getData(data);\n                  this.setState({\n                    firstname: \"\",\n                    lastname: \"\",\n                    companyID: \"\",\n                    signupEmail: \"\",\n                    mobile: \"\",\n                    role: \"\",\n                    centerName: \"\",\n                    department: \"\",\n                    designation: \"\",\n                    cityName: \"\",\n                    states: \"\",\n                    companyName: \"\",\n                    show: false,\n                    'buttonType': 'Register User'\n                  }, () => {\n                    var data = {\n                      \"startRange\": this.state.startRange,\n                      \"limitRange\": this.state.limitRange,\n                      \"companyID\": this.props.companyID\n                    };\n                    this.props.getData(data);\n                    var modal = document.getElementById(\"CreateUserModal\");\n                    modal.style.display = \"none\";\n                    $('.modal-backdrop').remove();\n                    $(\"#CreateUserModal .close\").click();\n                  });\n                }\n              }).catch(error => {\n                this.setState({\n                  show: false\n                });\n              });\n            } else {\n              swal({\n                title: \"Please enter mandatory fields\",\n                text: \"Please enter mandatory fields\"\n              });\n            }\n          }\n        });\n      }).catch(function (error) {});\n    }\n  }\n\n  companynamewithid() {\n    // console.log(\" this.state.companyID==>>\", this.state.companyID)\n    axios.get('/api/entitymaster/get/one/companyName/' + this.state.companyID).then(response => {\n      var companyName = response.data.companyName;\n      this.setState({\n        companyName: companyName\n      });\n    }).catch(function (error) {});\n  } // getRole() {\n  //   // var data = {\n  //   //   \"startRange\": this.state.starFtRange,\n  //   //   \"limitRange\": this.state.limitRange,\n  //   // }\n  //   axios.post('/api/roles/get/list')\n  //     .then((response) => {\n  //       console.log(\"response.data==>\",response.data)\n  //       const key = 'role';\n  // \t\t\t// const arrayUniqueByKey = [...new Map(response.data.map(item =>\n  // \t\t\t// [item[key], item])).values()];\n  //       this.setState({\n  //         adminRolesListData: response.data\n  //       }, () => {\n  //       })\n  //     }).catch(function (error) {\n  //     });\n  // }\n\n\n  getRole() {\n    axios.post('/api/roles/get/list').then(response => {\n      console.log(\"response from role =>\", response.data[0].rolesentity);\n      this.setState({\n        adminRolesListData: response.data\n      }); // var fileName = 'admin'\n      // axios.get('/api/rolesentitymaster/get/filedetails/'+fileName)\n      // .then((response) => {\n      //   console.log(\"response from role =>\",response.data)\n      // \tvar rolecor = response.data[0]._id\n      // \taxios.get('/api/roles/get/rolelist/'+rolecor)\n      // \t\t.then((response) => {\n      // \t\t\tthis.setState({\n      // \t\t\t\tadminRolesListData: response.data\n      // \t\t\t  }, () => {\n      // \t\t\t  })\n      // \t\t}).catch(function (error) {});\n      // }).catch(function (error) {});\n    }).catch(function (error) {});\n  }\n\n  camelCase(str) {\n    return str.toLowerCase().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  }\n\n  close(event) {\n    this.setState({\n      firstname: \"\",\n      lastname: \"\",\n      signupEmail: \"\",\n      mobile: \"\",\n      role: \"\"\n    });\n    var modal = document.getElementById(\"CreateUserModal\");\n    modal.style.display = \"none\";\n    $('.modal-backdrop').remove();\n    $(\"#userInfo\").validate().resetForm();\n  }\n\n  render() {\n    const searchOptions = {\n      types: ['(cities)'],\n      componentRestrictions: {\n        country: \"in\"\n      }\n    };\n    const {\n      formerrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal\",\n      id: \"CreateUserModal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog modal-lg \",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content UMmodalContent ummodallftmg ummodalmfdrt  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header adminModal-header col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.close.bind(this),\n      className: \"close \",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"h4\", {\n      className: \"modal-title row userTitle\",\n      id: \"exampleModalLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, \"Add New User\")), React.createElement(\"div\", {\n      className: \"modal-body adminModal-body col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hideModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"userBox-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"userInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717\n      },\n      __self: this\n    }, \"First Name \", React.createElement(\"span\", {\n      className: \"requiredsign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        textTransform: 'capitalize'\n      },\n      className: \"form-control UMname has-content\",\n      id: \"firstname\",\n      ref: \"firstname\",\n      name: \"firstname\",\n      \"data-text\": \"firstname\",\n      placeholder: \"First Name\",\n      onChange: this.handleChange,\n      value: this.state.firstname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, \"Last Name \", React.createElement(\"span\", {\n      className: \"requiredsign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control UMname  has-content\",\n      id: \"lastname\",\n      ref: \"lastname\",\n      name: \"lastname\",\n      \"data-text\": \"lastname\",\n      onChange: this.handleChange,\n      value: this.state.lastname,\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"valid_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    }, \"Email ID \", React.createElement(\"span\", {\n      className: \"requiredsign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"formFloatingLabels form-control  newinputbox\",\n      ref: \"signupEmail\",\n      name: \"signupEmail\",\n      id: \"signupEmail\",\n      \"data-text\": \"signupEmail\",\n      onChange: this.handleChange,\n      value: this.state.signupEmail,\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }, \"Mobile Number \", React.createElement(\"span\", {\n      className: \"requiredsign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"number\",\n      required: true,\n      pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n      className: \"formFloatingLabels form-control  newinputbox\",\n      ref: \"mobile\",\n      name: \"mobile\",\n      id: \"mobile\",\n      \"data-text\": \"mobile\",\n      onChange: this.handleChange,\n      value: this.state.mobile,\n      placeholder: \"Mobile Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"valid_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    }, \"Role \", React.createElement(\"span\", {\n      className: \"requiredsign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"input-group col-lg-12 col-md-12 col-xs-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      ref: \"role\",\n      name: \"role\",\n      value: this.state.role,\n      id: \"role\",\n      onChange: this.handleChange.bind(this),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750\n      },\n      __self: this\n    }, \"--Select--\"), this.state.adminRolesListData && this.state.adminRolesListData.length > 0 ? this.state.adminRolesListData.map((roledata, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        id: roledata.rolesentity,\n        value: roledata.role,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, roledata.role);\n    }) : ''))), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    }, \"Company ID \", React.createElement(\"span\", {\n      className: \"requiredsign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    }, \"*\")), this.state.companyID ? React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control UMname  has-content\",\n      id: \"companyID\",\n      ref: \"companyID\",\n      name: \"companyID\",\n      \"data-text\": \"companyID\",\n      onChange: this.handleChange,\n      value: this.state.companyID,\n      placeholder: \"company ID\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767\n      },\n      __self: this\n    }) : React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control UMname  has-content\",\n      id: \"companyID\",\n      ref: \"companyID\",\n      name: \"companyID\",\n      \"data-text\": \"companyID\",\n      onChange: this.handleChange,\n      value: this.state.companyID,\n      placeholder: \"company ID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }, \"Company Name \", React.createElement(\"span\", {\n      className: \"requiredsign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control UMname  has-content\",\n      id: \"companyName\",\n      ref: \"companyName\",\n      name: \"companyName\",\n      \"data-text\": \"companyName\",\n      onChange: this.handleChange,\n      disabled: true,\n      value: this.state.companyName,\n      placeholder: \"company Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    }, \"Work Location \", React.createElement(\"span\", {\n      className: \"requiredsign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"input-group col-lg-12 col-md-12 col-xs-12 col-sm-12\",\n      id: \"workLocation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control \",\n      value: this.state.workLocation,\n      onChange: this.handleChange,\n      ref: \"workLocation\",\n      id: \"workLocation\",\n      name: \"workLocation\",\n      \"data-text\": \"workLocation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823\n      },\n      __self: this\n    }, \" --Select-- \"), this.state.corporateLocationArray && this.state.corporateLocationArray.length > 0 ? this.state.corporateLocationArray.map((data, index) => {\n      // console.log(\"data dept==>\",data);\n      return React.createElement(\"option\", {\n        key: index,\n        value: data.locationType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829\n        },\n        __self: this\n      }, data.locationType.match(/\\b(\\w)/g).join(''), \" - \", data.area, \" \", data.city, \", \", data.stateCode, \" - \", data.countryCode, \"  \");\n    }) : React.createElement(\"option\", {\n      value: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }, \"User\")))), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839\n      },\n      __self: this\n    }, \"Department \", React.createElement(\"span\", {\n      className: \"requiredsign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"input-group col-lg-12 col-md-12 col-xs-12 col-sm-12\",\n      id: \"department\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control \",\n      value: this.state.department,\n      onChange: this.handleChange,\n      ref: \"department\",\n      id: \"department\",\n      name: \"department\",\n      \"data-text\": \"department\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842\n      },\n      __self: this\n    }, \" --Select-- \"), this.state.departmentArray && this.state.departmentArray.length > 0 ? this.state.departmentArray.map((data, index) => {\n      // console.log(\"data dept==>\",data);\n      return React.createElement(\"option\", {\n        key: index,\n        value: data.department,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848\n        },\n        __self: this\n      }, data.department);\n    }) : React.createElement(\"option\", {\n      value: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }, \"User\")))), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    }, \" Designation \", React.createElement(\"span\", {\n      className: \"requiredsign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"input-group col-lg-12 col-md-12 col-xs-12 col-sm-12\",\n      id: \"designation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control \",\n      value: this.state.designation,\n      onChange: this.handleChange,\n      ref: \"designation\",\n      id: \"designation\",\n      name: \"designation\",\n      \"data-text\": \"designation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861\n      },\n      __self: this\n    }, \" --Select-- \"), this.state.designationArray && this.state.designationArray.length > 0 ? this.state.designationArray.map((data, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        value: data.designation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866\n        },\n        __self: this\n      }, data.designation);\n    }) : React.createElement(\"option\", {\n      value: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, \"User\")))), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    }, \"City\"), React.createElement(PlacesAutocomplete, {\n      value: this.state.cityName,\n      onChange: this.handleChangePlaces,\n      onSelect: this.handleSelectLocation,\n      searchOptions: searchOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: 'Search Cities ...',\n      className: 'location-search-input col-lg-12 form-control'\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891\n      },\n      __self: this\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        },\n        __self: this\n      }, suggestion.description ? suggestion.description.split(\",\")[0] : \"\"));\n    }))))), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919\n      },\n      __self: this\n    }, \"State \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"states\",\n      ref: \"states\",\n      name: \"states\",\n      \"data-text\": \"states\",\n      onChange: this.handleChange,\n      disabled: true,\n      value: this.state.states,\n      placeholder: \"State Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \" col-lg-12 col-md-12 col-xs-12 col-sm-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"col-lg-3 col-md-2 col-xs-12 col-sm-12 col-xs-12 pull-right btn button3 topMargin outlinebox\",\n      type: \"submit\",\n      onClick: this.createUser.bind(this),\n      id: \"CreateUserModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931\n      },\n      __self: this\n    }, this.state.buttonType)))))))))));\n  }\n\n}\n\nexport default CreateUser;","map":{"version":3,"sources":["/home/mani/projects/jobportal/webapp/employerportal/src/coreadmin/userManagement/UM/CreateUser.js"],"names":["PhoneInput","React","Component","$","jQuery","axios","swal","PlacesAutocomplete","geocodeByAddress","getLatLng","formValid","formerrors","valid","Object","values","forEach","val","length","nameRegex","RegExp","mobileRegex","emailRegex","CreateUser","constructor","props","initMap","setState","gmapsLoaded","handleChangePlaces","address","array","cityName","tripArray","handleSelectLocation","console","log","then","results","i","address_components","b","types","area","long_name","city","state","states","catch","error","latLng","split","show","office","allPosts","firstname","lastname","signupEmail","mobile","companyName","role","department","designation","workLocation","formValues","adminRolesListData","companyID","handleChange","bind","getEntityLocation","companyId","get","response","data","locations","corporateLocationArray","event","datatype","target","getAttribute","name","value","e","document","getElementById","rolesentityname","options","selectedIndex","id","test","validation","validator","addMethod","element","regexpr","arg","setDefaults","debug","success","validate","rules","required","regxA1","regxA2","regxEmail","regxmobile","regxcompanyID","regxRole","regxdepartment","regxdesignation","errorPlacement","attr","insertAfter","componentDidMount","user_ID","localStorage","getItem","userDetails","userData","JSON","parse","getDepartment","getDesignation","getRole","res","postsdata","locationArray","map","item","companyLocationsInfo","startRange","limitRange","getData","departmentArray","designationArray","createUser","preventDefault","title","text","replace","post","message","sendData","_id","corporate_Id","contactDetailspersonmaster","ID","type","centerName","modal","style","display","remove","click","companynamewithid","rolesentity","camelCase","str","toLowerCase","word","charAt","toUpperCase","slice","join","close","resetForm","render","searchOptions","componentRestrictions","country","textTransform","roledata","index","locationType","match","stateCode","countryCode","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","suggestion","active","backgroundColor","cursor","description","buttonType"],"mappings":"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","sourcesContent":["\nimport PhoneInput from 'react-phone-input-2';\nimport React, { Component } from 'react';\nimport $                        from 'jquery';\nimport jQuery                   from 'jquery';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/js/modal.js';\nimport './userManagement.css';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nconst formValid = formerrors => {\n  let valid = true;\n  Object.values(formerrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  })\n  return valid;\n}\n\nconst nameRegex = RegExp(/^[A-za-z']+( [A-Za-z']+)*$/);\nconst mobileRegex = RegExp(/^[0-9][0-9]{9}$/);\nconst emailRegex = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\nclass CreateUser extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true,\n      office: null,\n      allPosts: null,\n      gmapsLoaded: false,\n      firstname: \"\",\n      lastname: \"\",\n      signupEmail: \"\",\n      mobile: \"\",\n      companyName: \"\",\n      role: \"-- Select --\",\n      department: \"-- Select --\",\n      designation: \"-- Select --\",\n      cityName: \"\",\n      states: \"\",\n      workLocation: \"\",\n      formValues: \"\",\n      adminRolesListData: [],\n\n      formerrors: {\n        firstname: \"\",\n        companyID: \"\",\n        lastname: \"\",\n        signupEmail: \"\",\n        mobile: \"\",\n        role: \"\",\n      },\n      'buttonType': 'Register User'\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  initMap = () => {\n      this.setState({\n        gmapsLoaded: true,\n      })\n    }\n    getEntityLocation(companyId) {\n      console.log(\"getEntityLocation\",companyId)\n      axios.get('/api/entitymaster/getCompany/' + companyId)\n        .then((response) => {\n          console.log(\"response.data[0]==>\",response.data.locations)\n          this.setState({\n            corporateLocationArray: response.data.locations\n          },()=>{\n          })\n        })\n        .catch((error) => {\n  \n        })\n    }\n  handleChange(event) {\n    const datatype = event.target.getAttribute('data-text');\n    const target = event.target;\n    const name   = target.name;\n    const value  = target.value;\n    if(name==='role'){\n      var e = document.getElementById(\"role\");\n      var rolesentityname = e.options[e.selectedIndex].id;\n      console.log(\"rolesentityname==>\",rolesentityname);\n      this.setState({\n        rolesentityname: rolesentityname\n      })\n    }\n    let formerrors = this.state.formerrors;\n    this.setState({[name]:event.target.value},()=>{if(name=='companyID'){\n      \n      axios.get('/api/entitymaster/get/one/companyName/' + this.state.companyID)\n      .then((response) => {\n        this.getEntityLocation(this.state.companyID)\n        var companyName = response.data.companyName;\n        if (companyName == null) {\n          this.setState({\n            companyName: \"No Company Available\"\n          })\n        } else {\n          this.setState({\n            companyName: companyName\n          })\n        }\n\n      }).catch(function (error) { });\n    }})\n    switch (datatype) {\n      case 'firstname':\n        formerrors.firstname = nameRegex.test(value) && value.length > 0 ? '' : \"Please Enter Valid Name\";\n        break;\n\n      case 'lastname':\n        formerrors.lastname = nameRegex.test(value) && value.length > 0 ? '' : \"Please Enter Valid Name\";\n        break;\n\n      case 'mobile':\n        formerrors.mobile = mobileRegex.test(value) && value.length > 0 ? '' : \"Please enter a valid Contact Number\";\n        break;\n\n      case 'signupEmail':\n        formerrors.signupEmail = emailRegex.test(value) && value.length > 0 ? \"\" : \"Please enter a valid Email ID\";\n        break;\n\n      case 'role':\n        formerrors.role = value !== \"--select--\" ? \"\" : \"Please select role\";\n        break;\n\n      case 'department':\n        formerrors.department = value !== \"--select--\" ? \"\" : \"Please select department\";\n        break;\n\n      case 'designation':\n        formerrors.designation = value !== \"--select--\" ? \"\" : \"Please select designation\";\n        break;\n\n      case 'city':\n        formerrors.city = value !== \"--select--\" ? \"\" : \"Please select city\";\n        break;\n\n      case 'state':\n        formerrors.state = value !== \"--select--\" ? \"\" : \"Please select state\";\n        break;\n\n      case 'centerName':\n        formerrors.role = value !== \"--select--\" ? \"\" : \"Please select Center\";\n        break;\n\n      default:\n        break;\n\n    }\n\n    this.setState({\n      formerrors,\n      [name]: value\n    });\n  }\n  validation() {\n    $.validator.addMethod(\"regxA1\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid first name\");\n    $.validator.addMethod(\"regxA2\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid last name\");\n    $.validator.addMethod(\"regxEmail\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid email ID\");\n\n    $.validator.addMethod(\"regxmobile\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid mobile number\");\n\n    $.validator.addMethod(\"regxcompanyID\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid company ID\");\n\n    $.validator.addMethod(\"regxRole\", function (value, element, arg) {\n      return arg !== value;\n    }, \"Please select the role\");\n\n    $.validator.addMethod(\"regxdesignation\", function (value, element, arg) {\n      return arg !== value;\n    }, \"Please select the Designation\");\n\n\n    $.validator.addMethod(\"regxdepartment\", function (value, element, arg) {\n      return arg !== value;\n    }, \"Please select the Department\");\n\n\n    $.validator.addMethod(\"regxcity\", function (value, element, arg) {\n      return arg !== value;\n    }, \"Please select the City\");\n\n    $.validator.addMethod(\"regxstate\", function (value, element, arg) {\n      return arg !== value;\n    }, \"Please select the state\");\n\n\n    jQuery.validator.setDefaults({\n      debug: true,\n      success: \"valid\"\n    });\n    $(\"#userInfo\").validate({\n      rules: {\n        firstname: {\n          required: true,\n          regxA1: /^[A-Za-z][A-Za-z0-9\\-\\s]/,\n        },\n        lastname: {\n          required: true,\n          regxA2: /^[A-Za-z][A-Za-z0-9\\-\\s]/,\n        },\n        signupEmail: {\n          required: true,\n          regxEmail: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/\n        },\n        mobile: {\n          required: true,\n          regxmobile: /^(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\n        },\n\n        companyID: {\n          required: true,\n          regxcompanyID: /[a-zA-Z0-9]/,\n        },\n        role: {\n          required: true,\n          regxRole: \"--Select--\"\n        },\n        department: {\n          required: true,\n          regxdepartment: \"--Select--\"\n        },\n        designation: {\n          required: true,\n          regxdesignation: \"--Select--\"\n        },\n        city: {\n          required: true,\n          regxA2: /^[A-Za-z][A-Za-z0-9\\-\\s]/,\n        },\n      },\n      errorPlacement: function (error, element) {\n        if (element.attr(\"name\") === \"firstname\") {\n          error.insertAfter(\"#firstname\");\n        }\n        if (element.attr(\"name\") === \"lastname\") {\n          error.insertAfter(\"#lastname\");\n        }\n        if (element.attr(\"name\") === \"signupEmail\") {\n          error.insertAfter(\"#signupEmail\");\n        }\n        if (element.attr(\"name\") === \"mobile\") {\n          error.insertAfter(\"#mobile\");\n        }\n        if (element.attr(\"name\") === \"companyID\") {\n          error.insertAfter(\"#companyID\");\n        }\n        if (element.attr(\"name\") === \"role\") {\n          error.insertAfter(\"#role\");\n        }\n        if (element.attr(\"name\") === \"department\") {\n          error.insertAfter(\"#department\");\n        }\n        if (element.attr(\"name\") === \"designation\") {\n          error.insertAfter(\"#designation\");\n        }\n        if (element.attr(\"name\") === \"city\") {\n          error.insertAfter(\"#city\");\n        }\n      }\n    });\n  }\n\n  // getGoogleAPIKey(){\n  //       axios.get(\"/api/projectSettings/get/GOOGLE\",)\n  //       .then((response) => {\n  //           this.setState({\n  //               googleAPIKey : response.data.googleapikey\n  //           },()=>{\n  //               window.initMap = this.initMap\n  //               const gmapScriptEl = document.createElement(`script`)\n  //               gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=`+this.state.googleAPIKey+`&libraries=places&callback=initMap`\n  //               document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl)\n  //           });\n  //       })\n  //       .catch((error) =>{\n  //           swal(error)\n  //       })\n  //   }\n  componentDidMount() {\n   // this.getGoogleAPIKey()\n    // const companyIDCreateUser = this.props.companyIDCreateUser;\n    // console.log(\"companyIDcompanyID\",companyIDCreateUser);\n    const user_ID = localStorage.getItem(\"user_ID\");\n    var userDetails = (localStorage.getItem('userDetails'));\n    var userData = JSON.parse(userDetails);\n    console.log(\"userData = \", userData);\n    // const companyID = parseInt(userData.companyID);\n    const companyID = localStorage.getItem(\"companyID\");\n    console.log(\"companyID\",companyID);\n    console.log(\"userData\",userData);\n\n    this.setState({\n      user_ID: user_ID,\n      companyID: companyID\n    },()=>{\n      axios.get('/api/entitymaster/get/one/companyName/' + this.state.companyID)\n      .then((response) => {\n        this.getEntityLocation(this.state.companyID)\n        var companyName = response.data.companyName;\n        if (companyName == null) {\n          this.setState({\n            companyName: \"No Company Available\"\n          })\n        } else {\n          this.setState({\n            companyName: companyName\n          })\n        }\n\n      }).catch(function (error) { });\n    })\n    this.validation();\n    this.getDepartment();\n    this.getDesignation();\n    this.getRole();\n    axios.get('/api/companysettings/list')\n      .then(\n        (res) => {\n          const postsdata = res.data;\n          this.setState({\n            allPosts: postsdata,\n          });\n          let locationArray = [];\n          if (this.state.allPosts !== null) {\n            locationArray = this.state.allPosts.map(function (item) { return item.companyLocationsInfo });\n          } else {\n            locationArray = \"no data\";\n          }\n          this.setState({\n            office: locationArray,\n          });\n\n          // here for list\n          var data = {\n            \"startRange\": this.state.startRange,\n            \"limitRange\": this.state.limitRange,\n            \"companyID\": this.props.companyID,\n          }\n          this.props.getData(data);\n        }\n      )\n      .catch((error) => {\n\n      });\n\n  }\n  getDepartment() {\n    axios.get(\"/api/departmentmaster/get/list\")\n      .then((response) => {\n        console.log(\"departmentArray==>\",response.data[0])\n        this.setState({\n          departmentArray: response.data\n        })\n      })\n      .catch((error) => {\n      })\n  }\n  getDesignation() {\n    axios.get(\"/api/designationmaster/get/list\")\n      .then((response) => {\n        // console.log(\"designationArray==>\",response.data)\n        this.setState({\n          designationArray: response.data\n        })\n      })\n      .catch((error) => {\n      })\n  }\n  createUser(event) {\n    event.preventDefault();\n    if ($('#userInfo').valid()) {\n      axios.get('/api/entitymaster/get/one/companyName/' + this.state.companyID)\n        .then((response) => {\n          var companyName = response.data.companyName;\n          this.setState({\n            companyName: companyName\n          })\n          this.setState(() => {\n            if (companyName === \"No Company Available\") {\n              swal({\n                title: \"\",\n                text: \"Company ID \" + this.state.companyID + \" is not valid Company ID\",\n              });\n            } else {\n              console.log('this.state.role Post==>>>', this.state.role)\n              const formValues = {\n                \"firstname\": this.state.firstname,\n                \"lastname\": this.state.lastname,\n                \"email\": this.state.signupEmail,\n                \"mobNumber\": (this.state.mobile).replace(\"-\", \"\"),\n                \"pwd\": \"welcome123\",\n                // \"role\": this.state.role !== \"employee\" ? [\"  employee\",this.state.role] : [\"employee\"],\n                \"role\" :  this.state.rolesentityname === \"corporate\" ? \n                          this.state.role === \"employee\" ? [\"employee\"] : [\"employee\",this.state.role]\n                          :\n                          [this.state.role],\n\n                \"department\": this.state.department,\n                \"designation\": this.state.designation,\n                \"cityName\": this.state.cityName,\n                \"states\": this.state.states,\n                \"companyID\": this.state.companyID,\n                \"workLocation\": this.state.workLocation,\n                \"companyName\": companyName,\n                \"status\"          : this.state.role ===\"corporateadmin\" || this.state.role ===\"vendoradmin\" ? \"active\" :\"blocked\",\n              }\n              console.log('userid Post==>>>', formValues)\n              if (this.state.firstname !== \"\" && this.state.companyName !== \"\" && this.state.lastname !== \"\" && this.state.signupEmail && this.state.mobile ) {\n                axios.post('/api/auth/post/signup/user', formValues)\n                  .then((res) => {\n                    // console.log('userid Post==>>>', res.data.ID)\n                    if (res.data.message === 'Email Id already exits.') {\n                      swal({\n                        title: \"Please enter mandatory fields\",\n                        text: res.data.message,\n                      });\n                      this.setState({\n                        show: false,\n                        'buttonType': 'Register User'\n                      })\n                    } else {\n                      // var sendData = {\n                      //   \"event\": \"Contact Created\", //Event Name\n                      //   \"toUser_id\": res.data.ID, //To user_id(ref:users)\n                      //   \"toUserRole\":\"employee\",\n                      //   \"company_id\": this.state.corporate_Id, //company_id(ref:entitymaster)\n                      //   \"otherAdminRole\":'corporateadmin',\n                      //   \"variables\": {\n                      //     'EmployeeName': this.state.firstname + ' ' + this.state.lastname,\n                      //     'Password': \"Welcome@123\",\n                      //     'mobileNo': this.state.mobile,\n                      //     'email': this.state.signupEmail\n                      //   }\n                      // }\n\n                      // axios.post('/api/masternotifications/post/sendNotification', sendData)\n                      //   .then((res) => {\n                      //     // console.log('sendDataToUser in result==>>>', res.data.type)\n                      //   })\n                      //   .catch((error) => { console.log('notification error: ', error) })\n                      var sendData = {\n                        \"event\": \"Event2\", //Event Name\n                        \"toUser_id\": res.data._id, //To user_id(ref:users)\n                        \"toUserRole\":\"employee\",\n                        \"company_id\": this.state.corporate_Id, //company_id(ref:entitymaster)\n                        \"otherAdminRole\":'corporateadmin',\n                        \"variables\": {\n                          'EmployeeName': this.state.firstname + ' ' + this.state.lastname,\n                          'Password': \"welcome123\",\n                          'mobileNo': this.state.mobile,\n                          'email': this.state.signupEmail,\n                          // 'sendUrl': this.state.url+\"/login\",\n                        }\n                      }\n                      console.log('sendData: ',sendData)\n                      axios.post('/api/masternotifications/post/sendNotification', sendData)\n                      .then((res) => {\n                      console.log('sendDataToUser in result==>>>', res.data)\n                      })\n                      .catch((error) => { console.log('notification error: ',error)})\n\n\n\n                        var contactDetailspersonmaster \t= {\n                              'firstName'       : this.state.firstname,\n                              'lastName'        : this.state.lastname,\n                              'contactNo'       : (this.state.mobile).replace(\"-\", \"\"),\n                              'phone'           : (this.state.mobile).replace(\"-\", \"\"),\n                              'email'           : this.state.signupEmail,\n                              \"departmentName\"  : this.state.department,\n                              \"designationName\" : this.state.designation,\n                            /*  \"cityName\"        : this.state.cityName,\n                              \"states\"          : this.state.states,*/\n                              \"address\"         : [{\n                                                  \"city\"        : this.state.cityName,\n                                                  \"state\"          : this.state.states,\n\n                              }],\n                              \"companyID\"       : this.state.companyID,\n                              \"company_Id\"      : this.state.corporate_Id,\n                              \"companyName\"     : companyName,\n                              \"type\"            : this.state.rolesentityname === \"corporate\" ? \n                                                  \"employee\": null ||\n                                                  this.state.rolesentityname === \"vendor\" ? \n                                                  \"driver\": null,\n                              \"entityType\"      : this.state.rolesentityname,\n                              \"userId\"          : res.data.ID,\n                              \"status\"          : \"Active\",\n                        }\n\n                        if(contactDetailspersonmaster.type == \"driver\" || \"employee\" || \"guest\"){\n                          axios.post('/api/personmaster/post' ,contactDetailspersonmaster)\n                          .then((response) => {\n                            console.log('in result Res data==>>>', response.data)\n                          })\n                          .catch((error) => {})\n                        }\n                        \n                      swal(\" \", \"User added successfully! \\n Email Id: \"+this.state.signupEmail+\"\\n Default Password: \"+\"Welcome@123\");\n                      var data = {\n                        \"startRange\": this.state.startRange,\n                        \"limitRange\": this.state.limitRange,\n                        \"companyID\": this.props.companyID,\n                      }\n                      this.props.getData(data);\n                      this.setState({\n                        firstname: \"\",\n                        lastname: \"\",\n                        companyID: \"\",\n                        signupEmail: \"\",\n                        mobile: \"\",\n                        role: \"\",\n                        centerName: \"\",\n                        department: \"\",\n                        designation: \"\",\n                        cityName: \"\",\n                        states: \"\",\n                        companyName: \"\",\n                        show: false,\n                        'buttonType': 'Register User'\n                      }, () => {\n                        var data = {\n                          \"startRange\": this.state.startRange,\n                          \"limitRange\": this.state.limitRange,\n                          \"companyID\": this.props.companyID,\n                        }\n                        this.props.getData(data);\n                        var modal = document.getElementById(\"CreateUserModal\");\n                        modal.style.display = \"none\";\n                        $('.modal-backdrop').remove();\n                          $(\"#CreateUserModal .close\").click()\n\n                        \n\n                      })\n                    }\n                  })\n                  .catch((error) => {\n                    this.setState({ show: false })\n                  });\n\n              } else {\n                swal({\n                  title: \"Please enter mandatory fields\",\n                  text: \"Please enter mandatory fields\",\n                });\n              }\n            }\n          })\n        }).catch(function (error) { });\n    }\n  }\n  companynamewithid() {\n    // console.log(\" this.state.companyID==>>\", this.state.companyID)\n    axios.get('/api/entitymaster/get/one/companyName/' + this.state.companyID)\n      .then((response) => {\n        var companyName = response.data.companyName;\n        this.setState({\n          companyName: companyName\n        })\n      }).catch(function (error) { });\n  }\n  // getRole() {\n  //   // var data = {\n  //   //   \"startRange\": this.state.starFtRange,\n  //   //   \"limitRange\": this.state.limitRange,\n  //   // }\n  //   axios.post('/api/roles/get/list')\n  //     .then((response) => {\n  //       console.log(\"response.data==>\",response.data)\n  //       const key = 'role';\n\t// \t\t\t// const arrayUniqueByKey = [...new Map(response.data.map(item =>\n\t// \t\t\t// [item[key], item])).values()];\n  //       this.setState({\n  //         adminRolesListData: response.data\n  //       }, () => {\n  //       })\n  //     }).catch(function (error) {\n  //     });\n  // }\n  getRole() {\n\t\taxios.post('/api/roles/get/list')\n\t\t  .then((response) => {\n        console.log(\"response from role =>\",response.data[0].rolesentity)\n        this.setState({\n          adminRolesListData: response.data\n        })\n\t\t\t// var fileName = 'admin'\n\t\t\t// axios.get('/api/rolesentitymaster/get/filedetails/'+fileName)\n\t\t\t// .then((response) => {\n      //   console.log(\"response from role =>\",response.data)\n\t\t\t// \tvar rolecor = response.data[0]._id\n\t\t\t// \taxios.get('/api/roles/get/rolelist/'+rolecor)\n\t\t\t// \t\t.then((response) => {\n\t\t\t// \t\t\tthis.setState({\n\t\t\t// \t\t\t\tadminRolesListData: response.data\n\t\t\t// \t\t\t  }, () => {\n\t\t\t// \t\t\t  })\n\t\t\t// \t\t}).catch(function (error) {});\n\t\t\t// }).catch(function (error) {});\n\t\t\t\n\t\t  }).catch(function (error) {\n\t\t  });\n\t}\n  handleChangePlaces = address => {\n    var array = {\n      cityName: address,\n    }\n    this.setState({ cityName: address, tripArray: array });\n  };\n  handleSelectLocation = address => {\n    console.log(address)\n    geocodeByAddress(address)\n      .then((results) => {\n\n        for (var i = 0; i < results[0].address_components.length; i++) {\n          for (var b = 0; b < results[0].address_components[i].types.length; b++) {\n            switch (results[0].address_components[i].types[b]) {\n              case 'sublocality_level_1':\n                var area = results[0].address_components[i].long_name;\n                break;\n              case 'sublocality_level_2':\n                var area = results[0].address_components[i].long_name;\n                break;\n              case 'locality':\n                var city = results[0].address_components[i].long_name;\n                break;\n              case 'administrative_area_level_1':\n                var state = results[0].address_components[i].long_name;\n                break;\n            }\n          }\n        }\n        console.log(\"state===>>>>\", state)\n        this.setState({ states: state })\n      })\n      .catch(error => console.error('Error', error));\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => this.setState({ 'fromLatLng': latLng }))\n      .catch(error => console.error('Error', error));\n    var array = {\n      cityName: address,\n    }\n    console.log(\"address===>>>>\", address)\n    this.setState({ \n      cityName: address ? address.split(\",\")[0] : \"\", \n      tripArray: array });\n  };\n\n  camelCase(str) {\n    return str\n      .toLowerCase()\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  }\n  close(event) {\n    this.setState({\n      firstname: \"\",\n      lastname: \"\",\n      signupEmail: \"\",\n      mobile: \"\",\n      role: \"\",\n    });\n    var modal = document.getElementById(\"CreateUserModal\");\n    modal.style.display = \"none\";\n    $('.modal-backdrop').remove();\n    $(\"#userInfo\").validate().resetForm();\n\n  }\n  render() {\n    const searchOptions = {\n      types: ['(cities)'],\n      componentRestrictions: { country: \"in\" }\n    }\n    const { formerrors } = this.state;\n    return (\n      <div>\n        <div className=\"modal\" id=\"CreateUserModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div className=\"modal-dialog modal-lg \" role=\"document\">\n            <div className=\"modal-content UMmodalContent ummodallftmg ummodalmfdrt  \">\n              <div className=\"modal-header adminModal-header col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <button type=\"button\" onClick={this.close.bind(this)} className=\"close \" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n                <h4 className=\"modal-title row userTitle\" id=\"exampleModalLabel\">Add New User</h4>\n              </div>\n              <div className=\"modal-body adminModal-body col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div className=\"hideModal\">\n                  <div className=\"userBox-body\">\n                    <div className=\"\">\n                      <form id=\"userInfo\">\n                        <div className=\"\">\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \">\n                            <label>First Name <span className=\"requiredsign\">*</span></label>\n                            <input type=\"text\" style={{ textTransform: 'capitalize' }}\n                              className=\"form-control UMname has-content\"\n                              id=\"firstname\" ref=\"firstname\" name=\"firstname\" data-text=\"firstname\" placeholder=\"First Name\" onChange={this.handleChange}\n                              value={this.state.firstname} />\n                          </div>\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\">\n                            <label>Last Name <span className=\"requiredsign\">*</span></label>\n                            <input type=\"text\" className=\"form-control UMname  has-content\"\n                              id=\"lastname\" ref=\"lastname\" name=\"lastname\" data-text=\"lastname\" onChange={this.handleChange}\n                              value={this.state.lastname} placeholder=\"Last Name\" />\n                          </div>\n                        </div>\n                        <div className=\"valid_box\">\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\">\n                            <label >Email ID <span className=\"requiredsign\">*</span></label>\n                            <input type=\"text\" className=\"formFloatingLabels form-control  newinputbox\" ref=\"signupEmail\" name=\"signupEmail\" id=\"signupEmail\" data-text=\"signupEmail\" onChange={this.handleChange} value={this.state.signupEmail}\n                              placeholder=\"Email\" />\n                          </div>\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\">\n                            <label >Mobile Number <span className=\"requiredsign\">*</span></label>\n                            <input type=\"number\"  required pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" className=\"formFloatingLabels form-control  newinputbox\" ref=\"mobile\" name=\"mobile\" id=\"mobile\" data-text=\"mobile\" onChange={this.handleChange} value={this.state.mobile}\n                              placeholder=\"Mobile Number\" />\n                          </div>\n                        </div>\n                        <div className=\"valid_box\">\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \" >\n                            <label >Role <span className=\"requiredsign\">*</span></label>\n                            <div className=\"input-group col-lg-12 col-md-12 col-xs-12 col-sm-12\" >\n\n                              <select ref=\"role\" name=\"role\"\n                                      value={this.state.role}  id=\"role\" onChange={this.handleChange.bind(this)}\n                                       className=\"form-control\">\n                                        <option hidden>--Select--</option>\n                                         {\n                                          this.state.adminRolesListData && this.state.adminRolesListData.length > 0 ?\n                                          this.state.adminRolesListData.map((roledata, index)=>{\n                                            return(      \n                                                <option key={index} id={roledata.rolesentity} value={roledata.role}>{roledata.role}</option>\n                                            );\n                                          }\n                                        ) : ''\n                                      }\n                                    </select>\n                            </div>\n                          </div>\n\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\">\n                            <label>Company ID <span className=\"requiredsign\">*</span></label>\n                            { this.state.companyID ?\n                               <input type=\"text\" className=\"form-control UMname  has-content\"\n                              id=\"companyID\" ref=\"companyID\" name=\"companyID\" data-text=\"companyID\" \n                              onChange={this.handleChange}\n                              value={this.state.companyID} placeholder=\"company ID\" disabled/>\n                            :\n                            <input type=\"text\" className=\"form-control UMname  has-content\"\n                              id=\"companyID\" ref=\"companyID\" name=\"companyID\" data-text=\"companyID\" \n                              onChange={this.handleChange}\n                              value={this.state.companyID} placeholder=\"company ID\" />\n                            }\n                          </div>\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\">\n                            <label>Company Name <span className=\"requiredsign\">*</span></label>\n                            <input type=\"text\"\n                              className=\"form-control UMname  has-content\"\n                              id=\"companyName\" ref=\"companyName\"\n                              name=\"companyName\" data-text=\"companyName\"\n                              onChange={this.handleChange}\n                               disabled\n                              value={this.state.companyName} placeholder=\"company Name\"\n                            />\n                          </div>\n                          {/* <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\">\n                            <label>Company Location <span className=\"requiredsign\">*</span></label>\n                            <input type=\"text\"\n                              className=\"form-control UMname  has-content\"\n                              id=\"workLocation\" ref=\"workLocation\"\n                              name=\"workLocation\" data-text=\"workLocation\"\n                              onChange={this.handleChange}\n                               disabled\n                              value={this.state.workLocation} placeholder=\"Company Location\"\n                            />\n                          </div> */}\n                          {/* <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \" >\n                            <label >Company Location <span className=\"requiredsign\">*</span></label>\n                            <div className=\"input-group col-lg-12 col-md-12 col-xs-12 col-sm-12\" id=\"workLocation\">\n                              <select className=\"form-control \" value={this.state.workLocation} onChange={this.handleChange} ref=\"workLocation\" id=\"workLocation\" name=\"workLocation\" data-text=\"workLocation\">\n                              <option selected={true} disabled={true}>--Select Office Location--</option>\n                                {\n                                  this.state.corporateLocationArray && \n                                    this.state.corporateLocationArray.map((data, i) => {\n                                      // console.log(\"data\",data)\n                                      return (\n                                        <option key={i} locationID={data._id} branch-code={data.branchCode} value={data.addressLine1}>{((data.locationType).match(/\\b(\\w)/g)).join('')} - {data.area} {data.city}, {data.stateCode} - {data.countryCode}  </option>\n                                      );\n                                    })\n                                    // :\n                                    // null\n                                }\n                              </select>\n                            </div>\n                          </div> */}\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \" >\n                            <label >Work Location <span className=\"requiredsign\">*</span></label>\n                            <div className=\"input-group col-lg-12 col-md-12 col-xs-12 col-sm-12\" id=\"workLocation\">\n                              <select className=\"form-control \" value={this.state.workLocation} onChange={this.handleChange} ref=\"workLocation\" id=\"workLocation\" name=\"workLocation\" data-text=\"workLocation\">\n                                <option hidden> --Select-- </option>\n                                {\n                                  this.state.corporateLocationArray && this.state.corporateLocationArray.length > 0 ?\n                                    this.state.corporateLocationArray.map((data, index) => {\n                                      // console.log(\"data dept==>\",data);\n                                      return (\n                                        <option key={index} value={data.locationType}>{((data.locationType).match(/\\b(\\w)/g)).join('')} - {data.area} {data.city}, {data.stateCode} - {data.countryCode}  </option>\n                                      );\n                                    })\n                                    :\n                                    <option value='user'>User</option>\n                                }\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \" >\n                            <label >Department <span className=\"requiredsign\">*</span></label>\n                            <div className=\"input-group col-lg-12 col-md-12 col-xs-12 col-sm-12\" id=\"department\">\n                              <select className=\"form-control \" value={this.state.department} onChange={this.handleChange} ref=\"department\" id=\"department\" name=\"department\" data-text=\"department\">\n                                <option hidden> --Select-- </option>\n                                {\n                                  this.state.departmentArray && this.state.departmentArray.length > 0 ?\n                                    this.state.departmentArray.map((data, index) => {\n                                      // console.log(\"data dept==>\",data);\n                                      return (\n                                        <option key={index} value={data.department}>{data.department}</option>\n                                      );\n                                    })\n                                    :\n                                    <option value='user'>User</option>\n                                }\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \" >\n                            <label > Designation <span className=\"requiredsign\">*</span></label>\n                            <div className=\"input-group col-lg-12 col-md-12 col-xs-12 col-sm-12\" id=\"designation\">\n                              <select className=\"form-control \" value={this.state.designation} onChange={this.handleChange} ref=\"designation\" id=\"designation\" name=\"designation\" data-text=\"designation\">\n                                <option hidden> --Select-- </option>\n                                {\n                                  this.state.designationArray && this.state.designationArray.length > 0 ?\n                                    this.state.designationArray.map((data, index) => {\n                                      return (\n                                        <option key={index} value={data.designation}>{data.designation}</option>\n                                      );\n                                    })\n                                    :\n                                    <option value='user'>User</option>\n                                }\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box \" >\n                          <label >City</label>\n                                <PlacesAutocomplete\n                                  value={this.state.cityName}\n                                  onChange={this.handleChangePlaces}\n                                  onSelect={this.handleSelectLocation}\n                                  searchOptions={searchOptions}>\n                                  {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                                    <div>\n                                      <input\n                                        {...getInputProps({\n                                          placeholder: 'Search Cities ...',\n                                          className: 'location-search-input col-lg-12 form-control',\n                                        })}\n                                      />\n                                      <div className=\"autocomplete-dropdown-container\">\n                                        {loading && <div>Loading...</div>}\n                                        {suggestions.map(suggestion => {\n                                          const className = suggestion.active\n                                            ? 'suggestion-item--active'\n                                            : 'suggestion-item';\n                                          // inline style for demonstration purpose\n                                          const style = suggestion.active\n                                            ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                            : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                          return (\n                                            <div\n                                              {...getSuggestionItemProps(suggestion, {\n                                                className,\n                                                style,\n                                              })}\n                                            >\n                                              {/*<span>{suggestion.description}</span>*/}\n                                              <span>{(suggestion.description ? suggestion.description.split(\",\")[0] : \"\")}</span>\n\n                                            </div>\n                                          );\n                                        })}\n                                      </div>\n                                    </div>\n                                  )}\n                                </PlacesAutocomplete>\n                          </div>\n                          <div className=\"form-margin col-lg-6 col-md-6 col-xs-12 col-sm-12  valid_box\">\n                            <label>State </label>\n                            <input type=\"text\"\n                              className=\"form-control\"\n                              id=\"states\" ref=\"states\"\n                              name=\"states\" data-text=\"states\"\n                              onChange={this.handleChange} disabled\n                              value={this.state.states} placeholder=\"State Name\"\n                            />\n                          </div>\n                        </div>\n\n                        <div className=\" col-lg-12 col-md-12 col-xs-12 col-sm-12 \">\n                          <button className=\"col-lg-3 col-md-2 col-xs-12 col-sm-12 col-xs-12 pull-right btn button3 topMargin outlinebox\" type=\"submit\" onClick={this.createUser.bind(this)} id=\"CreateUserModal\">{this.state.buttonType}</button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CreateUser;\n"]},"metadata":{},"sourceType":"module"}