{"ast":null,"code":"var _jsxFileName = \"/home/mani/projects/jobportal/webapp/employerportal/src/coreadmin/Master/CityClassification/CityClassification.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport jQuery from 'jquery';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport TwoFieldForm from '../TwoFieldForm/TwoFieldForm.js';\nimport _ from 'underscore';\nimport 'bootstrap/js/tab.js';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nclass CityClassification extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      oneFields: {\n        placeholder: \"Add Your City Type & press 'Enter' Key\",\n        title: \"City Type\",\n        attributeName: \"cityType\"\n      },\n      \"oneTableHeading\": {\n        cityType: \"City Type\",\n        actions: 'Action'\n      },\n      \"oneTableObjects\": {\n        deleteMethod: 'delete',\n        apiLink: '/api/citytypemaster/',\n        paginationApply: false,\n        searchApply: false,\n        editUrl: '/project-master-data/oneField',\n        editUrl1: '/project-master-data'\n      },\n      \"fields\": {\n        placeholder: \"Enter city name..\",\n        title: \"City Classification\",\n        secondtitle: \"City Type\",\n        attributeName: \"cityName\",\n        secondAttributeId: \"cityTypeId\",\n        secondAttributeName: \"cityType\"\n      },\n      \"tableHeading\": {\n        cityType: \"City Type\",\n        cityName: \"City Name\",\n        actions: 'Action'\n      },\n      \"tableObjects\": {\n        deleteMethod: 'delete',\n        apiLink: '/api/citynamemaster/',\n        apiLink2: '/api/citytypemaster/',\n        paginationApply: false,\n        searchApply: false,\n        editUrl: '/project-master-data'\n      },\n      \"startRange\": 0,\n      \"limitRange\": 10,\n      \"editId\": '',\n      \"oneeditId\": ''\n    };\n  }\n\n  getOneFieldFileDetails(fileName) {\n    axios.get(this.state.oneFieldfileDetailUrl + fileName).then(response => {\n      $('.fullpageloader').hide();\n\n      if (response) {\n        this.setState({\n          oneFieldfileDetails: response.data,\n          oneFieldfailedRecordsCount: response.data.failedRecords.length,\n          oneFieldgoodDataCount: response.data.goodrecords.length\n        });\n        var tableData = response.data.goodrecords.map((a, i) => {\n          return {\n            \"brand\": a.brand ? a.brand : '-'\n          };\n        });\n        var oneFieldfailedRecordsTable = response.data.failedRecords.map((a, i) => {\n          return {\n            \"brand\": a.brand ? a.brand : '-',\n            \"failedRemark\": a.failedRemark ? a.failedRemark : '-'\n          };\n        });\n        this.setState({\n          oneFieldgoodRecordsTable: tableData,\n          oneFieldfailedRecordsTable: oneFieldfailedRecordsTable\n        });\n      }\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  getTwoFieldFileDetails(fileName) {\n    axios.get(this.state.fileDetailUrl + fileName).then(response => {\n      console.log('response====', response);\n      $('.fullpageloader').hide();\n\n      if (response) {\n        this.setState({\n          fileDetails: response.data,\n          failedRecordsCount: response.data.failedRecords.length,\n          goodDataCount: response.data.goodrecords.length\n        });\n        var tableData = response.data.goodrecords.map((a, i) => {\n          console.log('a', a);\n          return {\n            \"brandName\": a.brandName ? a.brandName : '-',\n            \"model\": a.model ? a.model : '-'\n          };\n        });\n        var failedRecordsTable = response.data.failedRecords.map((a, i) => {\n          console.log('a failedRecordsTable', a);\n          return {\n            \"brand\": a.brand ? a.brand : '-',\n            \"model\": a.model ? a.model : '-',\n            \"failedRemark\": a.failedRemark ? a.failedRemark : '-'\n          };\n        });\n        this.setState({\n          goodRecordsTable: tableData,\n          failedRecordsTable: failedRecordsTable\n        }, () => {\n          console.log('goodRecordsTable', this.state.goodRecordsTable);\n          console.log('failedRecordsTable', this.state.failedRecordsTable);\n        });\n      }\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 companyDisplayForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(TwoFieldForm, {\n      fields: this.state.fields,\n      tableHeading: this.state.tableHeading,\n      tableObjects: this.state.tableObjects,\n      editId: this.props.editId,\n      oneFields: this.state.oneFields,\n      oneTableHeading: this.state.oneTableHeading,\n      oneTableObjects: this.state.oneTableObjects,\n      oneeditId: this.props.oneFieldEditId,\n      history: this.props.history,\n      bulkRequired: false,\n      onefieldurl: \"/api/brandmaster/bulkUploadbrand\",\n      onefieldfileurl: \"https://fivebees.s3.ap-south-1.amazonaws.com/prod/master/VehicleBrand.xlsx\",\n      getOneFieldFileDetails: this.getOneFieldFileDetails.bind(this),\n      oneFieldgoodRecordsHeading: this.state.oneFieldgoodRecordsHeading,\n      oneFieldfailedtableHeading: this.state.oneFieldfailedtableHeading,\n      oneFieldfileDetails: this.state.oneFieldfileDetails,\n      oneFielduploadedData: this.oneFielduploadedData,\n      oneFieldfailedRecordsTable: this.state.oneFieldfailedRecordsTable,\n      oneFieldfailedRecordsCount: this.state.oneFieldfailedRecordsCount,\n      oneFieldgoodRecordsTable: this.state.oneFieldgoodRecordsTable,\n      oneFieldgoodDataCount: this.state.oneFieldgoodDataCount,\n      twofieldBulkRequired: false,\n      url: \"/api/modelmaster/bulkUploadModel\",\n      twofieldfileurl: \"https://fivebees.s3.ap-south-1.amazonaws.com/prod/master/VehicleModel.xlsx\",\n      getTwoFieldFileDetails: this.getTwoFieldFileDetails.bind(this),\n      goodRecordsHeading: this.state.goodRecordsHeading,\n      failedtableHeading: this.state.failedtableHeading,\n      fileDetails: this.state.fileDetails,\n      data: {\n        \"createdBy\": localStorage.getItem(\"user_ID\")\n      },\n      uploadedData: this.uploadedData,\n      failedRecordsTable: this.state.failedRecordsTable,\n      failedRecordsCount: this.state.failedRecordsCount,\n      goodRecordsTable: this.state.goodRecordsTable,\n      goodDataCount: this.state.goodDataCount,\n      masterFieldForm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))))\n    /*<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <TwoFieldForm fields={this.state.fields}\n                  tableHeading={this.state.tableHeading}\n                  tableObjects={this.state.tableObjects}\n                  editId ={this.props.match.params.fieldID}\n                  history={this.props.history} />\n     </div>*/\n    ;\n  }\n\n}\n\nexport default CityClassification;","map":{"version":3,"sources":["/home/mani/projects/jobportal/webapp/employerportal/src/coreadmin/Master/CityClassification/CityClassification.js"],"names":["React","Component","$","jQuery","axios","swal","TwoFieldForm","_","PlacesAutocomplete","geocodeByAddress","getLatLng","CityClassification","constructor","props","state","oneFields","placeholder","title","attributeName","cityType","actions","deleteMethod","apiLink","paginationApply","searchApply","editUrl","editUrl1","secondtitle","secondAttributeId","secondAttributeName","cityName","apiLink2","getOneFieldFileDetails","fileName","get","oneFieldfileDetailUrl","then","response","hide","setState","oneFieldfileDetails","data","oneFieldfailedRecordsCount","failedRecords","length","oneFieldgoodDataCount","goodrecords","tableData","map","a","i","brand","oneFieldfailedRecordsTable","failedRemark","oneFieldgoodRecordsTable","catch","error","console","log","getTwoFieldFileDetails","fileDetailUrl","fileDetails","failedRecordsCount","goodDataCount","brandName","model","failedRecordsTable","goodRecordsTable","render","fields","tableHeading","tableObjects","editId","oneTableHeading","oneTableObjects","oneFieldEditId","history","bind","oneFieldgoodRecordsHeading","oneFieldfailedtableHeading","oneFielduploadedData","goodRecordsHeading","failedtableHeading","localStorage","getItem","uploadedData"],"mappings":"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","sourcesContent":["import React, { Component }     from 'react';\nimport $                        from 'jquery';\nimport jQuery                   from 'jquery';\nimport axios                    from 'axios';\nimport swal                     from 'sweetalert';\nimport TwoFieldForm             from '../TwoFieldForm/TwoFieldForm.js';\n\nimport _ from 'underscore';\nimport 'bootstrap/js/tab.js';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\nclass CityClassification extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            oneFields : {\n                placeholder : \"Add Your City Type & press 'Enter' Key\",\n                title       : \"City Type\",\n                attributeName : \"cityType\"\n            },\n            \"oneTableHeading\": {\n                cityType: \"City Type\",\n                actions: 'Action',\n            },\n            \"oneTableObjects\": {\n                deleteMethod: 'delete',\n                apiLink: '/api/citytypemaster/',\n                paginationApply: false,\n                searchApply: false,\n                editUrl       : '/project-master-data/oneField',\n                editUrl1      : '/project-master-data'\n\n            },\n\n            \"fields\" : {\n                placeholder          : \"Enter city name..\",\n                title                : \"City Classification\",\n                secondtitle          : \"City Type\",\n                attributeName        : \"cityName\",\n                secondAttributeId    : \"cityTypeId\",\n                secondAttributeName  : \"cityType\"\n            },\n            \"tableHeading\": {\n                cityType    : \"City Type\",\n                cityName    : \"City Name\",\n                actions     : 'Action',\n            },\n            \"tableObjects\": {\n                deleteMethod: 'delete',\n                apiLink  :'/api/citynamemaster/',\n                apiLink2 :'/api/citytypemaster/',\n                paginationApply: false,\n                searchApply: false,\n                editUrl         : '/project-master-data'\n            },\n            \"startRange\": 0,\n            \"limitRange\": 10,\n            \"editId\"            : '',\n            \"oneeditId\"         : '',\n\n        };\n    }\n    getOneFieldFileDetails(fileName){\n         axios\n          .get(this.state.oneFieldfileDetailUrl+fileName)\n          .then((response)=> {\n          $('.fullpageloader').hide();  \n          if (response) {\n            this.setState({\n                oneFieldfileDetails         : response.data,\n                oneFieldfailedRecordsCount  : response.data.failedRecords.length,\n                oneFieldgoodDataCount       : response.data.goodrecords.length\n            });\n\n              var tableData = response.data.goodrecords.map((a, i)=>{\n                return{\n                    \n                    \"brand\"   : a.brand          ? a.brand         : '-',\n                }\n              })\n\n              var oneFieldfailedRecordsTable = response.data.failedRecords.map((a, i)=>{\n              return{\n                    \n                    \"brand\"         : a.brand          ? a.brand         : '-',\n                    \"failedRemark\"  : a.failedRemark     ? a.failedRemark : '-' \n              }\n              })\n              \n            this.setState({\n                oneFieldgoodRecordsTable    : tableData,\n                oneFieldfailedRecordsTable  : oneFieldfailedRecordsTable\n            })\n          }\n          })\n          .catch((error)=> { \n            console.log('error', error);\n          }) \n    }\n    getTwoFieldFileDetails(fileName){\n        axios\n        .get(this.state.fileDetailUrl+fileName)\n        .then((response)=> {\n            console.log('response====',response);\n            $('.fullpageloader').hide();  \n            if (response) {\n                this.setState({\n                    fileDetails         : response.data,\n                    failedRecordsCount  : response.data.failedRecords.length,\n                    goodDataCount       : response.data.goodrecords.length\n                });\n                var tableData = response.data.goodrecords.map((a, i)=>{\n                    console.log('a',a);\n                    return{\n                        \"brandName\"    : a.brandName          ? a.brandName         : '-',\n                        \"model\"        : a.model            ? a.model           : '-',\n                    }\n                })\n                var failedRecordsTable = response.data.failedRecords.map((a, i)=>{\n                    console.log('a failedRecordsTable',a);\n                    return{\n                        \"brand\"         : a.brand          ? a.brand         : '-',\n                        \"model\"         : a.model            ? a.model           : '-',\n                        \"failedRemark\"  : a.failedRemark     ? a.failedRemark    : '-' \n                    }\n                })\n                this.setState({\n                    goodRecordsTable    : tableData,\n                    failedRecordsTable  : failedRecordsTable\n                },()=>{\n                    console.log('goodRecordsTable',this.state.goodRecordsTable);\n                    console.log('failedRecordsTable',this.state.failedRecordsTable);\n                })\n            }\n        })\n        .catch((error)=> { \n            console.log('error', error);\n        }) \n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <section className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 companyDisplayForm\">\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 pageContent \">\n                       <TwoFieldForm   fields={this.state.fields}\n                                        tableHeading={this.state.tableHeading}\n                                        tableObjects={this.state.tableObjects}\n                                        editId ={this.props.editId}                                                       \n                                        oneFields={this.state.oneFields}\n                                        oneTableHeading={this.state.oneTableHeading}\n                                        oneTableObjects={this.state.oneTableObjects}\n                                        oneeditId ={this.props.oneFieldEditId}\n                                        history={this.props.history}   \n                                        \n                                        bulkRequired={false}\n                                        onefieldurl=\"/api/brandmaster/bulkUploadbrand\" \n                                        onefieldfileurl=\"https://fivebees.s3.ap-south-1.amazonaws.com/prod/master/VehicleBrand.xlsx\"\n                                        getOneFieldFileDetails={this.getOneFieldFileDetails.bind(this)}\n                                        oneFieldgoodRecordsHeading ={this.state.oneFieldgoodRecordsHeading}\n                                        oneFieldfailedtableHeading={this.state.oneFieldfailedtableHeading}\n                                        oneFieldfileDetails={this.state.oneFieldfileDetails}\n\n                                        oneFielduploadedData={this.oneFielduploadedData} \n                                        oneFieldfailedRecordsTable ={this.state.oneFieldfailedRecordsTable}\n                                        oneFieldfailedRecordsCount={this.state.oneFieldfailedRecordsCount}\n                                        oneFieldgoodRecordsTable={this.state.oneFieldgoodRecordsTable}\n                                        oneFieldgoodDataCount={this.state.oneFieldgoodDataCount}\n\n                                        twofieldBulkRequired={false}\n                                        url=\"/api/modelmaster/bulkUploadModel\" \n                                        twofieldfileurl=\"https://fivebees.s3.ap-south-1.amazonaws.com/prod/master/VehicleModel.xlsx\"\n                                        getTwoFieldFileDetails={this.getTwoFieldFileDetails.bind(this)}\n                                        goodRecordsHeading ={this.state.goodRecordsHeading}\n                                        failedtableHeading={this.state.failedtableHeading}\n                                        fileDetails={this.state.fileDetails}\n                                        \n                                        data={{\"createdBy\" : localStorage.getItem(\"user_ID\") }} \n                                        uploadedData={this.uploadedData} \n\n                                        failedRecordsTable ={this.state.failedRecordsTable}\n                                        failedRecordsCount={this.state.failedRecordsCount}\n                                        goodRecordsTable={this.state.goodRecordsTable}\n                                        goodDataCount={this.state.goodDataCount}\n                                        masterFieldForm = {true}\n                        />\n                    </div>\n                </section>\n            </div>\n\n            /*<div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <TwoFieldForm fields={this.state.fields}\n                          tableHeading={this.state.tableHeading}\n                          tableObjects={this.state.tableObjects}\n                          editId ={this.props.match.params.fieldID}\n                          history={this.props.history} />\n\n            </div>*/\n        );\n    }\n}\nexport default CityClassification;\n\n"]},"metadata":{},"sourceType":"module"}