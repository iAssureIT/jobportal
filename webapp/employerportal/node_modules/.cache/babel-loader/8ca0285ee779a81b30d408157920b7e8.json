{"ast":null,"code":"var _jsxFileName = \"/home/mani/projects/jobportal/webapp/employerportal/src/coreadmin/Master/TwoFieldForm/TwoFieldForm.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport jQuery from 'jquery';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport IAssureTable from '../../IAssureTable/IAssureTable.jsx';\nimport { withRouter } from 'react-router-dom';\nimport OneFieldForm from '../OneFieldForm/OneFieldForm.js';\nimport BulkUpload from \"../BulkUpload/BulkUpload.js\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport './TwoFieldForm.css';\n\nclass TwoFieldForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initMap = () => {\n      this.setState({\n        gmapsLoaded: true\n      });\n    };\n\n    this.handleChangePlaces = address => {\n      var array = {\n        attributeName: address\n      };\n      this.setState({\n        attributeName: address,\n        tripArray: array\n      });\n    };\n\n    this.handleSelectLocation = address => {\n      geocodeByAddress(address).then(results => {\n        for (var i = 0; i < results[0].address_components.length; i++) {\n          for (var b = 0; b < results[0].address_components[i].types.length; b++) {\n            switch (results[0].address_components[i].types[b]) {\n              case 'sublocality_level_1':\n                var area = results[0].address_components[i].long_name;\n                break;\n\n              case 'sublocality_level_2':\n                var area = results[0].address_components[i].long_name;\n                break;\n\n              case 'locality':\n                var city = results[0].address_components[i].long_name;\n                break;\n\n              case 'administrative_area_level_1':\n                var state = results[0].address_components[i].long_name;\n                break;\n\n              case 'country':\n                var country = results[0].address_components[i].long_name;\n                break;\n\n              case 'postal_code':\n                var pincode = results[0].address_components[i].long_name;\n                break;\n            }\n          }\n        }\n      }).catch(error => console.error('Error', error));\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => this.setState({\n        'fromLatLng': latLng\n      })).catch(error => console.error('Error', error));\n      var array = {\n        attributeName: address\n      };\n      this.setState({\n        attributeName: address ? address.split(\",\")[0] : \"\",\n        tripArray: array\n      });\n    };\n\n    this.state = {\n      \"user_ID\": \"\",\n      \"secondField\": \"\",\n      \"secondFieldData\": [],\n      \"selectedIndex\": \"\",\n      \"startRange\": 0,\n      \"limitRange\": 10000,\n      \"editId\": '',\n      gmapsLoaded: false\n    };\n  }\n\n  // getGoogleAPIKey(){\n  //     axios.get(\"/api/projectSettings/get/GOOGLE\",)\n  //     .then((response) => {\n  //         this.setState({\n  //             googleAPIKey : response.data.googleapikey\n  //         },()=>{\n  //             window.initMap = this.initMap\n  //             const gmapScriptEl = document.createElement(`script`)\n  //             gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=`+this.state.googleAPIKey+`&libraries=places&callback=initMap`\n  //             document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl)\n  //         });\n  //     })\n  //     .catch((error) =>{\n  //         swal(error)\n  //     })\n  // }\n  componentDidMount() {\n    // if(this.props.fields.secondAttributeName == \"cityType\"){\n    //  this.getGoogleAPIKey()\n    // }\n    // console.log(\"props = \", this.props);\n    const user_ID = localStorage.getItem(\"user_ID\");\n    this.setState({\n      user_ID: user_ID\n    });\n    this.getData(this.state.startRange, this.state.limitRange);\n    this.getSecondFieldData(this.state.startRange, this.state.limitRange);\n    $.validator.addMethod(\"regxonefield\", function (value, element, regexpr) {\n      return regexpr.test(value);\n    }, \"Please enter valid field value\");\n    jQuery.validator.setDefaults({\n      debug: true,\n      success: \"valid\"\n    });\n    $(\"#twoFieldFormValid\").validate({\n      rules: {\n        selectField: {\n          required: true\n        },\n        textFieldOne: {\n          regxonefield: /^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/,\n          required: true\n        }\n      }\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.editId) {\n      this.edit(nextProps.editId);\n    } else {\n      this.setState({\n        attributeName: \"\",\n        [this.props.fields.secondAttributeName]: \"-- Select --\"\n      }); // console.log(\"nextProps else==>\",nextProps)\n    }\n\n    this.getSecondFieldData(this.state.startRange, this.state.limitRange); // if(this.props.fields.secondAttributeName == \"cityType\"){\n    //  this.getGoogleAPIKey()\n    // }\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      attributeName: event.target.value\n    });\n  }\n\n  handleSelect(event) {\n    event.preventDefault();\n    const target = event.target;\n    var index = event.target.selectedIndex;\n    const id = event.target.options[index].id;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value,\n      \"selectedIndex\": id\n    });\n  }\n\n  submitType(event) {\n    event.preventDefault();\n    var formValues = {\n      \"dropdownID\": this.state.selectedIndex,\n      \"fieldValue\": this.state.attributeName,\n      \"createdBy\": this.state.user_ID\n    };\n\n    if ($('#twoFieldFormValid').valid()) {\n      var postapiurl = this.props.tableObjects.apiLink + \"post\";\n      axios.post(postapiurl, formValues).then(response => {\n        // console.log(\"response = \", response.data);\n        if (response.data.created) {\n          swal(\" \", this.state.attributeName + \" Submitted Successfully\");\n          this.getData(this.state.startRange, this.state.limitRange);\n          this.setState({\n            attributeName: \"\",\n            [this.props.fields.secondAttributeName]: \"-- Select --\"\n          });\n        } else {\n          swal(\" \", this.state.attributeName + \" already exist\");\n        }\n      }).catch(error => {\n        console.log(\"Error in Post API of Two field = \", error);\n      });\n    }\n  }\n\n  updateType(event) {\n    event.preventDefault(); // console.log(\"In Update two field this.props = \",this.props);\n\n    var formValues = {\n      \"fieldID\": this.state.fieldId,\n      \"dropdownID\": this.state.selectedIndex,\n      \"fieldValue\": this.state.attributeName\n    };\n\n    if ($('#twoFieldFormValid').valid()) {\n      axios.patch(this.props.tableObjects.apiLink + 'patch', formValues).then(response => {\n        if (response.data.updated) {\n          swal(\" \", \"Record updated Successfully\");\n          this.setState({\n            attributeName: \"\",\n            [this.props.fields.secondAttributeName]: \"-- Select --\"\n          }, () => {\n            this.getData(this.state.startRange, this.state.limitRange);\n            this.props.history.push(this.props.tableObjects.editUrl);\n          });\n        }\n      }).catch(error => {\n        swal(\" \", \"Failed to Update Record\");\n      });\n    }\n  }\n\n  getDataCount() {\n    axios.get('/api/vendorLocationType/get/count').then(response => {\n      this.setState({\n        dataCount: response.data.dataCount\n      });\n    }).catch(error => {});\n  }\n\n  backtoum() {\n    this.props.history.push(\"/umlistofusers\");\n  }\n\n  getData(startRange, limitRange) {\n    var data = {\n      startRange: startRange,\n      limitRange: limitRange\n    };\n    axios.post(this.props.tableObjects.apiLink + 'get/list', data).then(response => {\n      // console.log(\"response = \",response.data);\n      this.setState({\n        tableData: response.data\n      });\n    }).catch(error => {});\n  }\n\n  getSecondFieldData(startRange, limitRange) {\n    var data = {\n      startRange: startRange,\n      limitRange: limitRange\n    };\n    axios.post(this.props.tableObjects.apiLink2 + 'get/list', data).then(response => {\n      // console.log('=========>',response.data)\n      this.setState({\n        secondFieldData: response.data,\n        secondFieldId: response.data._id\n      });\n    }).catch(error => {});\n  }\n\n  edit(id) {\n    // console.log(\"edit id==>\",id)\n    var fieldName = this.props.fields.attributeName;\n    var secondAttributeId = this.props.fields.secondAttributeId;\n    var secondAttributeName = this.props.fields.secondAttributeName; // console.log(\"secondAttributeId==>\",secondAttributeId)\n\n    axios.get(this.props.tableObjects.apiLink + 'get/one/' + id).then(response => {\n      if (response.data) {\n        // console.log(\"fieldName response.data==>\",response.data)\n        axios.get(this.props.tableObjects.apiLink2 + 'get/one/' + response.data[secondAttributeId]).then(response => {\n          if (response.data) {\n            this.setState({\n              [this.props.fields.secondAttributeName]: response.data[this.props.fields.secondAttributeName],\n              \"selectedIndex\": response.data._id\n            });\n          }\n        }).catch(error => {});\n        this.setState({\n          \"attributeName\": response.data[fieldName],\n          \"fieldId\": response.data._id\n        });\n      }\n    }).catch(error => {});\n  }\n\n  closeModal(event) {\n    event.preventDefault();\n    $(\"#oneField\" + this.props.oneFields.attributeName).hide();\n    $(\".modal-backdrop\").remove();\n    this.props.history.push('/project-master-data');\n  }\n\n  render() {\n    const searchOptions = {\n      types: ['(cities)'],\n      componentRestrictions: {\n        country: \"in\"\n      }\n    };\n    var bulkReq = this.props.bulkRequired ? true : false;\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-header with-border col-lg-12 col-md-12 col-xs-12 col-sm-12 NOpadding-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, this.props.fields.title == \"Roles\" ? React.createElement(\"h4\", {\n      className: \"weighttitle col-lg-10 col-md-10 col-xs-12 col-sm-12 NOpadding-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, this.props.fields.title === \"Location Type\" ? this.props.fields.title + \"s\" : this.props.fields.title, \" \") : React.createElement(\"h4\", {\n      className: \"weighttitle col-lg-9 col-md-9 col-xs-12 col-sm-12 NOpadding-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, this.props.fields.title === \"Location Type\" ? this.props.fields.title + \"s\" : this.props.fields.title, \" \"), this.props.twofieldBulkRequired ? React.createElement(\"ul\", {\n      className: \"nav tabNav nav-pills col-lg-3 col-md-3 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"active col-lg-5 col-md-5 col-xs-5 col-sm-5 NOpadding text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"fieldTab\",\n      \"data-toggle\": \"tab\",\n      href: \"#manual-\" + this.props.fields.attributeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Manual\")), React.createElement(\"li\", {\n      className: \"col-lg-6 col-md-6 col-xs-6 col-sm-6 NOpadding  text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"fieldTab\",\n      \"data-toggle\": \"tab\",\n      href: \"#bulk-\" + this.props.fields.attributeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Bulk Upload\"))) : null, this.props.fields.title == \"Roles\" ? React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-3 col-sm-12 col-xs-12 \",\n      id: \"rolemodalcl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn col-lg-12 col-md-12 col-sm-12 col-xs-12 addexamform userbtn clickforhideshow\",\n      onClick: this.backtoum.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-undo\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"\\xA0\\xA0 Back To UM List\"))) : null), this.props.oneFields ? React.createElement(\"div\", {\n      className: \"modal\",\n      id: \"oneField\" + this.props.oneFields.attributeName,\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"adminModal adminModal-dialog marginTopModal col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content adminModal-content col-lg-8 col-lg-offset-2 col-md-6 col-md-offset-3 col-sm-10 col-sm-offset-1 col-xs-12 noPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header adminModal-header col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"adminCloseCircleDiv pull-right  col-lg-1 col-lg-offset-11 col-md-1 col-md-offset-11 col-sm-1 col-sm-offset-11 col-xs-12 NOpadding-left NOpadding-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"adminCloseButton\",\n      onClick: this.closeModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"div\", {\n      className: \"modal-body adminModal-body OneFieldModal col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(OneFieldForm, {\n      fields: this.props.oneFields,\n      tableHeading: this.props.oneTableHeading,\n      tableObjects: this.props.oneTableObjects,\n      editId: this.props.oneeditId,\n      getSecondFieldData: this.getSecondFieldData.bind(this),\n      bulkRequired: bulkReq,\n      masterFieldForm: true,\n      url: this.props.onefieldurl,\n      fileurl: this.props.onefieldfileurl,\n      data: this.props.data,\n      uploadedData: this.props.oneFielduploadedData,\n      getFileDetails: this.props.getOneFieldFileDetails,\n      fileDetails: this.props.oneFieldfileDetails,\n      goodRecordsHeading: this.props.oneFieldgoodRecordsHeading,\n      failedtableHeading: this.props.oneFieldfailedtableHeading,\n      failedRecordsTable: this.props.oneFieldfailedRecordsTable,\n      failedRecordsCount: this.props.oneFieldfailedRecordsCount,\n      goodRecordsTable: this.props.oneFieldgoodRecordsTable,\n      goodDataCount: this.props.oneFieldgoodDataCount,\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modal-footer adminModal-footer col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    })))) : null, React.createElement(\"section\", {\n      className: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row tab-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"manual-\" + this.props.fields.attributeName,\n      className: \"tab-pane fade in manual active mt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      id: \"twoFieldFormValid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, this.props.oneFields ? React.createElement(\"div\", {\n      className: \"form-margin form-group col-lg-6 col-md-6 col-sm-12 col-xs-12 pdcls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, this.props.fields.secondtitle, \" \", React.createElement(\"i\", {\n      className: \"astrick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"input-group\",\n      id: \"selectField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"addonDiv col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      value: this.state[this.props.fields.secondAttributeName],\n      data_name: \"selectField\",\n      name: this.props.fields.secondAttributeName,\n      onChange: this.handleSelect.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"-- Select --\"), this.state.secondFieldData && this.state.secondFieldData.length > 0 ? this.state.secondFieldData.map((data, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        id: data._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, data[this.props.fields.secondAttributeName]);\n    }) : null), React.createElement(\"div\", {\n      className: \"input-group-addon inputIcon plusIconBooking\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#oneField\" + this.props.oneFields.attributeName,\n      title: \"Add \" + this.props.fields.secondtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    })))) : React.createElement(\"div\", {\n      className: \"form-margin form-group col-lg-6 col-md-6 col-sm-12 col-xs-12 pdcls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      id: \"selectField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, this.props.fields.secondtitle, \" \", React.createElement(\"i\", {\n      className: \"astrick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"select\", {\n      className: \"addonDiv col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      value: this.state[this.props.fields.secondAttributeName],\n      data_name: \"selectField\",\n      name: this.props.fields.secondAttributeName,\n      onChange: this.handleSelect.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, \"-- Select --\"), this.state.secondFieldData && this.state.secondFieldData.length > 0 ? this.state.secondFieldData.map((data, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        id: data._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, data[this.props.fields.secondAttributeName]);\n    }) : null))), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6  col-md-6 col-sm-12 col-xs-12 pdcls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"textFieldOne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, this.props.fields.title, \" \", React.createElement(\"i\", {\n      className: \"astrick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, \"*\")), this.props.fields.secondAttributeName == \"cityType\" ? React.createElement(PlacesAutocomplete, {\n      value: this.state.attributeName,\n      onChange: this.handleChangePlaces,\n      onSelect: this.handleSelectLocation,\n      searchOptions: searchOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: 'Search cities ...',\n      className: 'location-search-input col-lg-12 form-control'\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, suggestion.description ? suggestion.description.split(\",\")[0] : \"\"));\n    })))) : React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      value: this.state.attributeName,\n      ref: this.props.fields.attributeName,\n      name: \"attributeName\",\n      onChange: this.handleChange.bind(this),\n      placeholder: this.props.fields.placeholder,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-margin col-lg-6 col-lg-offset-6 col-md-6 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, this.props.editId ? React.createElement(\"button\", {\n      onClick: this.updateType.bind(this),\n      className: \"btn button3 pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, \"Update\") : React.createElement(\"button\", {\n      onClick: this.submitType.bind(this),\n      className: \"btn button3 pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"div\", {\n      className: \"oneFieldTable col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, React.createElement(IAssureTable, {\n      tableHeading: this.props.tableHeading,\n      twoLevelHeader: this.state.twoLevelHeader,\n      dataCount: this.state.dataCount,\n      tableData: this.state.tableData,\n      getData: this.getData.bind(this),\n      tableObjects: this.props.tableObjects,\n      getSecondFieldData: this.getSecondFieldData.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"bulk-\" + this.props.fields.attributeName,\n      className: \"tab-pane fade in bulk col-lg-12 col-md-12 col-sm-12 col-xs-12 mt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"outerForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(BulkUpload, {\n      url: this.props.url,\n      data: this.props.data,\n      uploadedData: this.props.uploadedData,\n      fileurl: this.props.twofieldfileurl,\n      getFileDetails: this.props.getTwoFieldFileDetails,\n      getData: this.getData.bind(this),\n      fileDetails: this.props.fileDetails,\n      goodRecordsHeading: this.props.goodRecordsHeading,\n      failedtableHeading: this.props.failedtableHeading,\n      failedRecordsTable: this.props.failedRecordsTable,\n      failedRecordsCount: this.props.failedRecordsCount,\n      goodRecordsTable: this.props.goodRecordsTable,\n      goodDataCount: this.props.goodDataCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default TwoFieldForm;","map":{"version":3,"sources":["/home/mani/projects/jobportal/webapp/employerportal/src/coreadmin/Master/TwoFieldForm/TwoFieldForm.js"],"names":["React","Component","$","jQuery","axios","swal","IAssureTable","withRouter","OneFieldForm","BulkUpload","PlacesAutocomplete","geocodeByAddress","getLatLng","TwoFieldForm","constructor","props","initMap","setState","gmapsLoaded","handleChangePlaces","address","array","attributeName","tripArray","handleSelectLocation","then","results","i","address_components","length","b","types","area","long_name","city","state","country","pincode","catch","error","console","latLng","split","componentDidMount","user_ID","localStorage","getItem","getData","startRange","limitRange","getSecondFieldData","validator","addMethod","value","element","regexpr","test","setDefaults","debug","success","validate","rules","selectField","required","textFieldOne","regxonefield","componentWillReceiveProps","nextProps","editId","edit","fields","secondAttributeName","handleChange","event","preventDefault","target","name","handleSelect","index","selectedIndex","id","options","submitType","formValues","valid","postapiurl","tableObjects","apiLink","post","response","data","created","log","updateType","fieldId","patch","updated","history","push","editUrl","getDataCount","get","dataCount","backtoum","tableData","apiLink2","secondFieldData","secondFieldId","_id","fieldName","secondAttributeId","closeModal","oneFields","hide","remove","render","searchOptions","componentRestrictions","bulkReq","bulkRequired","title","twofieldBulkRequired","bind","oneTableHeading","oneTableObjects","oneeditId","onefieldurl","onefieldfileurl","oneFielduploadedData","getOneFieldFileDetails","oneFieldfileDetails","oneFieldgoodRecordsHeading","oneFieldfailedtableHeading","oneFieldfailedRecordsTable","oneFieldfailedRecordsCount","oneFieldgoodRecordsTable","oneFieldgoodDataCount","secondtitle","map","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","suggestion","active","style","backgroundColor","cursor","description","tableHeading","twoLevelHeader","url","uploadedData","twofieldfileurl","getTwoFieldFileDetails","fileDetails","goodRecordsHeading","failedtableHeading","failedRecordsTable","failedRecordsCount","goodRecordsTable","goodDataCount"],"mappings":"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","sourcesContent":["import React, { Component }     from 'react';\nimport $                        from 'jquery';\nimport jQuery                   from 'jquery';\nimport axios                    from 'axios';\nimport swal                     from 'sweetalert';\nimport IAssureTable             from '../../IAssureTable/IAssureTable.jsx';\nimport { withRouter }           from 'react-router-dom';\nimport OneFieldForm             from '../OneFieldForm/OneFieldForm.js';\nimport BulkUpload               from \"../BulkUpload/BulkUpload.js\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nimport './TwoFieldForm.css'\n\nclass TwoFieldForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"user_ID\"              : \"\",\n            \"secondField\"          : \"\",\n            \"secondFieldData\"      : [], \n            \"selectedIndex\"        : \"\",\n            \"startRange\"           : 0,\n            \"limitRange\"           : 10000,\n            \"editId\"               :  '',\n            gmapsLoaded: false,\n        };\n    }\n    initMap = () => {\n      this.setState({\n        gmapsLoaded: true,\n      })\n    }\n\n    // getGoogleAPIKey(){\n    //     axios.get(\"/api/projectSettings/get/GOOGLE\",)\n    //     .then((response) => {\n    //         this.setState({\n    //             googleAPIKey : response.data.googleapikey\n    //         },()=>{\n    //             window.initMap = this.initMap\n    //             const gmapScriptEl = document.createElement(`script`)\n    //             gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=`+this.state.googleAPIKey+`&libraries=places&callback=initMap`\n    //             document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl)\n    //         });\n    //     })\n    //     .catch((error) =>{\n    //         swal(error)\n    //     })\n    // }\n    componentDidMount() {\n        // if(this.props.fields.secondAttributeName == \"cityType\"){\n        //  this.getGoogleAPIKey()\n        // }\n        // console.log(\"props = \", this.props);\n        const user_ID = localStorage.getItem(\"user_ID\")\n        this.setState({\n            user_ID : user_ID,\n        })\n        this.getData(this.state.startRange, this.state.limitRange);\n        this.getSecondFieldData(this.state.startRange, this.state.limitRange);\n        \n        $.validator.addMethod(\"regxonefield\", function (value, element, regexpr) {\n          return regexpr.test(value);\n        }, \"Please enter valid field value\");\n        \n        jQuery.validator.setDefaults({\n          debug: true,\n          success: \"valid\"\n        });\n        $(\"#twoFieldFormValid\").validate({\n        rules: {\n            selectField: {\n              required: true,\n            },\n            textFieldOne: {\n              regxonefield  :/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/,\n              required: true,\n            },\n        },\n       \n        });\n    }\n   \n    componentWillReceiveProps(nextProps) {\n        if(nextProps.editId)\n        {\n            this.edit(nextProps.editId);\n        }\n        else{\n            this.setState({\n                attributeName                              : \"\",\n                [this.props.fields.secondAttributeName]    : \"-- Select --\"\n            })\n            // console.log(\"nextProps else==>\",nextProps)\n        }\n        this.getSecondFieldData(this.state.startRange, this.state.limitRange);\n\n        // if(this.props.fields.secondAttributeName == \"cityType\"){\n        //  this.getGoogleAPIKey()\n        // }\n    }\n    handleChange(event) {\n        event.preventDefault();\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            attributeName : event.target.value\n        });\n    }\n    handleSelect(event){\n        event.preventDefault();\n        const target = event.target;\n        var index = event.target.selectedIndex\n        const id = event.target.options[index].id;\n\n        const name = target.name;\n        this.setState({\n            [name] : event.target.value,\n            \"selectedIndex\" : id,\n        });\n    }\n    submitType(event) {\n        event.preventDefault();\n\n        var formValues ={ \n            \"dropdownID\"       : this.state.selectedIndex,\n            \"fieldValue\"       : this.state.attributeName,\n            \"createdBy\"        : this.state.user_ID\n        }\n         if ($('#twoFieldFormValid').valid()) {\n            var postapiurl = this.props.tableObjects.apiLink+\"post\";\n            axios.post(postapiurl, formValues)\n                .then((response) => {\n                    // console.log(\"response = \", response.data);\n\n                    if (response.data.created) {\n                        swal(\" \",this.state.attributeName+\" Submitted Successfully\");\n                        this.getData(this.state.startRange, this.state.limitRange);\n                        this.setState({\n                           attributeName    : \"\",\n                           [this.props.fields.secondAttributeName]            : \"-- Select --\"\n                         })\n\n                    }else{\n                        swal(\" \",this.state.attributeName+\" already exist\");\n                    }\n                })\n                .catch((error) => {\n                    console.log(\"Error in Post API of Two field = \",error);\n                })\n         }      \n    }\n    updateType(event) {\n        event.preventDefault();\n        // console.log(\"In Update two field this.props = \",this.props);\n        var formValues ={\n                \"fieldID\"       : this.state.fieldId,\n                \"dropdownID\"    : this.state.selectedIndex,\n                \"fieldValue\"    : this.state.attributeName,\n            }\n        if ($('#twoFieldFormValid').valid()) {\n            axios.patch(this.props.tableObjects.apiLink+'patch', formValues)\n                .then((response) => {\n                    if(response.data.updated){\n                        swal(\" \",\"Record updated Successfully\");\n                        this.setState({\n                            attributeName                           : \"\",\n                           [this.props.fields.secondAttributeName]  : \"-- Select --\",\n                        },()=>{\n                            this.getData(this.state.startRange, this.state.limitRange);\n                            this.props.history.push(this.props.tableObjects.editUrl);\n                        })\n                    }                    \n                })\n                .catch((error) => {\n                    swal(\" \",\"Failed to Update Record\");\n                })\n        }       \n    }\n    getDataCount() {\n        axios.get('/api/vendorLocationType/get/count')\n            .then((response) => {\n                this.setState({\n                    dataCount: response.data.dataCount\n                })\n            })\n            .catch((error) => {\n                \n            });\n    }\n    backtoum() {\n        this.props.history.push(\"/umlistofusers\")\n    }\n    getData(startRange, limitRange) {\n        var data = {\n            startRange: startRange,\n            limitRange: limitRange\n        }\n        axios.post(this.props.tableObjects.apiLink+'get/list', data)\n            .then((response) => {\n                // console.log(\"response = \",response.data);\n                this.setState({\n                    tableData: response.data\n                })\n            })\n            .catch((error) => {          \n            });\n    }\n    getSecondFieldData(startRange, limitRange) {\n        var data = {\n            startRange: startRange,\n            limitRange: limitRange\n        }\n        axios.post(this.props.tableObjects.apiLink2+'get/list', data)\n            .then((response) => {\n                // console.log('=========>',response.data)\n                this.setState({\n                    secondFieldData: response.data,\n                    secondFieldId: response.data._id\n                })\n            })\n            .catch((error) => {         \n            });\n    }\n    edit(id) {\n        // console.log(\"edit id==>\",id)\n        var fieldName = this.props.fields.attributeName;\n        var secondAttributeId = this.props.fields.secondAttributeId;\n        var secondAttributeName = this.props.fields.secondAttributeName;\n\n        // console.log(\"secondAttributeId==>\",secondAttributeId)\n        axios.get(this.props.tableObjects.apiLink+'get/one/' + id)\n            .then((response) => {\n                if (response.data) {\n                    // console.log(\"fieldName response.data==>\",response.data)\n\n                    axios.get(this.props.tableObjects.apiLink2+'get/one/' + response.data[secondAttributeId])\n                        .then((response) => {\n                           if (response.data) {\n                                this.setState({\n                                    [this.props.fields.secondAttributeName] : response.data[this.props.fields.secondAttributeName],\n                                    \"selectedIndex\"     : response.data._id\n                                });\n                            }\n                        })\n                    .catch((error) => {\n                    });\n                    this.setState({\n                        \"attributeName\"     : response.data[fieldName],\n                        \"fieldId\"           : response.data._id\n                    });\n                }\n            })\n        .catch((error) => {\n        });\n    }\n    handleChangePlaces = address => {\n      var array = {\n          attributeName    : address,\n       }\n    this.setState({ attributeName : address, tripArray : array });\n    };\n    handleSelectLocation = address => {\n    geocodeByAddress(address)\n     .then((results) =>{ \n\n      for (var i = 0; i < results[0].address_components.length; i++) {\n          for (var b = 0; b < results[0].address_components[i].types.length; b++) {\n              switch (results[0].address_components[i].types[b]) {\n                  case 'sublocality_level_1':\n                      var area = results[0].address_components[i].long_name;\n                      break;\n                  case 'sublocality_level_2':\n                      var area = results[0].address_components[i].long_name;\n                      break;\n                  case 'locality':\n                      var city = results[0].address_components[i].long_name;\n                      break;\n                  case 'administrative_area_level_1':\n                      var state = results[0].address_components[i].long_name;\n                      break;\n                  case 'country':\n                     var country = results[0].address_components[i].long_name;\n                      break;\n                  case 'postal_code':\n                     var pincode = results[0].address_components[i].long_name;\n                      break;\n              }\n          }\n        }\n    })\n    .catch(error => console.error('Error', error));\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => this.setState({'fromLatLng': latLng}))\n      .catch(error => console.error('Error', error));\n      var array = {\n          attributeName    : address,\n        }\n      this.setState({ attributeName : address ? address.split(\",\")[0] :\"\" , tripArray : array });\n    };\n\n    closeModal(event){\n        event.preventDefault();\n        $(\"#oneField\"+this.props.oneFields.attributeName).hide(); \n        $(\".modal-backdrop\").remove();\n        this.props.history.push('/project-master-data')\n    }\n\n\n    render() {\n      const searchOptions = {\n          types: ['(cities)'],\n          componentRestrictions: {country: \"in\"}\n        }\n        var bulkReq = this.props.bulkRequired ? true : false \n        return (\n            <div className=\"row\">\n                <div className=\"box-header with-border col-lg-12 col-md-12 col-xs-12 col-sm-12 NOpadding-right\">\n                    {\n                        this.props.fields.title == \"Roles\" ?\n                            <h4 className=\"weighttitle col-lg-10 col-md-10 col-xs-12 col-sm-12 NOpadding-right\">{this.props.fields.title === \"Location Type\"? this.props.fields.title+\"s\" : this.props.fields.title } </h4>\n                        :\n                            <h4 className=\"weighttitle col-lg-9 col-md-9 col-xs-12 col-sm-12 NOpadding-right\">{this.props.fields.title === \"Location Type\"? this.props.fields.title+\"s\" : this.props.fields.title } </h4>\n                    }\n                    {\n                        this.props.twofieldBulkRequired ?\n                            <ul className=\"nav tabNav nav-pills col-lg-3 col-md-3 col-sm-12 col-xs-12\">\n                                <li className=\"active col-lg-5 col-md-5 col-xs-5 col-sm-5 NOpadding text-center\">\n                                    <a className=\"fieldTab\" data-toggle=\"tab\" href={\"#manual-\"+this.props.fields.attributeName}>Manual</a>\n                                </li>\n                                <li className=\"col-lg-6 col-md-6 col-xs-6 col-sm-6 NOpadding  text-center\">\n                                    <a className=\"fieldTab\" data-toggle=\"tab\" href={\"#bulk-\"+this.props.fields.attributeName}>Bulk Upload</a>\n                                </li>\n                            </ul>\n                        : null \n                    }\n                     {\n                        this.props.fields.title == \"Roles\" ?\n                            <div className=\"col-lg-2 col-md-3 col-sm-12 col-xs-12 \" id=\"rolemodalcl\">\n                                <button type=\"button\" className=\"btn col-lg-12 col-md-12 col-sm-12 col-xs-12 addexamform userbtn clickforhideshow\"\n                                    onClick={this.backtoum.bind(this)}\n                                >\n                                    <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>\n                                    <b>&nbsp;&nbsp; Back To UM List</b>\n                                </button>\n                            </div>\n                            :\n                            null\n                    }\n                </div>\n                {   \n                    this.props.oneFields ?  \n\n                        <div className=\"modal\" id={\"oneField\"+this.props.oneFields.attributeName} role=\"dialog\">\n                          <div className=\"adminModal adminModal-dialog marginTopModal col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"modal-content adminModal-content col-lg-8 col-lg-offset-2 col-md-6 col-md-offset-3 col-sm-10 col-sm-offset-1 col-xs-12 noPadding\">\n                              <div className=\"modal-header adminModal-header col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                <div className=\"adminCloseCircleDiv pull-right  col-lg-1 col-lg-offset-11 col-md-1 col-md-offset-11 col-sm-1 col-sm-offset-11 col-xs-12 NOpadding-left NOpadding-right\">\n                                    <button type=\"button\" className=\"adminCloseButton\" onClick={this.closeModal.bind(this)}>&times;</button>\n                               </div>\n                              </div>\n                            <div className=\"modal-body adminModal-body OneFieldModal col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                <OneFieldForm fields={this.props.oneFields}\n                                    tableHeading={this.props.oneTableHeading}\n                                    tableObjects={this.props.oneTableObjects}\n                                    editId ={this.props.oneeditId}\n                                    getSecondFieldData={this.getSecondFieldData.bind(this)}\n                                    bulkRequired = {bulkReq}\n                                    masterFieldForm = {true}\n\n                                    url ={this.props.onefieldurl}\n                                    fileurl ={this.props.onefieldfileurl}\n                                    data ={this.props.data}\n                                    uploadedData ={this.props.oneFielduploadedData}\n                                    getFileDetails ={this.props.getOneFieldFileDetails}\n                                    fileDetails ={this.props.oneFieldfileDetails}\n                                    goodRecordsHeading ={this.props.oneFieldgoodRecordsHeading}\n                                    failedtableHeading ={this.props.oneFieldfailedtableHeading}\n                                    failedRecordsTable ={this.props.oneFieldfailedRecordsTable}\n                                    failedRecordsCount ={this.props.oneFieldfailedRecordsCount}\n                                    goodRecordsTable ={this.props.oneFieldgoodRecordsTable}\n                                    goodDataCount ={this.props.oneFieldgoodDataCount}\n                                    history={this.props.history}\n                                   />\n                            </div>\n                            <div className=\"modal-footer adminModal-footer col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                {/*<div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n                                                                    <button type=\"button\" className=\"btn adminCancel-btn col-lg-7 col-lg-offset-1 col-md-4 col-md-offset-1 col-sm-8 col-sm-offset-1 col-xs-10 col-xs-offset-1\" data-dismiss=\"modal\" >CANCEL</button>\n                                                                </div>*/}\n                            </div>\n                            </div>\n                          </div>\n                        </div>\n                    :null\n                }\n                <section className=\"Content\">\n                    <div className=\"row tab-content\">\n                        <div id={\"manual-\"+this.props.fields.attributeName} className=\"tab-pane fade in manual active mt\">\n                            <form className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\" id=\"twoFieldFormValid\" >\n                                {\n                                    this.props.oneFields ? \n                                        <div className=\"form-margin form-group col-lg-6 col-md-6 col-sm-12 col-xs-12 pdcls\" >\n                                            <label className=\"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding-left\">{this.props.fields.secondtitle} <i className=\"astrick\">*</i></label>\n                                            <div className=\"input-group\" id=\"selectField\" >\n                                                <select className=\"addonDiv col-lg-12 col-md-12 col-sm-12 col-xs-12\" value={this.state[this.props.fields.secondAttributeName]} data_name =\"selectField\" name={this.props.fields.secondAttributeName} onChange={this.handleSelect.bind(this)} required>\n                                                    <option selected={true} disabled={true}>-- Select --</option>\n                                                    {\n                                                    this.state.secondFieldData && this.state.secondFieldData.length > 0 ?\n                                                      this.state.secondFieldData.map((data, index)=>{\n                                                        return(\n                                                            <option key={index} id={data._id}>{data[this.props.fields.secondAttributeName]}</option>\n                                                        );\n                                                      })\n                                                    :\n                                                    null\n                                                    }\n                                                   \n                                                </select>\n                                                <div className=\"input-group-addon inputIcon plusIconBooking\" data-toggle=\"modal\"  data-target={\"#oneField\"+this.props.oneFields.attributeName} title={\"Add \"+this.props.fields.secondtitle} ><i className=\"fa fa-plus \"></i>\n                                                </div>\n                                               \n                                            </div>\n                                        </div>\n                                    :\n                                    <div className=\"form-margin form-group col-lg-6 col-md-6 col-sm-12 col-xs-12 pdcls\" >\n                                        <div className=\"\" id=\"selectField\" >\n                                            <label className=\"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding-left\">{this.props.fields.secondtitle} <i className=\"astrick\">*</i></label>\n                                            <select className=\"addonDiv col-lg-12 col-md-12 col-sm-12 col-xs-12\" value={this.state[this.props.fields.secondAttributeName]} data_name =\"selectField\" name={this.props.fields.secondAttributeName} onChange={this.handleSelect.bind(this)} required>\n                                                <option selected={true} disabled={true}>-- Select --</option>\n                                                {\n                                                this.state.secondFieldData && this.state.secondFieldData.length > 0 ?\n                                                  this.state.secondFieldData.map((data, index)=>{\n                                                    return(\n                                                        <option  key={index} id={data._id}>{data[this.props.fields.secondAttributeName]}</option>\n                                                    );\n                                                  })\n                                                :\n                                                null\n                                                }\n                                               \n                                            </select>\n                                        </div>\n                                    </div>\n                                }\n\n                                <div className=\"form-margin col-lg-6  col-md-6 col-sm-12 col-xs-12 pdcls\">\n                                    <div  id=\"textFieldOne\">\n                                       {/*{console.log(\"this.props.fields.secondAttributeName\",this.props.fields.secondAttributeName)}*/}\n                                        <label className=\"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding-left\">{this.props.fields.title} <i className=\"astrick\">*</i></label>\n                                        {this.props.fields.secondAttributeName == \"cityType\" ?\n                                            <PlacesAutocomplete\n                                                value={this.state.attributeName}\n                                                onChange={this.handleChangePlaces}\n                                                onSelect={this.handleSelectLocation}\n                                                searchOptions={searchOptions}\n\n                                              >\n                                                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                                                  <div>\n                                                    <input\n                                                      {...getInputProps({\n                                                        placeholder: 'Search cities ...',\n                                                        className: 'location-search-input col-lg-12 form-control',\n                                                      })}\n                                                    />\n                                                    <div className=\"autocomplete-dropdown-container\">\n                                                      {loading && <div>Loading...</div>}\n                                                      {suggestions.map(suggestion => {\n                                                        const className = suggestion.active\n                                                          ? 'suggestion-item--active'\n                                                          : 'suggestion-item';\n                                                        // inline style for demonstration purpose\n                                                        const style = suggestion.active\n                                                          ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                                          : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                                        return (\n                                                          <div\n                                                            {...getSuggestionItemProps(suggestion, {\n                                                              className,\n                                                              style,\n                                                            })}\n                                                          >\n                                                            {/*<span>{suggestion.description}</span>*/}\n                                                        <span>{(suggestion.description ? suggestion.description.split(\",\")[0]:\"\")}</span>\n\n                                                          </div>\n                                                        );\n                                                      })}\n                                                    </div>\n                                                  </div>\n                                                )}\n                                            </PlacesAutocomplete>\n                                              :\n                                            <input type=\"text\"  className=\"form-control col-lg-12 col-md-12 col-sm-12 col-xs-12\" value={this.state.attributeName} ref={this.props.fields.attributeName} name=\"attributeName\" onChange={this.handleChange.bind(this)} placeholder={this.props.fields.placeholder} required />\n                                        }\n                                    </div>\n                                </div>\n                                <br />\n                                <div className=\"form-margin col-lg-6 col-lg-offset-6 col-md-6 col-sm-12 col-xs-12\">\n\n                                    {this.props.editId ?\n                                        <button onClick={this.updateType.bind(this)} className=\"btn button3 pull-right\">Update</button>\n                                        :\n                                        <button onClick={this.submitType.bind(this)} className=\"btn button3 pull-right\">Submit</button>\n                                    }\n                                </div>\n                            </form> \n                            <div className=\"oneFieldTable col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                <IAssureTable\n                                    tableHeading={this.props.tableHeading}\n                                    twoLevelHeader={this.state.twoLevelHeader}\n                                    dataCount={this.state.dataCount}\n                                    tableData={this.state.tableData}\n                                    getData={this.getData.bind(this)}\n                                    tableObjects={this.props.tableObjects}\n                                    getSecondFieldData={this.getSecondFieldData.bind(this)}\n                                />\n                            </div>\n                        </div>\n                        <div id={\"bulk-\"+this.props.fields.attributeName} className=\"tab-pane fade in bulk col-lg-12 col-md-12 col-sm-12 col-xs-12 mt\">\n                            <div className=\"outerForm\">\n                                <BulkUpload \n                                    url ={this.props.url}\n                                    data ={this.props.data}\n                                    uploadedData ={this.props.uploadedData}\n                                    fileurl ={this.props.twofieldfileurl}\n                                    getFileDetails ={this.props.getTwoFieldFileDetails}\n                                    getData={this.getData.bind(this)}\n                                    fileDetails ={this.props.fileDetails}\n                                    goodRecordsHeading ={this.props.goodRecordsHeading}\n                                    failedtableHeading ={this.props.failedtableHeading}\n                                    failedRecordsTable ={this.props.failedRecordsTable}\n                                    failedRecordsCount ={this.props.failedRecordsCount}\n                                    goodRecordsTable ={this.props.goodRecordsTable}\n                                    goodDataCount ={this.props.goodDataCount}\n                                    />\n\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n\n\n        \n        );\n    }\n}\nexport default TwoFieldForm;\n\n"]},"metadata":{},"sourceType":"module"}