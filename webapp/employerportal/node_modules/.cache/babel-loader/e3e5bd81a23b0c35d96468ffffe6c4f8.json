{"ast":null,"code":"var _jsxFileName = \"/home/mani/projects/jobportal/webapp/employerportal/src/coreadmin/AccessManagement/AccessManagement.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport jQuery from 'jquery';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport _ from 'underscore';\nimport moment from 'moment';\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-react-dropdowns/styles/material.css\";\nimport { CheckBoxSelection, Inject, MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';\nimport \"./AccessManagement.css\";\nimport UMaddRoles from '../userManagement/Roles/UMaddRoles.jsx';\n\nclass AccessManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rolesArray: [],\n      allModules: [],\n      selectedRoles: []\n    };\n  }\n\n  componentDidMount() {\n    this.getRoles();\n    this.getFacilitiesWithModules();\n    axios.get('/api/accessmaster/get').then(response => {\n      this.setState({\n        accessArray: response.data\n      });\n      var selectedRoles = [];\n\n      for (var i = 0; i < response.data.length; i++) {\n        if (response.data[i].role !== 'authuser' && response.data[i].role !== 'admin') {\n          selectedRoles.push(response.data[i].role);\n        }\n\n        for (var k = 0; k < response.data[i].module.length; k++) {\n          console.log(\"selectedRoles\", selectedRoles);\n          this.setState({\n            selectedRoles: selectedRoles,\n            [(response.data[i].module[k].module + response.data[i].role).split(' ').join('_')]: true,\n            [(response.data[i].module[k].facility + response.data[i].role).split(' ').join('_')]: true\n          });\n        } //this.setState({[response.data[i].getAttribute(\"data-facilityroleref\")] : true})\n\n      }\n\n      this.dropDownListObject.value = selectedRoles;\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  getRoles() {\n    axios.get('/api/roles/get/list').then(response => {\n      var rolesArray = [];\n      response.data.map((data, ind) => {\n        if (data.role !== \"admin\") {\n          rolesArray.push({\n            id: data._id,\n            role: data.role\n          });\n        }\n\n        $(\"#addRoleModal\").hide();\n        $(\".modal-backdrop\").remove();\n      });\n      this.setState({\n        rolesArray: rolesArray\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  getFacilitiesWithModules() {\n    axios.get('/api/modulemaster/get/groupbylist').then(response => {\n      this.setState({\n        allModules: response.data\n      });\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n\n  handleChangeRoles(event) {\n    console.log(event.value);\n    this.setState({\n      selectedRoles: event.value\n    });\n  }\n\n  selectFacility(event) {\n    var moduleroleref = event.target.getAttribute(\"data-moduleroleref\");\n    var facilityroleref = event.target.getAttribute(\"data-facilityroleref\");\n\n    if (event.target.getAttribute(\"data-role\") === \"authuser\") {\n      //console.log((event.target.value+\"admin\").split(' ').join('_'));\n      event.target.checked ? this.setState({\n        [(event.target.value + \"admin\").split(' ').join('_')]: true\n      }) : this.setState({\n        [(event.target.value + \"admin\").split(' ').join('_')]: false\n      });\n\n      for (var key in this.state.selectedRoles) {\n        console.log(this.state.selectedRoles[key]);\n        event.target.checked ? this.setState({\n          [(event.target.value + this.state.selectedRoles[key]).split(' ').join('_')]: true\n        }) : this.setState({\n          [(event.target.value + this.state.selectedRoles[key]).split(' ').join('_')]: false\n        });\n      }\n    }\n\n    event.target.checked ? this.setState({\n      [facilityroleref]: true,\n      [moduleroleref]: true\n    }) : this.setState({\n      [facilityroleref]: false,\n      [moduleroleref]: true\n    });\n  }\n\n  onModuleChange(event) {\n    console.log(this.state.selectedRoles);\n\n    if (event.target.getAttribute(\"data-role\") === \"authuser\") {\n      //console.log((event.target.value+\"admin\").split(' ').join('_'));\n      event.target.checked ? this.setState({\n        [(event.target.value + \"admin\").split(' ').join('_')]: true\n      }) : this.setState({\n        [(event.target.value + \"admin\").split(' ').join('_')]: false\n      });\n\n      for (var key in this.state.selectedRoles) {\n        console.log(this.state.selectedRoles[key]);\n        event.target.checked ? this.setState({\n          [(event.target.value + this.state.selectedRoles[key]).split(' ').join('_')]: true\n        }) : this.setState({\n          [(event.target.value + this.state.selectedRoles[key]).split(' ').join('_')]: false\n        });\n      }\n    }\n\n    var moduleroleref = event.target.getAttribute(\"data-moduleroleref\");\n    event.target.checked ? this.setState({\n      [moduleroleref]: true\n    }) : this.setState({\n      [moduleroleref]: false\n    });\n    var FacilityObject = document.querySelectorAll(\"#\" + moduleroleref); //console.log(FacilityObject)\n\n    if (event.target.checked) {\n      for (var i = 0; i < FacilityObject.length; i++) {\n        console.log(FacilityObject[i].getAttribute(\"data-facilityroleref\"));\n        this.setState({\n          [FacilityObject[i].getAttribute(\"data-facilityroleref\")]: true\n        });\n      }\n    } else {\n      for (var i = 0; i < FacilityObject.length; i++) {\n        console.log(FacilityObject[i].getAttribute(\"data-facilityroleref\"));\n        this.setState({\n          [FacilityObject[i].getAttribute(\"data-facilityroleref\")]: false\n        });\n      }\n    }\n  }\n\n  submitData(event) {\n    event.preventDefault(); // access : {\n    //     role:\n    //     modules: [{m1,sm1},{m1,sm2}]\n    // }\n\n    var checkedElem = $(\"input[type='checkbox']:checked\");\n    var selectedRoles = [];\n    var access = [];\n\n    for (var i = 0; i < checkedElem.length; i++) {\n      selectedRoles.push(checkedElem[i].getAttribute('data-role'));\n    }\n\n    selectedRoles = _.uniq(selectedRoles); //console.log('selectedRoles',selectedRoles)\n\n    for (var i = 0; i < selectedRoles.length; i++) {\n      var modulesArray = [];\n      var roleWiseModule = $('[data-role=\"' + selectedRoles[i] + '\"]:checked');\n\n      for (var j = 0; j < roleWiseModule.length; j++) {\n        console.log('roleWiseModule', roleWiseModule[j]); //console.log('roleWiseModule',roleWiseModule[j].getAttribute('name') )\n\n        if (roleWiseModule[j].getAttribute('name') === 'facility') {\n          modulesArray.push({\n            module: roleWiseModule[j].getAttribute('data-module'),\n            facility: roleWiseModule[j].value\n          });\n        } else if (roleWiseModule[j].getAttribute('name') === 'module') {\n          modulesArray.push({\n            module: roleWiseModule[j].value\n          });\n        }\n      }\n\n      access.push({\n        role: selectedRoles[i],\n        module: modulesArray\n      }); //console.log('modulesArray',modulesArray)\n    }\n\n    access[\"createdBy\"] = localStorage.getItem(\"user_ID\");\n    console.log('access', access);\n    axios.post('/api/accessmaster/post', access).then(response => {\n      swal(\"Access for roles are defined\");\n    }).catch(error => {});\n  }\n\n  render() {\n    console.log(this.state);\n    const rolesfields = {\n      text: 'role',\n      value: 'role'\n    };\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pageContent col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-header with-border col-lg-12 col-md-12 col-xs-12 col-sm-12 NOpadding-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"weighttitle col-lg-11 col-md-11 col-xs-11 col-sm-11 NOpadding-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Access Management\")), React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      id: \"ContractManagement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 nopadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-12 col-xs-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"col-lg-12 col-md-2 col-sm-12 col-xs-12 btn button3\",\n      id: \"addRole\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addRoleModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Create Role\")), React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-12 col-xs-12 col-sm-12 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"col-lg-12 col-md-2 col-sm-12 col-xs-12 btn button3\",\n      id: \"addRole\",\n      href: \"/umlistofusers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Create User\"))), React.createElement(\"div\", {\n      className: \"col-lg-3 col-md-12 col-xs-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12 NOpadding-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Roles\"), React.createElement(MultiSelectComponent, {\n      id: \"categoryChange\",\n      ref: scope => {\n        this.dropDownListObject = scope;\n      },\n      dataSource: this.state.rolesArray,\n      change: this.handleChangeRoles.bind(this),\n      mode: \"box\",\n      fields: rolesfields,\n      placeholder: \"Select Roles\",\n      mode: \"CheckBox\",\n      selectAllText: \"Select All\",\n      unSelectAllText: \"Unselect All\",\n      showSelectAll: true,\n      hideSelectedItem: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Inject, {\n      services: [CheckBoxSelection],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-xs-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table textAlignLeft AccessManagementTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"col\", {\n      width: \"60\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Sr.No.\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"List of Modules & Facilities\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Authenticated User\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Admin\"), this.state.selectedRoles && this.state.selectedRoles.map((selRole, ind) => {\n      return React.createElement(\"th\", {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, selRole);\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.state.allModules.map((data, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, index + 1)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, data.modules[0].moduleName, data.modules[0].facility.map((fc, ind) => {\n        return React.createElement(\"ul\", {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, fc.facility));\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"checkboxLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: data.modules[0].moduleName,\n        checked: this.state[(data.modules[0].moduleName + \"authuser\").split(' ').join('_')],\n        name: \"module\",\n        \"data-role\": \"authuser\",\n        \"data-moduleroleref\": (data.modules[0].moduleName + \"authuser\").split(' ').join('_'),\n        onChange: this.onModuleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      })), data.modules[0].facility.map((fc, ind) => {\n        return React.createElement(\"tr\", {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"checkboxLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          id: (data.modules[0].moduleName + \"authuser\").split(' ').join('_'),\n          onChange: this.selectFacility.bind(this),\n          \"data-role\": \"authuser\",\n          \"data-module\": data.modules[0].moduleName,\n          value: fc.facility,\n          \"data-facilityroleref\": (fc.facility + \"authuser\").split(' ').join('_'),\n          \"data-moduleroleref\": (data.modules[0].moduleName + \"authuser\").split(' ').join('_'),\n          name: \"facility\",\n          checked: this.state[(fc.facility + \"authuser\").split(' ').join('_')],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        })));\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"checkboxLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: data.modules[0].moduleName,\n        checked: this.state[(data.modules[0].moduleName + \"admin\").split(' ').join('_')],\n        name: \"module\",\n        \"data-role\": \"admin\",\n        \"data-moduleroleref\": (data.modules[0].moduleName + \"admin\").split(' ').join('_'),\n        onChange: this.onModuleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      })), data.modules[0].facility.map((fc, ind) => {\n        return React.createElement(\"tr\", {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"checkboxLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          id: (data.modules[0].moduleName + \"admin\").split(' ').join('_'),\n          onChange: this.selectFacility.bind(this),\n          \"data-role\": \"admin\",\n          \"data-module\": data.modules[0].moduleName,\n          value: fc.facility,\n          \"data-facilityroleref\": (fc.facility + \"admin\").split(' ').join('_'),\n          \"data-moduleroleref\": (data.modules[0].moduleName + \"admin\").split(' ').join('_'),\n          name: \"facility\",\n          checked: this.state[(fc.facility + \"admin\").split(' ').join('_')],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        })));\n      })), this.state.selectedRoles && this.state.selectedRoles.map((selRole, ind) => {\n        return React.createElement(\"td\", {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"checkboxLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          value: data.modules[0].moduleName,\n          \"data-role\": selRole,\n          checked: this.state[(data.modules[0].moduleName + selRole).split(' ').join('_')],\n          name: \"module\",\n          \"data-moduleroleref\": (data.modules[0].moduleName + selRole).split(' ').join('_'),\n          onChange: this.onModuleChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        })), data.modules[0].facility.map((fc, ind) => {\n          return React.createElement(\"tr\", {\n            key: ind,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            className: \"checkboxLabel\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 343\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            id: (data.modules[0].moduleName + selRole).split(' ').join('_'),\n            onChange: this.selectFacility.bind(this),\n            \"data-role\": selRole,\n            \"data-module\": data.modules[0].moduleName,\n            value: fc.facility,\n            \"data-facilityroleref\": (fc.facility + selRole).split(' ').join('_'),\n            \"data-moduleroleref\": (data.modules[0].moduleName + selRole).split(' ').join('_'),\n            name: \"facility\",\n            checked: this.state[(fc.facility + selRole).split(' ').join('_')],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 344\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"checkmark\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 350\n            },\n            __self: this\n          })));\n        }));\n      }));\n    }))), React.createElement(\"div\", {\n      className: \"col-lg-3 col-md-12 col-xs-12 col-sm-12 pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"col-lg-8 col-md-2 col-sm-12 col-xs-12 btn button3 pull-right\",\n      id: \"submitbtn\",\n      onClick: this.submitData.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"Save\")))))), React.createElement(\"div\", {\n      className: \"modal\",\n      id: \"addRoleModal\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"adminModal adminModal-dialog col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content adminModal-content col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-10 col-sm-offset-1 col-xs-12 noPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header adminModal-header col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"adminCloseCircleDiv pull-right  col-lg-1 col-lg-offset-11 col-md-1 col-md-offset-11 col-sm-1 col-sm-offset-11 col-xs-12 NOpadding-left NOpadding-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"adminCloseButton\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"div\", {\n      className: \"modal-body adminModal-body col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(UMaddRoles, {\n      getRoles: this.getRoles.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modal-footer adminModal-footer col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn adminCancel-btn col-lg-7 col-lg-offset-1 col-md-4 col-md-offset-1 col-sm-8 col-sm-offset-1 col-xs-10 col-xs-offset-1\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"CANCEL\"))))))))));\n  }\n\n}\n\nexport default AccessManagement;","map":{"version":3,"sources":["/home/mani/projects/jobportal/webapp/employerportal/src/coreadmin/AccessManagement/AccessManagement.js"],"names":["React","Component","$","jQuery","axios","swal","_","moment","CheckBoxSelection","Inject","MultiSelectComponent","UMaddRoles","AccessManagement","constructor","props","state","rolesArray","allModules","selectedRoles","componentDidMount","getRoles","getFacilitiesWithModules","get","then","response","setState","accessArray","data","i","length","role","push","k","module","console","log","split","join","facility","dropDownListObject","value","catch","error","map","ind","id","_id","hide","remove","handleChangeRoles","event","selectFacility","moduleroleref","target","getAttribute","facilityroleref","checked","key","onModuleChange","FacilityObject","document","querySelectorAll","submitData","preventDefault","checkedElem","access","uniq","modulesArray","roleWiseModule","j","localStorage","getItem","post","render","rolesfields","text","scope","bind","selRole","index","modules","moduleName","fc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport jQuery from 'jquery';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport _ from 'underscore';\nimport moment from 'moment';\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-react-dropdowns/styles/material.css\";\nimport { CheckBoxSelection, Inject, MultiSelectComponent }  from '@syncfusion/ej2-react-dropdowns';\nimport \"./AccessManagement.css\";\nimport UMaddRoles from '../userManagement/Roles/UMaddRoles.jsx';\n\nclass AccessManagement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           rolesArray : [],\n           allModules : [],\n           selectedRoles:[]\n        };\n    }\n    componentDidMount() {\n        this.getRoles();\n        this.getFacilitiesWithModules();\n\n        axios.get('/api/accessmaster/get')\n        .then((response) => {\n            this.setState({ accessArray: response.data })\n           var selectedRoles = []; \n            for (var i = 0; i < response.data.length; i++) {\n                \n                if (response.data[i].role !== 'authuser' && response.data[i].role !== 'admin') {\n                    selectedRoles.push(response.data[i].role)\n                }\n                \n                for (var k = 0; k < response.data[i].module.length; k++) {\n                   console.log(\"selectedRoles\",selectedRoles)\n                   \n                   this.setState({\n                    selectedRoles : selectedRoles,\n                    [(response.data[i].module[k].module+response.data[i].role).split(' ').join('_')] : true,\n                    [(response.data[i].module[k].facility+response.data[i].role).split(' ').join('_')] : true\n                   })\n                }\n                \n              //this.setState({[response.data[i].getAttribute(\"data-facilityroleref\")] : true})\n            }\n            this.dropDownListObject.value = selectedRoles\n        })\n        .catch((error) => {\n            console.log('error', error);\n        })\n    }\n    getRoles(){\n        axios.get('/api/roles/get/list')\n        .then((response) => {\n\n            var rolesArray = [];\n            response.data.map((data, ind) => {\n                if (data.role !== \"admin\") {\n                    rolesArray.push({ id: data._id, role: data.role })    \n                }\n                $(\"#addRoleModal\").hide();\n                $(\".modal-backdrop\").remove();\n            });\n\n            this.setState({ rolesArray: rolesArray })\n\n        })\n        .catch((error) => {\n            console.log('error', error);\n        })\n    }\n    getFacilitiesWithModules(){\n        \n        axios.get('/api/modulemaster/get/groupbylist')\n        .then((response) => {\n            this.setState({ allModules: response.data })\n        })\n        .catch((error) => {\n            console.log('error', error);\n        })    \n    }\n\n    handleChangeRoles(event){\n        console.log(event.value)\n        this.setState({\n            selectedRoles : event.value\n        })\n    }\n    selectFacility(event){\n        \n        var moduleroleref = event.target.getAttribute(\"data-moduleroleref\");\n        var facilityroleref = event.target.getAttribute(\"data-facilityroleref\");\n        \n        if (event.target.getAttribute(\"data-role\") === \"authuser\") {\n            //console.log((event.target.value+\"admin\").split(' ').join('_'));\n            event.target.checked ? this.setState({[(event.target.value+\"admin\").split(' ').join('_')]:true}) \n            : this.setState({[(event.target.value+\"admin\").split(' ').join('_')]:false})\n        \n            for(var key in this.state.selectedRoles){\n                console.log(this.state.selectedRoles[key])\n\n            event.target.checked ? this.setState({[(event.target.value+this.state.selectedRoles[key]).split(' ').join('_')]:true}) \n            : this.setState({[(event.target.value+this.state.selectedRoles[key]).split(' ').join('_')]:false})\n            }\n        }    \n        event.target.checked ? this.setState({[facilityroleref]:true,[moduleroleref]:true }) : this.setState({[facilityroleref]:false,[moduleroleref]:true})\n    }\n    onModuleChange(event){\n        \n        console.log(this.state.selectedRoles)\n\n        if (event.target.getAttribute(\"data-role\") === \"authuser\") {\n            //console.log((event.target.value+\"admin\").split(' ').join('_'));\n            event.target.checked ? this.setState({[(event.target.value+\"admin\").split(' ').join('_')]:true}) \n            : this.setState({[(event.target.value+\"admin\").split(' ').join('_')]:false})\n        \n            for(var key in this.state.selectedRoles){\n            \n            console.log(this.state.selectedRoles[key])\n\n            event.target.checked ? this.setState({[(event.target.value+this.state.selectedRoles[key]).split(' ').join('_')]:true}) \n            : this.setState({[(event.target.value+this.state.selectedRoles[key]).split(' ').join('_')]:false})\n            \n\n            }\n        }\n        var moduleroleref = event.target.getAttribute(\"data-moduleroleref\");\n        \n        event.target.checked ? this.setState({[moduleroleref]:true}) : this.setState({[moduleroleref]:false})\n        \n        var FacilityObject = document.querySelectorAll(\"#\"+moduleroleref)\n        //console.log(FacilityObject)\n\n        if (event.target.checked) {\n            for (var i = 0; i < FacilityObject.length; i++) {\n              console.log(FacilityObject[i].getAttribute(\"data-facilityroleref\"))\n              this.setState({[FacilityObject[i].getAttribute(\"data-facilityroleref\")] : true})\n            }\n        }else{\n            for (var i = 0; i < FacilityObject.length; i++) {\n              console.log(FacilityObject[i].getAttribute(\"data-facilityroleref\"))\n              this.setState({[FacilityObject[i].getAttribute(\"data-facilityroleref\")] : false})\n            }\n        }\n        \n    }\n    submitData(event){\n        event.preventDefault();\n        // access : {\n        //     role:\n        //     modules: [{m1,sm1},{m1,sm2}]\n        // }\n        var checkedElem = $(\"input[type='checkbox']:checked\");\n\n        var selectedRoles = [];\n        var access = [];\n\n        for (var i = 0; i < checkedElem.length; i++) {\n            selectedRoles.push(checkedElem[i].getAttribute('data-role'));\n        }\n\n        selectedRoles = _.uniq(selectedRoles)\n        //console.log('selectedRoles',selectedRoles)\n\n        for (var i = 0; i < selectedRoles.length; i++) {\n            var modulesArray = [];\n            var roleWiseModule = $('[data-role=\"' + selectedRoles[i] + '\"]:checked') ;\n            \n            for (var j = 0; j < roleWiseModule.length; j++) {\n               console.log('roleWiseModule',roleWiseModule[j] )\n               //console.log('roleWiseModule',roleWiseModule[j].getAttribute('name') )\n               \n               if (roleWiseModule[j].getAttribute('name') === 'facility' ) {\n                    modulesArray.push({module : roleWiseModule[j].getAttribute('data-module'), facility : roleWiseModule[j].value})\n               }else if(roleWiseModule[j].getAttribute('name') === 'module'){\n                    modulesArray.push({module : roleWiseModule[j].value })\n               }\n            }\n            access.push({role:selectedRoles[i], module:modulesArray})\n            //console.log('modulesArray',modulesArray)\n        }\n\n        access[\"createdBy\"] = localStorage.getItem(\"user_ID\");\n\n        console.log('access',access)\n\n\n        axios.post('/api/accessmaster/post', access)\n            .then((response)=>{\n                swal(\"Access for roles are defined\");\n            })\n            .catch((error)=>{\n\n            })\n    }\n    render() {\n        console.log(this.state)\n        const rolesfields: object = { text: 'role', value: 'role' };\n        return (\n            <div className=\"\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <section className=\"content\">\n                        <div className=\"pageContent col-lg-12 col-md-12 col-sm-12 col-xs-12 NOpadding\">\n                            <div className=\"box-header with-border col-lg-12 col-md-12 col-xs-12 col-sm-12 NOpadding-right\">\n                                <h4 className=\"weighttitle col-lg-11 col-md-11 col-xs-11 col-sm-11 NOpadding-right\">Access Management</h4>\n                            </div>\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <br/>\n                            <form id=\"ContractManagement\">\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 nopadding\">\n                                    <div className=\"col-lg-2 col-md-12 col-xs-12 col-sm-12\">\n                                        <a className=\"col-lg-12 col-md-2 col-sm-12 col-xs-12 btn button3\" id=\"addRole\" data-toggle=\"modal\"  data-target=\"#addRoleModal\" >\n                                           Create Role\n                                        </a>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-12 col-xs-12 col-sm-12 \">    \n                                        <a className=\"col-lg-12 col-md-2 col-sm-12 col-xs-12 btn button3\" id=\"addRole\" href=\"/umlistofusers\" >\n                                           Create User\n                                        </a>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-3 col-md-12 col-xs-12 col-sm-12\">\n                                    <label className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12 NOpadding-left\">Roles</label>\n                                    <MultiSelectComponent id=\"categoryChange\" ref={(scope) => { this.dropDownListObject = scope; }} \n                                        dataSource={this.state.rolesArray} \n                                        change={this.handleChangeRoles.bind(this)} mode='box' \n                                        fields={rolesfields} placeholder=\"Select Roles\" mode=\"CheckBox\" \n                                        selectAllText=\"Select All\" unSelectAllText=\"Unselect All\" \n                                        showSelectAll={true}   hideSelectedItem={false} >\n                                        <Inject services={[CheckBoxSelection]} />\n                                    </MultiSelectComponent>\n                                </div>\n                                \n                                <br/>\n                                <div className=\"col-lg-12 col-md-12 col-xs-12 col-sm-12\">\n                                <br/>\n                                <table className=\"table textAlignLeft AccessManagementTable\">\n                                <col width=\"60\" />\n                                    <thead>\n                                        <tr>\n                                            <th>Sr.No.</th>\n                                            <th>List of Modules & Facilities</th>\n                                            <th>Authenticated User</th>\n                                            <th>Admin</th>\n                                            {\n                                                this.state.selectedRoles && this.state.selectedRoles.map((selRole,ind)=>{\n                                                    return(<th key={ind}>{selRole}</th>);\n                                                })\n                                            }\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                    {\n                                        this.state.allModules.map((data,index)=>{\n                                            return(\n                                                <tr key={index}>\n                                                    <td><b>{index+1}</b></td>\n                                                    <td>{data.modules[0].moduleName}\n                                                    {   data.modules[0].facility.map((fc, ind)=>{\n                                                            return(\n                                                                <ul key={ind}>\n                                                                    <li>{fc.facility}</li>\n                                                                </ul>\n                                                                );\n                                                        })\n                                                    }\n                                                        \n                                                    </td>\n                                                    <td>\n                                                    <label className=\"checkboxLabel\">\n                                                    <input  type=\"checkbox\" \n                                                        value={data.modules[0].moduleName} checked={this.state[(data.modules[0].moduleName+\"authuser\").split(' ').join('_')]}\n                                                        name= \"module\" data-role=\"authuser\" data-moduleroleref={(data.modules[0].moduleName+\"authuser\").split(' ').join('_')}\n                                                        onChange={this.onModuleChange.bind(this)} />\n                                                        <span className=\"checkmark\"></span>\n                                                    </label>\n\n                                                    {   data.modules[0].facility.map((fc, ind)=>{\n                                                            return(\n                                                            <tr key={ind}>\n                                                               <label className=\"checkboxLabel\" >\n                                                               <input  type=\"checkbox\" id={(data.modules[0].moduleName+\"authuser\").split(' ').join('_')}\n                                                                onChange={this.selectFacility.bind(this)} data-role=\"authuser\" data-module = {data.modules[0].moduleName}\n                                                                    value={fc.facility} data-facilityroleref={(fc.facility+\"authuser\").split(' ').join('_')}\n                                                                    data-moduleroleref={(data.modules[0].moduleName+\"authuser\").split(' ').join('_')}\n                                                                    name= \"facility\" checked={this.state[(fc.facility+\"authuser\").split(' ').join('_')]}\n                                                                    />\n                                                                    <span className=\"checkmark\"></span>\n                                                                </label>\n                                                            </tr>    \n                                                                );\n                                                        })\n                                                    }\n                                                    </td>\n\n                                                    <td>\n                                                    <label className=\"checkboxLabel\">\n                                                    <input  type=\"checkbox\" \n                                                        value={data.modules[0].moduleName} checked={this.state[(data.modules[0].moduleName+\"admin\").split(' ').join('_')]}\n                                                        name= \"module\" data-role=\"admin\" data-moduleroleref={(data.modules[0].moduleName+\"admin\").split(' ').join('_')}\n                                                        onChange={this.onModuleChange.bind(this)} />\n                                                        <span className=\"checkmark\"></span>\n                                                    </label>\n\n                                                    {   data.modules[0].facility.map((fc, ind)=>{\n                                                            return(\n                                                            <tr key={ind}>\n                                                               <label className=\"checkboxLabel\">\n                                                               <input  type=\"checkbox\" id={(data.modules[0].moduleName+\"admin\").split(' ').join('_')}\n                                                                onChange={this.selectFacility.bind(this)}  data-role=\"admin\" data-module = {data.modules[0].moduleName}\n                                                                    value={fc.facility} data-facilityroleref={(fc.facility+\"admin\").split(' ').join('_')}\n                                                                    data-moduleroleref={(data.modules[0].moduleName+\"admin\").split(' ').join('_')}\n                                                                    name= \"facility\" checked={this.state[(fc.facility+\"admin\").split(' ').join('_')]}\n                                                                    />\n                                                                    <span className=\"checkmark\"></span>\n                                                                </label>\n                                                            </tr>    \n                                                                );\n                                                        })\n                                                    }\n                                                    </td>\n                                                    {\n                                                        this.state.selectedRoles && this.state.selectedRoles.map((selRole,ind)=>{\n                                                            return (\n                                                            <td key={ind}>\n                                                            <label className=\"checkboxLabel\">\n                                                            <input  type=\"checkbox\" \n                                                                value={data.modules[0].moduleName} data-role={selRole} checked={this.state[(data.modules[0].moduleName+selRole).split(' ').join('_')]}\n                                                                name= \"module\" data-moduleroleref={(data.modules[0].moduleName+selRole).split(' ').join('_')}\n                                                                onChange={this.onModuleChange.bind(this)} />\n                                                                <span className=\"checkmark\"></span>\n                                                            </label>\n\n                                                            {   data.modules[0].facility.map((fc, ind)=>{\n                                                                    return(\n                                                                    <tr key={ind}>\n                                                                       <label className=\"checkboxLabel\">\n                                                                       <input  type=\"checkbox\" id={(data.modules[0].moduleName+selRole).split(' ').join('_')}\n                                                                        onChange={this.selectFacility.bind(this)} data-role={selRole} data-module = {data.modules[0].moduleName}\n                                                                            value={fc.facility} data-facilityroleref={(fc.facility+selRole).split(' ').join('_')}\n                                                                            data-moduleroleref={(data.modules[0].moduleName+selRole).split(' ').join('_')}\n                                                                            name= \"facility\" checked={this.state[(fc.facility+selRole).split(' ').join('_')]}\n                                                                             />\n                                                                            <span className=\"checkmark\"></span>\n                                                                        </label>\n                                                                    </tr>    \n                                                                        );\n                                                                })\n                                                            }\n                                                            </td>\n                                                            )\n                                                        })\n                                                    }\n                                                    \n                                                </tr>\n\n                                                );\n                                        }) \n                                    }\n\n                                        \n                                    </tbody>\n                                </table>\n\n                                <div className=\"col-lg-3 col-md-12 col-xs-12 col-sm-12 pull-right\">\n                                    <button className=\"col-lg-8 col-md-2 col-sm-12 col-xs-12 btn button3 pull-right\" id=\"submitbtn\" onClick={this.submitData.bind(this)} >\n                                        Save\n                                    </button>\n                                </div>            \n                                </div>\n                            </form>\n                            </div>\n                            </div> \n\n                            <div className=\"modal\" id=\"addRoleModal\" role=\"dialog\">\n                              <div className=\"adminModal adminModal-dialog col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                <div className=\"modal-content adminModal-content col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-10 col-sm-offset-1 col-xs-12 noPadding\">\n                                  <div className=\"modal-header adminModal-header col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                    <div className=\"adminCloseCircleDiv pull-right  col-lg-1 col-lg-offset-11 col-md-1 col-md-offset-11 col-sm-1 col-sm-offset-11 col-xs-12 NOpadding-left NOpadding-right\">\n                                        <button type=\"button\" className=\"adminCloseButton\" data-dismiss=\"modal\" >&times;</button>\n                                    </div>\n                                  </div>\n                                <div className=\"modal-body adminModal-body col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                    <UMaddRoles getRoles= {this.getRoles.bind(this)}/>\n                                </div>\n                                <div className=\"modal-footer adminModal-footer col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n                                        <button type=\"button\" className=\"btn adminCancel-btn col-lg-7 col-lg-offset-1 col-md-4 col-md-offset-1 col-sm-8 col-sm-offset-1 col-xs-10 col-xs-offset-1\" data-dismiss=\"modal\" >CANCEL</button>\n                                    </div>\n                                </div>\n                                </div>\n                              </div>\n                            </div>\n                    </section> \n                    </div>   \n                </div>   \n             </div>   \n            )         \n    }\n}\nexport default AccessManagement;    "]},"metadata":{},"sourceType":"module"}