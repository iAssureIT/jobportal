{"ast":null,"code":"var _jsxFileName = \"/home/mani/projects/jobportal/webapp/adminportal/src/projectadmin/BookingMaster/BookingCity.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nclass BookingCity extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangePlaces = address => {\n      this.setState({\n        address: address\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => {\n        for (var i = 0; i < results[0].address_components.length; i++) {\n          for (var b = 0; b < results[0].address_components[i].types.length; b++) {\n            switch (results[0].address_components[i].types[b]) {\n              case 'sublocality_level_1':\n                var area = results[0].address_components[i].long_name;\n                break;\n\n              case 'sublocality_level_2':\n                area = results[0].address_components[i].long_name;\n                break;\n\n              case 'locality':\n                var city = results[0].address_components[i].long_name;\n                break;\n\n              case 'administrative_area_level_1':\n                var state = results[0].address_components[i].long_name;\n                var stateCode = results[0].address_components[i].short_name;\n                break;\n\n              case 'administrative_area_level_2':\n                var district = results[0].address_components[i].long_name;\n                break;\n\n              case 'country':\n                var country = results[0].address_components[i].long_name;\n                var countryCode = results[0].address_components[i].short_name;\n                break;\n\n              case 'postal_code':\n                var pincode = results[0].address_components[i].long_name;\n                break;\n\n              default:\n                break;\n            }\n          }\n        }\n\n        var statename = this.state.statename;\n        this.props.onSelectedItemsChange(statename, city);\n        var data = {\n          [statename]: city\n        };\n        this.props.getCity(data);\n      }).catch(error => console.error('Error', error));\n      this.setState({\n        address: address\n      });\n    };\n\n    this.state = {\n      city: '',\n      address: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      label: this.props.label,\n      statename: this.props.statename,\n      reset: this.props.reset\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      statename: nextProps.statename,\n      label: nextProps.label,\n      reset: nextProps.reset\n    }, () => {\n      if (this.state.reset == true) {\n        this.setState({\n          address: \"\",\n          city: \" \"\n        });\n      }\n    });\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    }, () => {});\n  }\n\n  render() {\n    const searchOptions = {\n      types: ['(cities)'],\n      componentRestrictions: {\n        country: \"in\"\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, this.state.label), /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChangePlaces,\n      onSelect: this.handleSelect,\n      searchOptions: searchOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: 'Search City ...',\n      className: 'location-search-input col-lg-12 form-control errorinputText',\n      id: \"address\",\n      name: \"address\"\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.address ? \"autocomplete-dropdown-container SearchListContainer\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 35\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }\n      }, suggestion.description));\n    })))));\n  }\n\n}\n\nexport default withRouter(BookingCity);","map":{"version":3,"sources":["/home/mani/projects/jobportal/webapp/adminportal/src/projectadmin/BookingMaster/BookingCity.js"],"names":["React","Component","$","axios","withRouter","PlacesAutocomplete","geocodeByAddress","getLatLng","BookingCity","constructor","props","handleChangePlaces","address","setState","handleSelect","then","results","i","address_components","length","b","types","area","long_name","city","state","stateCode","short_name","district","country","countryCode","pincode","statename","onSelectedItemsChange","data","getCity","catch","error","console","handleChange","bind","componentDidMount","label","reset","componentWillReceiveProps","nextProps","event","preventDefault","target","name","value","render","searchOptions","componentRestrictions","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","id","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":"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","sourcesContent":["\nimport React, { Component }   from 'react';\nimport $                      from 'jquery';\nimport axios                  from 'axios';\nimport {withRouter}       from 'react-router-dom';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nclass BookingCity extends Component {\n  \n  constructor(props) {\n      super(props);\n    \n      this.state = {\n        city:'',\n        address:''\n      };\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    this.setState({\n      label : this.props.label,\n      statename : this.props.statename,\n      reset : this.props.reset,\n    })\n  }\n\n  componentWillReceiveProps(nextProps){\n    this.setState({\n      statename :nextProps.statename,\n      label :nextProps.label,\n      reset :nextProps.reset,\n    },()=>{\n      if(this.state.reset == true){this.setState({address:\"\",city:\" \"})}\n    })\n    \n  }\n  \n    \n  handleChange(event){\n    event.preventDefault();\n    const target = event.target;\n    const name = target.name;\n\n    this.setState({\n      [name]: event.target.value\n    },()=>{});\n  }\n\n  handleChangePlaces = address => {\n      this.setState({ address : address});\n  };\n\n  handleSelect = address => {\n      geocodeByAddress(address)\n     .then((results) =>{ \n      for (var i = 0; i < results[0].address_components.length; i++) {\n          for (var b = 0; b < results[0].address_components[i].types.length; b++) {\n              switch (results[0].address_components[i].types[b]) {\n                  case 'sublocality_level_1':\n                      var area = results[0].address_components[i].long_name;\n                      break;\n                  case 'sublocality_level_2':\n                      area = results[0].address_components[i].long_name;\n                      break;\n                  case 'locality':\n                      var city = results[0].address_components[i].long_name;\n                      break;\n                  case 'administrative_area_level_1':\n                      var state = results[0].address_components[i].long_name;\n                      var stateCode = results[0].address_components[i].short_name;\n                      break;\n                  case 'administrative_area_level_2':\n                      var district = results[0].address_components[i].long_name;\n                      break;\n                  case 'country':\n                     var country = results[0].address_components[i].long_name;\n                     var countryCode = results[0].address_components[i].short_name;\n                      break; \n                  case 'postal_code':\n                     var pincode = results[0].address_components[i].long_name;\n                      break;\n                  default :\n                      break;\n              }\n          }\n      }\n\n      var statename = this.state.statename\n      this.props.onSelectedItemsChange(statename,city)\n\n\n      var data = {\n        [statename] : city,\n      }\n      this.props.getCity(data)\n\n       \n        })\n     \n      .catch(error => console.error('Error', error));\n\n    \n      this.setState({ address : address});\n  };\n\n  render() {\n    const searchOptions = {\n      types: ['(cities)'],\n      componentRestrictions: {country: \"in\"}\n    }\n        return (  \n          <div>\n              <label className=\"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12\">{this.state.label}</label>\n              <PlacesAutocomplete\n                value={this.state.address}\n                onChange={this.handleChangePlaces}\n                onSelect={this.handleSelect}\n                searchOptions={searchOptions}\n              >\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                  <div>\n                    <input\n                      {...getInputProps({\n                        placeholder: 'Search City ...',\n                        className: 'location-search-input col-lg-12 form-control errorinputText',\n                        id:\"address\",\n                        name:\"address\"\n                      })}\n                    />\n                    <div className={this.state.address ? \"autocomplete-dropdown-container SearchListContainer\" : \"\"}>\n                      {loading && <div>Loading...</div>}\n                      {suggestions.map(suggestion => {\n                        const className = suggestion.active\n                          ? 'suggestion-item--active'\n                          : 'suggestion-item';\n                        // inline style for demonstration purpose\n                        const style = suggestion.active\n                          ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                          : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                        return (\n                          <div\n                            {...getSuggestionItemProps(suggestion, {\n                              className,\n                              style,\n                            })}\n                          >\n                            <span>{suggestion.description}</span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                )}\n              </PlacesAutocomplete>\n         </div>     \n      );\n  } \n}\nexport default withRouter(BookingCity); \n"]},"metadata":{},"sourceType":"module"}