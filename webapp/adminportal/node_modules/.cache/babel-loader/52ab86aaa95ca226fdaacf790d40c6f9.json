{"ast":null,"code":"import { d as _inherits, a as _createClass, b as _classCallCheck, e as _possibleConstructorReturn, f as _getPrototypeOf, g as _get, h as _set, c as _objectWithoutProperties } from '../_rollupPluginBabelHelpers-3c58f0e3.js';\nimport '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport IMask from '../core/holder.js';\nimport Masked from './base.js';\nimport createMask from './factory.js';\n/** Dynamic mask for choosing apropriate mask in run-time */\n\nvar MaskedDynamic = /*#__PURE__*/function (_Masked) {\n  _inherits(MaskedDynamic, _Masked);\n  /** Currently chosen mask */\n\n  /** Compliled {@link Masked} options */\n\n  /** Chooses {@link Masked} depending on input value */\n\n  /**\r\n    @param {Object} opts\r\n  */\n\n\n  function MaskedDynamic(opts) {\n    var _this;\n\n    _classCallCheck(this, MaskedDynamic);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MaskedDynamic).call(this, Object.assign({}, MaskedDynamic.DEFAULTS, {}, opts)));\n    _this.currentMask = null;\n    return _this;\n  }\n  /**\r\n    @override\r\n  */\n\n\n  _createClass(MaskedDynamic, [{\n    key: \"_update\",\n    value: function _update(opts) {\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"_update\", this).call(this, opts);\n\n      if ('mask' in opts) {\n        // mask could be totally dynamic with only `dispatch` option\n        this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(function (m) {\n          return createMask(m);\n        }) : [];\n      }\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"_appendCharRaw\",\n    value: function _appendCharRaw() {\n      var details = this._applyDispatch.apply(this, arguments);\n\n      if (this.currentMask) {\n        var _this$currentMask;\n\n        details.aggregate((_this$currentMask = this.currentMask)._appendChar.apply(_this$currentMask, arguments));\n      }\n\n      return details;\n    }\n  }, {\n    key: \"_applyDispatch\",\n    value: function _applyDispatch() {\n      var appended = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n      var inputValue = this.rawInputValue;\n      var insertValue = flags.tail && flags._beforeTailState != null ? // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue : inputValue;\n      var tailValue = inputValue.slice(insertValue.length);\n      var prevMask = this.currentMask;\n      var details = new ChangeDetails();\n      var prevMaskState = prevMask && prevMask.state; // clone flags to prevent overwriting `_beforeTailState`\n\n      this.currentMask = this.doDispatch(appended, Object.assign({}, flags)); // restore state after dispatch\n\n      if (this.currentMask) {\n        if (this.currentMask !== prevMask) {\n          // if mask changed reapply input\n          this.currentMask.reset(); // $FlowFixMe - it's ok, we don't change current mask above\n\n          var d = this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n\n          if (tailValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            details.tailShift += this.currentMask.append(tailValue, {\n              raw: true,\n              tail: true\n            }).tailShift;\n          }\n        } else {\n          // Dispatch can do something bad with state, so\n          // restore prev mask state\n          this.currentMask.state = prevMaskState;\n        }\n      }\n\n      return details;\n    }\n  }, {\n    key: \"_appendPlaceholder\",\n    value: function _appendPlaceholder() {\n      var details = this._applyDispatch.apply(this, arguments);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendPlaceholder());\n      }\n\n      return details;\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"doDispatch\",\n    value: function doDispatch(appended) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.dispatch(appended, this, flags);\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"doValidate\",\n    value: function doValidate() {\n      var _get2, _this$currentMask2;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return (_get2 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args)) && (!this.currentMask || (_this$currentMask2 = this.currentMask).doValidate.apply(_this$currentMask2, args));\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.currentMask) this.currentMask.reset();\n      this.compiledMasks.forEach(function (m) {\n        return m.reset();\n      });\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"remove\",\n\n    /**\r\n      @override\r\n    */\n    value: function remove() {\n      var details = new ChangeDetails();\n\n      if (this.currentMask) {\n        var _this$currentMask3;\n\n        details.aggregate((_this$currentMask3 = this.currentMask).remove.apply(_this$currentMask3, arguments)) // update with dispatch\n        .aggregate(this._applyDispatch());\n      }\n\n      return details;\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"extractInput\",\n\n    /**\r\n      @override\r\n    */\n    value: function extractInput() {\n      var _this$currentMask4;\n\n      return this.currentMask ? (_this$currentMask4 = this.currentMask).extractInput.apply(_this$currentMask4, arguments) : '';\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"extractTail\",\n    value: function extractTail() {\n      var _this$currentMask5, _get3;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this.currentMask ? (_this$currentMask5 = this.currentMask).extractTail.apply(_this$currentMask5, args) : (_get3 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"extractTail\", this)).call.apply(_get3, [this].concat(args));\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"doCommit\",\n    value: function doCommit() {\n      if (this.currentMask) this.currentMask.doCommit();\n\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"doCommit\", this).call(this);\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"nearestInputPos\",\n    value: function nearestInputPos() {\n      var _this$currentMask6, _get4;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.currentMask ? (_this$currentMask6 = this.currentMask).nearestInputPos.apply(_this$currentMask6, args) : (_get4 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"nearestInputPos\", this)).call.apply(_get4, [this].concat(args));\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.value : '';\n    },\n    set: function set(value) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"value\", value, this, true);\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"unmaskedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.unmaskedValue : '';\n    },\n    set: function set(unmaskedValue) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"unmaskedValue\", unmaskedValue, this, true);\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"typedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.typedValue : '';\n    } // probably typedValue should not be used with dynamic\n    ,\n    set: function set(value) {\n      var unmaskedValue = String(value); // double check it\n\n      if (this.currentMask) {\n        this.currentMask.typedValue = value;\n        unmaskedValue = this.currentMask.unmaskedValue;\n      }\n\n      this.unmaskedValue = unmaskedValue;\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"isComplete\",\n    get: function get() {\n      return !!this.currentMask && this.currentMask.isComplete;\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return Object.assign({}, _get(_getPrototypeOf(MaskedDynamic.prototype), \"state\", this), {\n        _rawInputValue: this.rawInputValue,\n        compiledMasks: this.compiledMasks.map(function (m) {\n          return m.state;\n        }),\n        currentMaskRef: this.currentMask,\n        currentMask: this.currentMask && this.currentMask.state\n      });\n    },\n    set: function set(state) {\n      var compiledMasks = state.compiledMasks,\n          currentMaskRef = state.currentMaskRef,\n          currentMask = state.currentMask,\n          maskedState = _objectWithoutProperties(state, [\"compiledMasks\", \"currentMaskRef\", \"currentMask\"]);\n\n      this.compiledMasks.forEach(function (m, mi) {\n        return m.state = compiledMasks[mi];\n      });\n\n      if (currentMaskRef != null) {\n        this.currentMask = currentMaskRef;\n        this.currentMask.state = currentMask;\n      }\n\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"state\", maskedState, this, true);\n    }\n  }, {\n    key: \"overwrite\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.overwrite : _get(_getPrototypeOf(MaskedDynamic.prototype), \"overwrite\", this);\n    },\n    set: function set(overwrite) {\n      console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n    }\n  }]);\n\n  return MaskedDynamic;\n}(Masked);\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: function dispatch(appended, masked, flags) {\n    if (!masked.compiledMasks.length) return;\n    var inputValue = masked.rawInputValue; // simulate input\n\n    var inputs = masked.compiledMasks.map(function (m, index) {\n      m.reset();\n      m.append(inputValue, {\n        raw: true\n      });\n      m.append(appended, flags);\n      var weight = m.rawInputValue.length;\n      return {\n        weight: weight,\n        index: index\n      };\n    }); // pop masks with longer values first\n\n    inputs.sort(function (i1, i2) {\n      return i2.weight - i1.weight;\n    });\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\nexport default MaskedDynamic;","map":{"version":3,"sources":["/home/mani/projects/jobportal/webapp/adminportal/node_modules/imask/esm/masked/dynamic.js"],"names":["d","_inherits","a","_createClass","b","_classCallCheck","e","_possibleConstructorReturn","f","_getPrototypeOf","g","_get","h","_set","c","_objectWithoutProperties","ChangeDetails","IMask","Masked","createMask","MaskedDynamic","_Masked","opts","_this","call","Object","assign","DEFAULTS","currentMask","key","value","_update","prototype","compiledMasks","Array","isArray","mask","map","m","_appendCharRaw","details","_applyDispatch","apply","arguments","_this$currentMask","aggregate","_appendChar","appended","length","undefined","flags","prevValueBeforeTail","tail","_beforeTailState","_value","inputValue","rawInputValue","insertValue","_rawInputValue","tailValue","slice","prevMask","prevMaskState","state","doDispatch","reset","append","raw","tailShift","inserted","_appendPlaceholder","dispatch","doValidate","_get2","_this$currentMask2","_len","args","_key","concat","forEach","remove","_this$currentMask3","extractInput","_this$currentMask4","extractTail","_this$currentMask5","_get3","_len2","_key2","doCommit","nearestInputPos","_this$currentMask6","_get4","_len3","_key3","get","set","unmaskedValue","typedValue","String","isComplete","currentMaskRef","maskedState","mi","overwrite","console","warn","masked","inputs","index","weight","sort","i1","i2"],"mappings":"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","sourcesContent":["import { d as _inherits, a as _createClass, b as _classCallCheck, e as _possibleConstructorReturn, f as _getPrototypeOf, g as _get, h as _set, c as _objectWithoutProperties } from '../_rollupPluginBabelHelpers-3c58f0e3.js';\nimport '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport IMask from '../core/holder.js';\nimport Masked from './base.js';\nimport createMask from './factory.js';\n\n/** Dynamic mask for choosing apropriate mask in run-time */\nvar MaskedDynamic =\n/*#__PURE__*/\nfunction (_Masked) {\n  _inherits(MaskedDynamic, _Masked);\n\n  /** Currently chosen mask */\n\n  /** Compliled {@link Masked} options */\n\n  /** Chooses {@link Masked} depending on input value */\n\n  /**\r\n    @param {Object} opts\r\n  */\n  function MaskedDynamic(opts) {\n    var _this;\n\n    _classCallCheck(this, MaskedDynamic);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MaskedDynamic).call(this, Object.assign({}, MaskedDynamic.DEFAULTS, {}, opts)));\n    _this.currentMask = null;\n    return _this;\n  }\n  /**\r\n    @override\r\n  */\n\n\n  _createClass(MaskedDynamic, [{\n    key: \"_update\",\n    value: function _update(opts) {\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"_update\", this).call(this, opts);\n\n      if ('mask' in opts) {\n        // mask could be totally dynamic with only `dispatch` option\n        this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(function (m) {\n          return createMask(m);\n        }) : [];\n      }\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"_appendCharRaw\",\n    value: function _appendCharRaw() {\n      var details = this._applyDispatch.apply(this, arguments);\n\n      if (this.currentMask) {\n        var _this$currentMask;\n\n        details.aggregate((_this$currentMask = this.currentMask)._appendChar.apply(_this$currentMask, arguments));\n      }\n\n      return details;\n    }\n  }, {\n    key: \"_applyDispatch\",\n    value: function _applyDispatch() {\n      var appended = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n      var inputValue = this.rawInputValue;\n      var insertValue = flags.tail && flags._beforeTailState != null ? // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue : inputValue;\n      var tailValue = inputValue.slice(insertValue.length);\n      var prevMask = this.currentMask;\n      var details = new ChangeDetails();\n      var prevMaskState = prevMask && prevMask.state; // clone flags to prevent overwriting `_beforeTailState`\n\n      this.currentMask = this.doDispatch(appended, Object.assign({}, flags)); // restore state after dispatch\n\n      if (this.currentMask) {\n        if (this.currentMask !== prevMask) {\n          // if mask changed reapply input\n          this.currentMask.reset(); // $FlowFixMe - it's ok, we don't change current mask above\n\n          var d = this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n\n          if (tailValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            details.tailShift += this.currentMask.append(tailValue, {\n              raw: true,\n              tail: true\n            }).tailShift;\n          }\n        } else {\n          // Dispatch can do something bad with state, so\n          // restore prev mask state\n          this.currentMask.state = prevMaskState;\n        }\n      }\n\n      return details;\n    }\n  }, {\n    key: \"_appendPlaceholder\",\n    value: function _appendPlaceholder() {\n      var details = this._applyDispatch.apply(this, arguments);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendPlaceholder());\n      }\n\n      return details;\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"doDispatch\",\n    value: function doDispatch(appended) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.dispatch(appended, this, flags);\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"doValidate\",\n    value: function doValidate() {\n      var _get2, _this$currentMask2;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return (_get2 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args)) && (!this.currentMask || (_this$currentMask2 = this.currentMask).doValidate.apply(_this$currentMask2, args));\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.currentMask) this.currentMask.reset();\n      this.compiledMasks.forEach(function (m) {\n        return m.reset();\n      });\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"remove\",\n\n    /**\r\n      @override\r\n    */\n    value: function remove() {\n      var details = new ChangeDetails();\n\n      if (this.currentMask) {\n        var _this$currentMask3;\n\n        details.aggregate((_this$currentMask3 = this.currentMask).remove.apply(_this$currentMask3, arguments)) // update with dispatch\n        .aggregate(this._applyDispatch());\n      }\n\n      return details;\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"extractInput\",\n\n    /**\r\n      @override\r\n    */\n    value: function extractInput() {\n      var _this$currentMask4;\n\n      return this.currentMask ? (_this$currentMask4 = this.currentMask).extractInput.apply(_this$currentMask4, arguments) : '';\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"extractTail\",\n    value: function extractTail() {\n      var _this$currentMask5, _get3;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this.currentMask ? (_this$currentMask5 = this.currentMask).extractTail.apply(_this$currentMask5, args) : (_get3 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"extractTail\", this)).call.apply(_get3, [this].concat(args));\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"doCommit\",\n    value: function doCommit() {\n      if (this.currentMask) this.currentMask.doCommit();\n\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"doCommit\", this).call(this);\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"nearestInputPos\",\n    value: function nearestInputPos() {\n      var _this$currentMask6, _get4;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.currentMask ? (_this$currentMask6 = this.currentMask).nearestInputPos.apply(_this$currentMask6, args) : (_get4 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"nearestInputPos\", this)).call.apply(_get4, [this].concat(args));\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.value : '';\n    },\n    set: function set(value) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"value\", value, this, true);\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"unmaskedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.unmaskedValue : '';\n    },\n    set: function set(unmaskedValue) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"unmaskedValue\", unmaskedValue, this, true);\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"typedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.typedValue : '';\n    } // probably typedValue should not be used with dynamic\n    ,\n    set: function set(value) {\n      var unmaskedValue = String(value); // double check it\n\n      if (this.currentMask) {\n        this.currentMask.typedValue = value;\n        unmaskedValue = this.currentMask.unmaskedValue;\n      }\n\n      this.unmaskedValue = unmaskedValue;\n    }\n    /**\r\n      @override\r\n    */\n\n  }, {\n    key: \"isComplete\",\n    get: function get() {\n      return !!this.currentMask && this.currentMask.isComplete;\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return Object.assign({}, _get(_getPrototypeOf(MaskedDynamic.prototype), \"state\", this), {\n        _rawInputValue: this.rawInputValue,\n        compiledMasks: this.compiledMasks.map(function (m) {\n          return m.state;\n        }),\n        currentMaskRef: this.currentMask,\n        currentMask: this.currentMask && this.currentMask.state\n      });\n    },\n    set: function set(state) {\n      var compiledMasks = state.compiledMasks,\n          currentMaskRef = state.currentMaskRef,\n          currentMask = state.currentMask,\n          maskedState = _objectWithoutProperties(state, [\"compiledMasks\", \"currentMaskRef\", \"currentMask\"]);\n\n      this.compiledMasks.forEach(function (m, mi) {\n        return m.state = compiledMasks[mi];\n      });\n\n      if (currentMaskRef != null) {\n        this.currentMask = currentMaskRef;\n        this.currentMask.state = currentMask;\n      }\n\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"state\", maskedState, this, true);\n    }\n  }, {\n    key: \"overwrite\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.overwrite : _get(_getPrototypeOf(MaskedDynamic.prototype), \"overwrite\", this);\n    },\n    set: function set(overwrite) {\n      console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n    }\n  }]);\n\n  return MaskedDynamic;\n}(Masked);\nMaskedDynamic.DEFAULTS = {\n  dispatch: function dispatch(appended, masked, flags) {\n    if (!masked.compiledMasks.length) return;\n    var inputValue = masked.rawInputValue; // simulate input\n\n    var inputs = masked.compiledMasks.map(function (m, index) {\n      m.reset();\n      m.append(inputValue, {\n        raw: true\n      });\n      m.append(appended, flags);\n      var weight = m.rawInputValue.length;\n      return {\n        weight: weight,\n        index: index\n      };\n    }); // pop masks with longer values first\n\n    inputs.sort(function (i1, i2) {\n      return i2.weight - i1.weight;\n    });\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport default MaskedDynamic;\n"]},"metadata":{},"sourceType":"module"}