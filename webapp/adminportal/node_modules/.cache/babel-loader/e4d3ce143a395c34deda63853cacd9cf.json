{"ast":null,"code":"var _jsxFileName = \"/home/mani/projects/jobportal/webapp/adminportal/src/projectadmin/Dashboard/Charts/BarChart.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../dashboard.css';\nconst options = {\n  scales: {\n    xAxes: [{\n      stacked: true\n    }],\n    yAxes: [{\n      stacked: true\n    }]\n  },\n  plugins: {\n    labels: false\n  },\n  responsive: true,\n  maintainAspectRatio: false\n};\nexport default class BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boxColor: props.boxColor,\n      title: props.title,\n      display: props.display,\n      \"data\": {\n        labels: [],\n        datasets: [{\n          label: 'Estimated Cost',\n          backgroundColor: 'rgba(54, 162, 235, 1)',\n          borderColor: 'rgba(54, 162, 235, 0.5)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255, 206, 86, 0.5)',\n          hoverBorderColor: 'rgba(255, 206, 86, 0.5)',\n          stack: '1',\n          data: []\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.display) {\n      this.setState({\n        boxColor: this.props.boxColor,\n        title: this.props.title,\n        apiData: this.props.api\n      }, () => {\n        this.getData();\n      });\n    }\n  }\n\n  componentWillMount() {\n    if (this.props.display) {\n      this.setState({\n        boxColor: this.props.boxColor,\n        title: this.props.title,\n        apiData: this.props.api\n      }, () => {\n        this.getData();\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.display) {\n      this.setState({\n        boxColor: nextProps.boxColor,\n        title: nextProps.title,\n        apiData: nextProps.api\n      }, () => {\n        this.getData();\n      });\n    }\n  }\n\n  getData() {\n    var data = { ...this.state.data\n    };\n\n    if (this.state.apiData) {\n      var Method = this.state.apiData.method;\n      var Path = this.state.apiData.path;\n      axios({\n        method: Method,\n        url: Path\n      }).then(response => {\n        var booking = [];\n        var piechartcolor = [];\n        var totalEstimate = [];\n\n        if (response.data && response.data.length > 0) {\n          response.data.map((data, index) => {\n            booking.push(data.name);\n            totalEstimate.push(data.totalCost);\n          });\n\n          if (totalEstimate.length > 0) {\n            data.datasets[0].data = totalEstimate;\n            data.labels = booking;\n            this.setState({\n              \"data\": data\n            });\n          }\n        }\n      }).catch(error => {\n        console.log('error=>', error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, this.state.display ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box \" + this.state.boxColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-header with-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"box-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, this.state.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-body no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, this.state.data && this.state.data.datasets[0].data.length > 0 ? /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.data,\n      height: 300,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"chartStyle\",\n      src: \"/images/bar.gif\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"pull-right noChartData\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"No Data Found\"))))) : null);\n  }\n\n}","map":{"version":3,"sources":["/home/mani/projects/jobportal/webapp/adminportal/src/projectadmin/Dashboard/Charts/BarChart.js"],"names":["React","Component","render","Bar","axios","options","scales","xAxes","stacked","yAxes","plugins","labels","responsive","maintainAspectRatio","BarChart","constructor","props","state","boxColor","title","display","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","stack","data","componentDidMount","setState","apiData","api","getData","componentWillMount","componentWillReceiveProps","nextProps","Method","method","Path","path","url","then","response","booking","piechartcolor","totalEstimate","length","map","index","push","name","totalCost","catch","error","console","log"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { render } from 'react-dom';\nimport {Bar} from 'react-chartjs-2';\nimport axios             from 'axios';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport '../dashboard.css';\n\nconst options = {\n    scales: {\n      xAxes: [{\n        stacked: true,\n      }],\n      yAxes: [{\n        stacked: true,\n          }],\n    },\n    plugins:{labels:false},\n    responsive: true,\n    maintainAspectRatio: false     \n};\nexport default class BarChart extends Component{\n  \n  constructor(props) {\n   super(props);\n    this.state = {\n      boxColor:props.boxColor,\n      title:props.title,\n      display:props.display,\n      \"data\" : {\n      labels: [],\n      datasets: [{\n            label: 'Estimated Cost',\n            backgroundColor:'rgba(54, 162, 235, 1)',\n            borderColor: 'rgba(54, 162, 235, 0.5)',\n            borderWidth: 1,\n            hoverBackgroundColor:'rgba(255, 206, 86, 0.5)',\n            hoverBorderColor:'rgba(255, 206, 86, 0.5)',\n            stack: '1',\n            data: []\n          }]\n      }\n    }\n  }\n   \n  componentDidMount(){\n    if(this.props.display){\n      this.setState({\n        boxColor: this.props.boxColor,\n        title: this.props.title,\n        apiData : this.props.api,\n      },()=>{this.getData()})\n    }\n  }\n\n  componentWillMount(){\n    if(this.props.display){\n      this.setState({\n        boxColor: this.props.boxColor,\n        title: this.props.title,\n        apiData : this.props.api,\n      },()=>{this.getData()})\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.display){\n      this.setState({\n        boxColor: nextProps.boxColor,\n        title: nextProps.title,\n        apiData : nextProps.api,\n      },()=>{this.getData()})\n    }\n  }\n\n  getData(){\n    var data = {...this.state.data};\n\n    if(this.state.apiData){\n      var Method = this.state.apiData.method;\n      var Path = this.state.apiData.path;\n        axios({\n          method: Method,\n          url: Path\n        })\n        .then((response)=>{ \n          var booking = [];\n          var piechartcolor =[];\n          var totalEstimate = [];\n         if(response.data && response.data.length >0){\n            response.data.map((data,index)=>{ \n              booking.push(data.name);\n              totalEstimate.push(data.totalCost);\n            })\n          if (totalEstimate.length > 0) {\n            data.datasets[0].data = totalEstimate;\n            data.labels = booking;\n            this.setState({\n              \"data\" : data\n            })\n            \n          }\n        }  \n      })\n      .catch((error)=>{  \n        console.log('error=>',error)      \n      });\n    }\n  }\n\n    \n  render(){\n    \n    return(\n      <div>\n      {this.state.display ?\n        <div className=\"col-md-6\">\n          <div className={\"box \"+this.state.boxColor}>\n            <div className=\"box-header with-border\">\n              <h3 className=\"box-title\">{this.state.title}</h3>\n            </div>\n            <div className=\"box-body no-padding\">\n            {this.state.data && this.state.data.datasets[0].data.length > 0 ?\n              <Bar data={this.state.data} height={300}  options={options} />\n            :\n            <div>\n              <img className=\"chartStyle\" src=\"/images/bar.gif\"/>\n              <p className=\"pull-right noChartData\">No Data Found</p>\n            </div>\n            }\n            </div>\n          </div>\n        </div> \n       :\n        null\n      }\n      </div>\n        );\n     \n  }\n}\n"]},"metadata":{},"sourceType":"module"}