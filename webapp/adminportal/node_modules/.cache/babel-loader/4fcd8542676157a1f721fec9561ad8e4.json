{"ast":null,"code":"var _jsxFileName = \"/home/mani/projects/jobportal/webapp/adminportal/src/projectadmin/BillingManagement/BillingTabs/BookingCity.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nclass BookingCity extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangePlaces = address => {\n      this.setState({\n        address: address\n      });\n      console.log(\"address = \", address);\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => {\n        for (var i = 0; i < results[0].address_components.length; i++) {\n          for (var b = 0; b < results[0].address_components[i].types.length; b++) {\n            switch (results[0].address_components[i].types[b]) {\n              case 'sublocality_level_1':\n                var area = results[0].address_components[i].long_name;\n                break;\n\n              case 'sublocality_level_2':\n                area = results[0].address_components[i].long_name;\n                break;\n\n              case 'locality':\n                var city = results[0].address_components[i].long_name;\n                break;\n\n              case 'administrative_area_level_1':\n                var state = results[0].address_components[i].long_name;\n                var stateCode = results[0].address_components[i].short_name;\n                break;\n\n              case 'administrative_area_level_2':\n                var district = results[0].address_components[i].long_name;\n                break;\n\n              case 'country':\n                var country = results[0].address_components[i].long_name;\n                var countryCode = results[0].address_components[i].short_name;\n                break;\n\n              case 'postal_code':\n                var pincode = results[0].address_components[i].long_name;\n                break;\n\n              default:\n                break;\n            }\n          }\n        }\n\n        var statename = this.state.statename;\n        this.props.onSelectedItemsChange(statename, city);\n        var data = {\n          [statename]: city\n        };\n        this.props.getCity(data);\n      }).catch(error => console.error('Error', error));\n      this.setState({\n        address: address\n      });\n    };\n\n    this.state = {\n      city: '',\n      address: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      label: this.props.label,\n      statename: this.props.statename,\n      reset: this.props.reset\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      statename: nextProps.statename,\n      label: nextProps.label,\n      reset: nextProps.reset\n    }, () => {\n      if (this.state.reset == true) {\n        this.setState({\n          address: \"\",\n          city: \" \"\n        });\n      }\n    });\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    }, () => {});\n  }\n\n  render() {\n    const searchOptions = {\n      types: ['(cities)'],\n      componentRestrictions: {\n        country: \"in\"\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, this.state.label), /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChangePlaces,\n      onSelect: this.handleSelect,\n      searchOptions: searchOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) =>\n    /*#__PURE__*/\n\n    /*<div className=\"custom-search input-group col-lg-12 col-md-12 col-sm-12 col-xs-12\" id=\"originatingCity\" >                      \n        <span className=\"input-group-addon custom-select-icon\"><img src=\"/billingManagement/city.png\"/></span>\n        <input type=\"text\" name=\"originatingCity\" value={this.state.originatingCity} className=\"form-control\" placeholder=\"Search City..\"/>\n    </div>*/\n    React.createElement(\"div\", {\n      className: \"custom-search input-group col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-addon custom-select-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/billingManagement/city.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 77\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: 'Search City ...',\n      className: 'location-search-input form-control errorinputText',\n      id: \"address\",\n      name: \"address\"\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.address ? \"autocomplete-dropdown-container SearchListContainer\" : \"\",\n      style: {\n        \"zIndex\": 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 22\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 34\n        }\n      }, suggestion.description));\n    })))));\n  }\n\n}\n\nexport default withRouter(BookingCity);","map":{"version":3,"sources":["/home/mani/projects/jobportal/webapp/adminportal/src/projectadmin/BillingManagement/BillingTabs/BookingCity.js"],"names":["React","Component","$","axios","withRouter","PlacesAutocomplete","geocodeByAddress","getLatLng","BookingCity","constructor","props","handleChangePlaces","address","setState","console","log","handleSelect","then","results","i","address_components","length","b","types","area","long_name","city","state","stateCode","short_name","district","country","countryCode","pincode","statename","onSelectedItemsChange","data","getCity","catch","error","handleChange","bind","componentDidMount","label","reset","componentWillReceiveProps","nextProps","event","preventDefault","target","name","value","render","searchOptions","componentRestrictions","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","id","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":"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","sourcesContent":["\nimport React, { Component }            from 'react';\nimport $                               from 'jquery';\nimport axios                           from 'axios';\nimport {withRouter}                    from 'react-router-dom';\nimport PlacesAutocomplete, \n       {geocodeByAddress, getLatLng}   from \"react-places-autocomplete\";\n\nclass BookingCity extends Component {\n  \n   constructor(props) {\n      super(props);    \n      this.state = {\n         city:'',\n         address:''\n      };\n      this.handleChange = this.handleChange.bind(this);\n   }\n\n   componentDidMount(){\n      this.setState({\n         label       : this.props.label,\n         statename   : this.props.statename,\n         reset       : this.props.reset,\n      })\n   }\n\n   componentWillReceiveProps(nextProps){\n      this.setState({\n         statename   : nextProps.statename,\n         label       : nextProps.label,\n         reset       : nextProps.reset,\n      },()=>{\n         if(this.state.reset == true){\n            this.setState({\n               address  : \"\",\n               city     : \" \"\n            })\n         }\n      })    \n   }\n  \n    \n   handleChange(event){\n      event.preventDefault();\n      const target = event.target;\n      const name   = target.name;\n\n      this.setState({\n         [name] : event.target.value\n      },()=>{});\n   }\n\n   handleChangePlaces = address => {\n      this.setState({ address : address});\n      console.log(\"address = \",address);\n   };\n\n   handleSelect = address => {\n      geocodeByAddress(address)\n      .then((results) =>{ \n         for (var i = 0; i < results[0].address_components.length; i++) {\n            for (var b = 0; b < results[0].address_components[i].types.length; b++) {\n               switch (results[0].address_components[i].types[b]) {\n                  case 'sublocality_level_1':\n                     var area = results[0].address_components[i].long_name;\n                     break;\n                  case 'sublocality_level_2':\n                     area = results[0].address_components[i].long_name;\n                     break;\n                  case 'locality':\n                     var city = results[0].address_components[i].long_name;\n                     break;\n                  case 'administrative_area_level_1':\n                     var state = results[0].address_components[i].long_name;\n                     var stateCode = results[0].address_components[i].short_name;\n                     break;\n                  case 'administrative_area_level_2':\n                     var district = results[0].address_components[i].long_name;\n                     break;\n                  case 'country':\n                     var country = results[0].address_components[i].long_name;\n                     var countryCode = results[0].address_components[i].short_name;\n                     break; \n                  case 'postal_code':\n                     var pincode = results[0].address_components[i].long_name;\n                     break;\n                  default :\n                     break;\n               }\n            }\n         }\n\n         var statename = this.state.statename;\n         this.props.onSelectedItemsChange(statename,city);\n\n         var data = {\n            [statename] : city,\n         }\n         this.props.getCity(data);\n       \n      })     \n      .catch(error => console.error('Error', error));    \n      this.setState({ address : address});\n   };\n\n   render() {\n      const searchOptions = {\n         types                   : ['(cities)'],\n         componentRestrictions   : {country: \"in\"}\n      }\n      return (  \n         <div>\n            <label className=\"labelform col-lg-12 col-md-12 col-sm-12 col-xs-12\">{this.state.label}</label>\n            <PlacesAutocomplete\n               value         = {this.state.address}\n               onChange      = {this.handleChangePlaces}\n               onSelect      = {this.handleSelect}\n               searchOptions = {searchOptions}\n            >\n               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                  /*<div className=\"custom-search input-group col-lg-12 col-md-12 col-sm-12 col-xs-12\" id=\"originatingCity\" >                      \n                      <span className=\"input-group-addon custom-select-icon\"><img src=\"/billingManagement/city.png\"/></span>\n                      <input type=\"text\" name=\"originatingCity\" value={this.state.originatingCity} className=\"form-control\" placeholder=\"Search City..\"/>\n                  </div>*/\n                  <div className=\"custom-search input-group col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                     <span className=\"input-group-addon custom-select-icon\"><img src=\"/billingManagement/city.png\"/></span>\n                     <input\n                        {...getInputProps({\n                           placeholder : 'Search City ...',\n                           className   : 'location-search-input form-control errorinputText',\n                           id          : \"address\",\n                           name        : \"address\"\n                        })}\n                     />\n                     <div className={this.state.address ? \"autocomplete-dropdown-container SearchListContainer\" : \"\"} style={{\"zIndex\" : 4}}>\n                        {loading && <div>Loading...</div>}\n                        {suggestions.map(suggestion => {\n                           const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item';\n                              // inline style for demonstration purpose\n                           const style = suggestion.active ? { backgroundColor: '#fafafa', cursor: 'pointer' } : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                           \n                           return (\n                              <div {...getSuggestionItemProps(suggestion, {className, style,})} >\n                                 <span>{suggestion.description}</span>\n                              </div>\n                           );\n                        })}                      \n                     </div>\n                  </div>\n               )}\n            </PlacesAutocomplete>\n         </div>     \n      );\n   } \n}\nexport default withRouter(BookingCity); \n"]},"metadata":{},"sourceType":"module"}