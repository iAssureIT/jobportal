{"ast":null,"code":"var _jsxFileName = \"/home/mani/projects/jobportal/webapp/candidateportal/src/coreadmin/NotificationManagement/TemplateList.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport jQuery from 'jquery';\nimport axios from 'axios';\nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport { withRouter } from 'react-router-dom';\nimport 'bootstrap/js/tab.js';\nimport './NotificationTemplate.css';\nimport './notification.css';\nimport TemplateContent from './TemplateContent.js';\n\nclass TemplateList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: props.type,\n      templateDetails: [],\n      templateValues: [],\n      status: \"\",\n      filteredSelectors: props.filteredSelectors\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      type: this.props.type,\n      filteredSelectors: this.props.filteredSelectors\n    }, () => {\n      this.getData();\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      type: nextProps.type,\n      filteredSelectors: nextProps.filteredSelectors\n    }, () => {\n      this.getData();\n    });\n  }\n\n  getData() {\n    if (this.state.filteredSelectors != \"\") {\n      axios.post(\"/api/masternotifications/get/filterTemplate/\" + this.state.type, this.state.filteredSelectors).then(response => {\n        if (response.data) {\n          this.setState({\n            templateDetails: response.data\n          }, () => {\n            if (this.state.templateDetails && this.state.templateDetails.length > 0) {\n              $('#' + this.state.templateDetails[0]._id).toggleClass('active').siblings().removeClass('active');\n              document.getElementById(this.state.templateDetails[0]._id).classList.add(\"active\");\n              axios.get('/api/masternotifications/get/' + this.state.templateDetails[0]._id).then(response => {\n                this.setState({\n                  templateValues: response.data,\n                  status: response.data.status\n                });\n\n                if (response.data.company === null) {\n                  this.setState({\n                    companyname: 'All'\n                  });\n                } else {\n                  var companyId = response.data.company;\n                  axios.get('/api/entitymaster/get/one/' + companyId).then(res => {\n                    this.setState({\n                      companyname: res.data[0].companyName\n                    });\n                  }).catch(error => {\n                    console.log(error);\n                  });\n                }\n              }).catch(error => {\n                console.log(error);\n              });\n            }\n          });\n        }\n      }).catch(error => {});\n    } else {\n      axios.get('/api/masternotifications/get/listByType/' + this.state.type).then(response => {\n        this.setState({\n          templateDetails: response.data\n        }, () => {\n          if (this.state.templateDetails && this.state.templateDetails.length > 0) {\n            $('#' + this.state.templateDetails[0]._id).toggleClass('active').siblings().removeClass('active');\n            document.getElementById(this.state.templateDetails[0]._id).classList.add(\"active\");\n            axios.get('/api/masternotifications/get/' + this.state.templateDetails[0]._id).then(response => {\n              this.setState({\n                templateValues: response.data,\n                status: response.data.status\n              });\n\n              if (response.data.company === null) {\n                this.setState({\n                  companyname: 'All'\n                });\n              } else {\n                var companyId = response.data.company;\n                axios.get('/api/entitymaster/get/one/' + companyId).then(res => {\n                  this.setState({\n                    companyname: res.data[0].companyName\n                  });\n                }).catch(error => {\n                  console.log(error);\n                });\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n          }\n        });\n      }).catch(err => {\n        console.log('error: ', err);\n      });\n    }\n  }\n\n  showTab(event) {\n    const target = event.target;\n    var id = $(event.currentTarget).attr('id');\n    axios.get('/api/masternotifications/get/' + id).then(response => {\n      this.setState({\n        templateValues: response.data,\n        status: response.data.status\n      });\n      $('#' + response.data._id).toggleClass('active').siblings().removeClass('active');\n\n      if (response.data.company === null) {\n        this.setState({\n          companyname: 'All'\n        });\n      } else {\n        var companyId = response.data.company;\n        axios.get('/api/entitymaster/get/one/' + companyId).then(res => {\n          this.setState({\n            companyname: res.data[0].companyName\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 contentWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.templateDetails && this.state.templateDetails.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3 col-sm-3 nopadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"brand-pills nopadding\",\n      role: \"tablist\",\n      id: \"leftTabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.templateDetails.map((data, index) => {\n      return React.createElement(\"li\", {\n        className: \"pill_temp\",\n        key: index,\n        onClick: this.showTab.bind(this),\n        id: data._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, data.role + '-' + data.templateName);\n    }))), React.createElement(\"div\", {\n      className: \"col-md-9 col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(TemplateContent, {\n      templateValues: this.state.templateValues,\n      getData: this.getData.bind(this),\n      company: this.state.companyname,\n      status: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 noContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"No templates created yet for \", this.state.type));\n  }\n\n}\n\nexport default TemplateList;","map":{"version":3,"sources":["/home/mani/projects/jobportal/webapp/candidateportal/src/coreadmin/NotificationManagement/TemplateList.js"],"names":["React","Component","$","jQuery","axios","moment","swal","withRouter","TemplateContent","TemplateList","constructor","props","state","type","templateDetails","templateValues","status","filteredSelectors","componentDidMount","setState","getData","componentWillReceiveProps","nextProps","post","then","response","data","length","_id","toggleClass","siblings","removeClass","document","getElementById","classList","add","get","company","companyname","companyId","res","companyName","catch","error","console","log","err","showTab","event","target","id","currentTarget","attr","render","map","index","bind","role","templateName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $                    from 'jquery';\nimport jQuery               from 'jquery';\nimport axios                from 'axios';\nimport moment               from 'moment';\nimport swal                 from 'sweetalert';\nimport { withRouter }       from 'react-router-dom';\nimport 'bootstrap/js/tab.js';\nimport './NotificationTemplate.css';\nimport './notification.css';\n\nimport TemplateContent from './TemplateContent.js';\n\n\nclass TemplateList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           type : props.type,\n           templateDetails : [], \n           templateValues : [],\n           status:\"\",\n           filteredSelectors: props.filteredSelectors \n        };\n    }\n    componentDidMount(){\n        this.setState({\n            type : this.props.type,\n            filteredSelectors : this.props.filteredSelectors\n        },()=>{this.getData()})\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            type : nextProps.type,\n            filteredSelectors : nextProps.filteredSelectors\n        },()=>{this.getData()})\n    }\n\n    getData(){\n        if(this.state.filteredSelectors != \"\"){\n            axios.post(\"/api/masternotifications/get/filterTemplate/\"+this.state.type,this.state.filteredSelectors)\n            .then((response) => {\n              if(response.data){ \n                this.setState({\n                    templateDetails:response.data,\n                },()=>{\n                    if(this.state.templateDetails && this.state.templateDetails.length > 0){\n                        $('#'+this.state.templateDetails[0]._id).toggleClass('active').siblings().removeClass('active');\n                        document.getElementById(this.state.templateDetails[0]._id).classList.add(\"active\")\n                        axios.get('/api/masternotifications/get/'+this.state.templateDetails[0]._id)\n                        .then((response) => {\n                            this.setState({\n                                templateValues: response.data,\n                                status:response.data.status\n                            })\n                            if(response.data.company === null){\n                                this.setState({\n                                    companyname : 'All'\n                                })\n                            }else{\n                                var companyId = response.data.company ;\n                                axios.get('/api/entitymaster/get/one/'+companyId)\n                                .then((res)=>{\n                                    this.setState({companyname : res.data[0].companyName})\n                                })\n                                .catch((error)=>{console.log(error)})\n                            }\n                        })\n                        .catch((error)=>{console.log(error)})\n                    }\n                })\n              }\n            })\n            .catch((error) => {\n            })\n        }else{\n            axios.get('/api/masternotifications/get/listByType/'+this.state.type)\n           .then((response) => { \n                this.setState({\n                    templateDetails:response.data\n                },()=>{\n                    if(this.state.templateDetails && this.state.templateDetails.length > 0){\n                        $('#'+this.state.templateDetails[0]._id).toggleClass('active').siblings().removeClass('active');\n                        document.getElementById(this.state.templateDetails[0]._id).classList.add(\"active\")\n                        axios.get('/api/masternotifications/get/'+this.state.templateDetails[0]._id)\n                        .then((response) => {\n                            this.setState({\n                                templateValues: response.data,\n                                status:response.data.status\n                            })\n                            if(response.data.company === null){\n                                this.setState({\n                                    companyname : 'All'\n                                })\n                            }else{\n                                var companyId = response.data.company ;\n                                axios.get('/api/entitymaster/get/one/'+companyId)\n                                .then((res)=>{\n                                    this.setState({companyname : res.data[0].companyName})\n                                })\n                                .catch((error)=>{console.log(error)})\n                            }\n                        })\n                        .catch((error)=>{console.log(error)})\n                    }\n                })\n            })\n           .catch((err)=>{console.log('error: ',err)})\n            }\n       \n    }\n\n    showTab(event){\n\t\tconst target = event.target;\n        var id = $(event.currentTarget).attr('id');\n        axios.get('/api/masternotifications/get/'+id)\n        .then((response) => {\n            this.setState({\n                templateValues: response.data,\n                status: response.data.status\n            })\n            $('#'+response.data._id).toggleClass('active').siblings().removeClass('active');\n            if(response.data.company === null){\n                this.setState({\n                    companyname : 'All'\n                })\n            }else{\n                var companyId = response.data.company ;\n                axios.get('/api/entitymaster/get/one/'+companyId)\n                .then((res)=>{\n                    this.setState({companyname : res.data[0].companyName})\n                })\n                .catch((error)=>{console.log(error)})\n            }\n        })\n        .catch((error)=>{console.log(error)})\n    }\n\n    \n    render() {\n\n        return (\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 contentWrapper\">\n            {this.state.templateDetails && this.state.templateDetails.length > 0 ?\n                <div>\n                    <div className=\"col-md-3 col-sm-3 nopadding\">\n                        <ul className=\"brand-pills nopadding\" role=\"tablist\" id=\"leftTabs\">\n                        {this.state.templateDetails.map((data,index)=>{\n                            return(\n                                <li className=\"pill_temp\" key={index} onClick={this.showTab.bind(this)} id={data._id} >{data.role+'-'+data.templateName}</li>\n                            )\n                        })}\n                        </ul>\n                    </div>\n                    <div className=\"col-md-9 col-sm-9\">\n                        <TemplateContent templateValues={this.state.templateValues} getData={this.getData.bind(this)} company={this.state.companyname} status={this.state.status} />\n                    </div>\n                </div>\n                :\n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 noContent\">No templates created yet for {this.state.type}</div>\n            }\n            </div>\n        );\n    }\n}\nexport default TemplateList;\n\n"]},"metadata":{},"sourceType":"module"}